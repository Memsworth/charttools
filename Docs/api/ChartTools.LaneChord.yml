### YamlMime:ManagedReference
items:
- uid: ChartTools.LaneChord
  commentId: T:ChartTools.LaneChord
  id: LaneChord
  parent: ChartTools
  children:
  - ChartTools.LaneChord.#ctor
  - ChartTools.LaneChord.#ctor(System.UInt32)
  - ChartTools.LaneChord.CreateNote(System.Byte,System.UInt32)
  - ChartTools.LaneChord.GetNotes
  - ChartTools.LaneChord.Notes
  - ChartTools.LaneChord.OpenExclusivity
  - ChartTools.LaneChord.Position
  langs:
  - csharp
  - vb
  name: LaneChord
  nameWithType: LaneChord
  fullName: ChartTools.LaneChord
  type: Class
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: LaneChord
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 5
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: 'public abstract class LaneChord : IChord, ITrackObject, IReadOnlyTrackObject, IEquatable<IReadOnlyTrackObject>'
    content.vb: Public MustInherit Class LaneChord Implements IChord, ITrackObject, IReadOnlyTrackObject, IEquatable(Of IReadOnlyTrackObject)
  inheritance:
  - System.Object
  derivedClasses:
  - ChartTools.LaneChord`3
  implements:
  - ChartTools.IChord
  - ChartTools.ITrackObject
  - ChartTools.IReadOnlyTrackObject
  - System.IEquatable{ChartTools.IReadOnlyTrackObject}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ChartTools.IChord.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  - ChartTools.ITrackObject.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  - ChartTools.LaneChord.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.LaneChord[])
- uid: ChartTools.LaneChord.Position
  commentId: P:ChartTools.LaneChord.Position
  id: Position
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: LaneChord.Position
  fullName: ChartTools.LaneChord.Position
  type: Property
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Position
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 7
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Tick number on the track.
  remarks: A tick represents a subdivision of a beat. The number of subdivisions per beat is stored in <xref href="ChartTools.IO.Formatting.FormattingRules.Resolution" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public uint Position { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Position As UInteger
  overload: ChartTools.LaneChord.Position*
  implements:
  - ChartTools.ITrackObject.Position
  - ChartTools.IReadOnlyTrackObject.Position
- uid: ChartTools.LaneChord.Notes
  commentId: P:ChartTools.LaneChord.Notes
  id: Notes
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: Notes
  nameWithType: LaneChord.Notes
  fullName: ChartTools.LaneChord.Notes
  type: Property
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Notes
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public IReadOnlyCollection<LaneNote> Notes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{ChartTools.LaneNote}
    content.vb: Public ReadOnly Property Notes As IReadOnlyCollection(Of LaneNote)
  overload: ChartTools.LaneChord.Notes*
- uid: ChartTools.LaneChord.OpenExclusivity
  commentId: P:ChartTools.LaneChord.OpenExclusivity
  id: OpenExclusivity
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: OpenExclusivity
  nameWithType: LaneChord.OpenExclusivity
  fullName: ChartTools.LaneChord.OpenExclusivity
  type: Property
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: OpenExclusivity
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 15
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Defines if open notes can be mixed with other notes for this chord type. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> indicated open notes cannot be mixed.
  example: []
  syntax:
    content: public abstract bool OpenExclusivity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property OpenExclusivity As Boolean
  overload: ChartTools.LaneChord.OpenExclusivity*
- uid: ChartTools.LaneChord.#ctor
  commentId: M:ChartTools.LaneChord.#ctor
  id: '#ctor'
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: LaneChord()
  nameWithType: LaneChord.LaneChord()
  fullName: ChartTools.LaneChord.LaneChord()
  type: Constructor
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: .ctor
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 19
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public LaneChord()
    content.vb: Public Sub New()
  overload: ChartTools.LaneChord.#ctor*
  nameWithType.vb: LaneChord.New()
  fullName.vb: ChartTools.LaneChord.New()
  name.vb: New()
- uid: ChartTools.LaneChord.#ctor(System.UInt32)
  commentId: M:ChartTools.LaneChord.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: LaneChord(uint)
  nameWithType: LaneChord.LaneChord(uint)
  fullName: ChartTools.LaneChord.LaneChord(uint)
  type: Constructor
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: .ctor
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 20
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public LaneChord(uint position)
    parameters:
    - id: position
      type: System.UInt32
    content.vb: Public Sub New(position As UInteger)
  overload: ChartTools.LaneChord.#ctor*
  nameWithType.vb: LaneChord.New(UInteger)
  fullName.vb: ChartTools.LaneChord.New(UInteger)
  name.vb: New(UInteger)
- uid: ChartTools.LaneChord.CreateNote(System.Byte,System.UInt32)
  commentId: M:ChartTools.LaneChord.CreateNote(System.Byte,System.UInt32)
  id: CreateNote(System.Byte,System.UInt32)
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: CreateNote(byte, uint)
  nameWithType: LaneChord.CreateNote(byte, uint)
  fullName: ChartTools.LaneChord.CreateNote(byte, uint)
  type: Method
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CreateNote
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 22
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public abstract LaneNote CreateNote(byte index, uint sustain = 0)
    parameters:
    - id: index
      type: System.Byte
    - id: sustain
      type: System.UInt32
    return:
      type: ChartTools.LaneNote
    content.vb: Public MustOverride Function CreateNote(index As Byte, sustain As UInteger = 0) As LaneNote
  overload: ChartTools.LaneChord.CreateNote*
  nameWithType.vb: LaneChord.CreateNote(Byte, UInteger)
  fullName.vb: ChartTools.LaneChord.CreateNote(Byte, UInteger)
  name.vb: CreateNote(Byte, UInteger)
- uid: ChartTools.LaneChord.GetNotes
  commentId: M:ChartTools.LaneChord.GetNotes
  id: GetNotes
  parent: ChartTools.LaneChord
  langs:
  - csharp
  - vb
  name: GetNotes()
  nameWithType: LaneChord.GetNotes()
  fullName: ChartTools.LaneChord.GetNotes()
  type: Method
  source:
    remote:
      path: ChartTools/Chords/LaneChord.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetNotes
    path: ../ChartTools/Chords/LaneChord.cs
    startLine: 25
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract IReadOnlyCollection<LaneNote> GetNotes()
    return:
      type: System.Collections.Generic.IReadOnlyCollection{ChartTools.LaneNote}
    content.vb: Protected MustOverride Function GetNotes() As IReadOnlyCollection(Of LaneNote)
  overload: ChartTools.LaneChord.GetNotes*
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ChartTools.IChord
  commentId: T:ChartTools.IChord
  parent: ChartTools
  href: ChartTools.IChord.html
  name: IChord
  nameWithType: IChord
  fullName: ChartTools.IChord
- uid: ChartTools.ITrackObject
  commentId: T:ChartTools.ITrackObject
  parent: ChartTools
  href: ChartTools.ITrackObject.html
  name: ITrackObject
  nameWithType: ITrackObject
  fullName: ChartTools.ITrackObject
- uid: ChartTools.IReadOnlyTrackObject
  commentId: T:ChartTools.IReadOnlyTrackObject
  parent: ChartTools
  href: ChartTools.IReadOnlyTrackObject.html
  name: IReadOnlyTrackObject
  nameWithType: IReadOnlyTrackObject
  fullName: ChartTools.IReadOnlyTrackObject
- uid: System.IEquatable{ChartTools.IReadOnlyTrackObject}
  commentId: T:System.IEquatable{ChartTools.IReadOnlyTrackObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IReadOnlyTrackObject>
  nameWithType: IEquatable<IReadOnlyTrackObject>
  fullName: System.IEquatable<ChartTools.IReadOnlyTrackObject>
  nameWithType.vb: IEquatable(Of IReadOnlyTrackObject)
  fullName.vb: System.IEquatable(Of ChartTools.IReadOnlyTrackObject)
  name.vb: IEquatable(Of IReadOnlyTrackObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.IReadOnlyTrackObject
    name: IReadOnlyTrackObject
    href: ChartTools.IReadOnlyTrackObject.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IReadOnlyTrackObject
    name: IReadOnlyTrackObject
    href: ChartTools.IReadOnlyTrackObject.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.IChord.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  name: Rescale(IChord, float)
  nameWithType: TempoRescaler.Rescale(IChord, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord, float)
  nameWithType.vb: TempoRescaler.Rescale(IChord, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord, Single)
  name.vb: Rescale(IChord, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  - name: (
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  - name: (
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.ITrackObject.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  name: Rescale(ITrackObject, float)
  nameWithType: TempoRescaler.Rescale(ITrackObject, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject, float)
  nameWithType.vb: TempoRescaler.Rescale(ITrackObject, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject, Single)
  name.vb: Rescale(ITrackObject, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  - name: (
  - uid: ChartTools.ITrackObject
    name: ITrackObject
    href: ChartTools.ITrackObject.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  - name: (
  - uid: ChartTools.ITrackObject
    name: ITrackObject
    href: ChartTools.ITrackObject.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.LaneChord.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.LaneChord[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<LaneChord>(LaneChord, bool, bool, params LaneChord[])
  nameWithType: PropertyMerger.Merge<LaneChord>(LaneChord, bool, bool, params LaneChord[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.LaneChord>(ChartTools.LaneChord, bool, bool, params ChartTools.LaneChord[])
  nameWithType.vb: PropertyMerger.Merge(Of LaneChord)(LaneChord, Boolean, Boolean, ParamArray LaneChord())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.LaneChord)(ChartTools.LaneChord, Boolean, Boolean, ParamArray ChartTools.LaneChord())
  name.vb: Merge(Of LaneChord)(LaneChord, Boolean, Boolean, ParamArray LaneChord())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.LaneChord,System.Boolean,System.Boolean,ChartTools.LaneChord[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: '>'
  - name: (
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.LaneChord,System.Boolean,System.Boolean,ChartTools.LaneChord[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: )
  - name: (
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.LaneChord
    name: LaneChord
    href: ChartTools.LaneChord.html
  - name: (
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  name: Rescale(IChord, float)
  nameWithType: TempoRescaler.Rescale(IChord, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord, float)
  nameWithType.vb: TempoRescaler.Rescale(IChord, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord, Single)
  name.vb: Rescale(IChord, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  - name: (
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.IChord,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_IChord_System_Single_
  - name: (
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.TempoRescaler
  commentId: T:ChartTools.Tools.TempoRescaler
  parent: ChartTools.Tools
  href: ChartTools.Tools.TempoRescaler.html
  name: TempoRescaler
  nameWithType: TempoRescaler
  fullName: ChartTools.Tools.TempoRescaler
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  name: Rescale(ITrackObject, float)
  nameWithType: TempoRescaler.Rescale(ITrackObject, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject, float)
  nameWithType.vb: TempoRescaler.Rescale(ITrackObject, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject, Single)
  name.vb: Rescale(ITrackObject, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  - name: (
  - uid: ChartTools.ITrackObject
    name: ITrackObject
    href: ChartTools.ITrackObject.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.ITrackObject,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_ITrackObject_System_Single_
  - name: (
  - uid: ChartTools.ITrackObject
    name: ITrackObject
    href: ChartTools.ITrackObject.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.IO.Formatting.FormattingRules.Resolution
  commentId: P:ChartTools.IO.Formatting.FormattingRules.Resolution
  href: ChartTools.IO.Formatting.FormattingRules.html#ChartTools_IO_Formatting_FormattingRules_Resolution
  name: Resolution
  nameWithType: FormattingRules.Resolution
  fullName: ChartTools.IO.Formatting.FormattingRules.Resolution
- uid: ChartTools.LaneChord.Position*
  commentId: Overload:ChartTools.LaneChord.Position
  href: ChartTools.LaneChord.html#ChartTools_LaneChord_Position
  name: Position
  nameWithType: LaneChord.Position
  fullName: ChartTools.LaneChord.Position
- uid: ChartTools.ITrackObject.Position
  commentId: P:ChartTools.ITrackObject.Position
  parent: ChartTools.ITrackObject
  href: ChartTools.ITrackObject.html#ChartTools_ITrackObject_Position
  name: Position
  nameWithType: ITrackObject.Position
  fullName: ChartTools.ITrackObject.Position
- uid: ChartTools.IReadOnlyTrackObject.Position
  commentId: P:ChartTools.IReadOnlyTrackObject.Position
  parent: ChartTools.IReadOnlyTrackObject
  href: ChartTools.IReadOnlyTrackObject.html#ChartTools_IReadOnlyTrackObject_Position
  name: Position
  nameWithType: IReadOnlyTrackObject.Position
  fullName: ChartTools.IReadOnlyTrackObject.Position
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ChartTools.LaneChord.Notes*
  commentId: Overload:ChartTools.LaneChord.Notes
  href: ChartTools.LaneChord.html#ChartTools_LaneChord_Notes
  name: Notes
  nameWithType: LaneChord.Notes
  fullName: ChartTools.LaneChord.Notes
- uid: System.Collections.Generic.IReadOnlyCollection{ChartTools.LaneNote}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{ChartTools.LaneNote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<LaneNote>
  nameWithType: IReadOnlyCollection<LaneNote>
  fullName: System.Collections.Generic.IReadOnlyCollection<ChartTools.LaneNote>
  nameWithType.vb: IReadOnlyCollection(Of LaneNote)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of ChartTools.LaneNote)
  name.vb: IReadOnlyCollection(Of LaneNote)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: ChartTools.LaneNote
    name: LaneNote
    href: ChartTools.LaneNote.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.LaneNote
    name: LaneNote
    href: ChartTools.LaneNote.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ChartTools.LaneChord.OpenExclusivity*
  commentId: Overload:ChartTools.LaneChord.OpenExclusivity
  href: ChartTools.LaneChord.html#ChartTools_LaneChord_OpenExclusivity
  name: OpenExclusivity
  nameWithType: LaneChord.OpenExclusivity
  fullName: ChartTools.LaneChord.OpenExclusivity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ChartTools.LaneChord.#ctor*
  commentId: Overload:ChartTools.LaneChord.#ctor
  href: ChartTools.LaneChord.html#ChartTools_LaneChord__ctor
  name: LaneChord
  nameWithType: LaneChord.LaneChord
  fullName: ChartTools.LaneChord.LaneChord
  nameWithType.vb: LaneChord.New
  fullName.vb: ChartTools.LaneChord.New
  name.vb: New
- uid: ChartTools.LaneChord.CreateNote*
  commentId: Overload:ChartTools.LaneChord.CreateNote
  href: ChartTools.LaneChord.html#ChartTools_LaneChord_CreateNote_System_Byte_System_UInt32_
  name: CreateNote
  nameWithType: LaneChord.CreateNote
  fullName: ChartTools.LaneChord.CreateNote
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: ChartTools.LaneNote
  commentId: T:ChartTools.LaneNote
  parent: ChartTools
  href: ChartTools.LaneNote.html
  name: LaneNote
  nameWithType: LaneNote
  fullName: ChartTools.LaneNote
- uid: ChartTools.LaneChord.GetNotes*
  commentId: Overload:ChartTools.LaneChord.GetNotes
  href: ChartTools.LaneChord.html#ChartTools_LaneChord_GetNotes
  name: GetNotes
  nameWithType: LaneChord.GetNotes
  fullName: ChartTools.LaneChord.GetNotes
