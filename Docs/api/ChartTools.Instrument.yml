### YamlMime:ManagedReference
items:
- uid: ChartTools.Instrument
  commentId: T:ChartTools.Instrument
  id: Instrument
  parent: ChartTools
  children:
  - ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  - ChartTools.Instrument.Easy
  - ChartTools.Instrument.Expert
  - ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  - ChartTools.Instrument.GetEasy
  - ChartTools.Instrument.GetExistingTracks
  - ChartTools.Instrument.GetExpert
  - ChartTools.Instrument.GetHard
  - ChartTools.Instrument.GetIdentity
  - ChartTools.Instrument.GetMedium
  - ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  - ChartTools.Instrument.GetTracks
  - ChartTools.Instrument.Hard
  - ChartTools.Instrument.InstrumentIdentity
  - ChartTools.Instrument.InstrumentType
  - ChartTools.Instrument.IsEmpty
  - ChartTools.Instrument.Medium
  - ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  - ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  - ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  - ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  - ChartTools.Instrument.SpecialPhrases
  - ChartTools.Instrument.ToString
  langs:
  - csharp
  - vb
  name: Instrument
  nameWithType: Instrument
  fullName: ChartTools.Instrument
  type: Class
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Instrument
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 11
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Base class for instruments
  example: []
  syntax:
    content: 'public abstract record Instrument : IEmptyVerifiable, IEquatable<Instrument>'
    content.vb: Public MustInherit Class Instrument Implements IEmptyVerifiable, IEquatable(Of Instrument)
  inheritance:
  - System.Object
  derivedClasses:
  - ChartTools.Instrument`1
  implements:
  - ChartTools.IEmptyVerifiable
  - System.IEquatable{ChartTools.Instrument}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - ChartTools.Instrument.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Instrument[])
  - ChartTools.Instrument.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
- uid: ChartTools.Instrument.IsEmpty
  commentId: P:ChartTools.Instrument.IsEmpty
  id: IsEmpty
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Instrument.IsEmpty
  fullName: ChartTools.Instrument.IsEmpty
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: IsEmpty
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 14
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if containing no data
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: ChartTools.Instrument.IsEmpty*
  implements:
  - ChartTools.IEmptyVerifiable.IsEmpty
- uid: ChartTools.Instrument.InstrumentIdentity
  commentId: P:ChartTools.Instrument.InstrumentIdentity
  id: InstrumentIdentity
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: InstrumentIdentity
  nameWithType: Instrument.InstrumentIdentity
  fullName: ChartTools.Instrument.InstrumentIdentity
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: InstrumentIdentity
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 19
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Identity of the instrument the object belongs to
  example: []
  syntax:
    content: public InstrumentIdentity InstrumentIdentity { get; }
    parameters: []
    return:
      type: ChartTools.InstrumentIdentity
    content.vb: Public ReadOnly Property InstrumentIdentity As InstrumentIdentity
  overload: ChartTools.Instrument.InstrumentIdentity*
- uid: ChartTools.Instrument.InstrumentType
  commentId: P:ChartTools.Instrument.InstrumentType
  id: InstrumentType
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: InstrumentType
  nameWithType: Instrument.InstrumentType
  fullName: ChartTools.Instrument.InstrumentType
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: InstrumentType
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 24
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Type of instrument
  example: []
  syntax:
    content: public InstrumentType InstrumentType { get; }
    parameters: []
    return:
      type: ChartTools.InstrumentType
    content.vb: Public ReadOnly Property InstrumentType As InstrumentType
  overload: ChartTools.Instrument.InstrumentType*
- uid: ChartTools.Instrument.SpecialPhrases
  commentId: P:ChartTools.Instrument.SpecialPhrases
  id: SpecialPhrases
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: SpecialPhrases
  nameWithType: Instrument.SpecialPhrases
  fullName: ChartTools.Instrument.SpecialPhrases
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SpecialPhrases
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 48
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of special phrases applied to all difficulties
  example: []
  syntax:
    content: public List<InstrumentSpecialPhrase> SpecialPhrases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ChartTools.InstrumentSpecialPhrase}
    content.vb: Public Property SpecialPhrases As List(Of InstrumentSpecialPhrase)
  overload: ChartTools.Instrument.SpecialPhrases*
- uid: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  commentId: M:ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  id: GetDifficulty(ChartTools.InstrumentDifficultySet)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetDifficulty(InstrumentDifficultySet)
  nameWithType: Instrument.GetDifficulty(InstrumentDifficultySet)
  fullName: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetDifficulty
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 51
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the difficulty for an <xref href="ChartTools.InstrumentIdentity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sbyte? GetDifficulty(InstrumentDifficultySet difficulties)
    parameters:
    - id: difficulties
      type: ChartTools.InstrumentDifficultySet
    return:
      type: System.Nullable{System.SByte}
    content.vb: Public Function GetDifficulty(difficulties As InstrumentDifficultySet) As SByte?
  overload: ChartTools.Instrument.GetDifficulty*
- uid: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  commentId: M:ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  id: SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: SetDifficulty(InstrumentDifficultySet, sbyte?)
  nameWithType: Instrument.SetDifficulty(InstrumentDifficultySet, sbyte?)
  fullName: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet, sbyte?)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SetDifficulty
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 53
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the difficulty for an <xref href="ChartTools.InstrumentIdentity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetDifficulty(InstrumentDifficultySet difficulties, sbyte? difficulty)
    parameters:
    - id: difficulties
      type: ChartTools.InstrumentDifficultySet
    - id: difficulty
      type: System.Nullable{System.SByte}
    content.vb: Public Sub SetDifficulty(difficulties As InstrumentDifficultySet, difficulty As SByte?)
  overload: ChartTools.Instrument.SetDifficulty*
  nameWithType.vb: Instrument.SetDifficulty(InstrumentDifficultySet, SByte?)
  fullName.vb: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet, SByte?)
  name.vb: SetDifficulty(InstrumentDifficultySet, SByte?)
- uid: ChartTools.Instrument.Easy
  commentId: P:ChartTools.Instrument.Easy
  id: Easy
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: Easy
  nameWithType: Instrument.Easy
  fullName: ChartTools.Instrument.Easy
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Easy
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 58
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Easy track
  example: []
  syntax:
    content: public Track? Easy { get; }
    parameters: []
    return:
      type: ChartTools.Track
    content.vb: Public ReadOnly Property Easy As Track
  overload: ChartTools.Instrument.Easy*
- uid: ChartTools.Instrument.Medium
  commentId: P:ChartTools.Instrument.Medium
  id: Medium
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: Medium
  nameWithType: Instrument.Medium
  fullName: ChartTools.Instrument.Medium
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Medium
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 62
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Medium track
  example: []
  syntax:
    content: public Track? Medium { get; }
    parameters: []
    return:
      type: ChartTools.Track
    content.vb: Public ReadOnly Property Medium As Track
  overload: ChartTools.Instrument.Medium*
- uid: ChartTools.Instrument.Hard
  commentId: P:ChartTools.Instrument.Hard
  id: Hard
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: Hard
  nameWithType: Instrument.Hard
  fullName: ChartTools.Instrument.Hard
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Hard
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 66
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Hard track
  example: []
  syntax:
    content: public Track? Hard { get; }
    parameters: []
    return:
      type: ChartTools.Track
    content.vb: Public ReadOnly Property Hard As Track
  overload: ChartTools.Instrument.Hard*
- uid: ChartTools.Instrument.Expert
  commentId: P:ChartTools.Instrument.Expert
  id: Expert
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: Expert
  nameWithType: Instrument.Expert
  fullName: ChartTools.Instrument.Expert
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Expert
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 70
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Expert track
  example: []
  syntax:
    content: public Track? Expert { get; }
    parameters: []
    return:
      type: ChartTools.Track
    content.vb: Public ReadOnly Property Expert As Track
  overload: ChartTools.Instrument.Expert*
- uid: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  id: GetTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetTrack(Difficulty)
  nameWithType: Instrument.GetTrack(Difficulty)
  fullName: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetTrack
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 75
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the track matching a difficulty.
  example: []
  syntax:
    content: public abstract Track? GetTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
    return:
      type: ChartTools.Track
    content.vb: Public MustOverride Function GetTrack(difficulty As Difficulty) As Track
  overload: ChartTools.Instrument.GetTrack*
- uid: ChartTools.Instrument.GetEasy
  commentId: M:ChartTools.Instrument.GetEasy
  id: GetEasy
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetEasy()
  nameWithType: Instrument.GetEasy()
  fullName: ChartTools.Instrument.GetEasy()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetEasy
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 77
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract Track? GetEasy()
    return:
      type: ChartTools.Track
    content.vb: Protected MustOverride Function GetEasy() As Track
  overload: ChartTools.Instrument.GetEasy*
- uid: ChartTools.Instrument.GetMedium
  commentId: M:ChartTools.Instrument.GetMedium
  id: GetMedium
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetMedium()
  nameWithType: Instrument.GetMedium()
  fullName: ChartTools.Instrument.GetMedium()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetMedium
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 78
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract Track? GetMedium()
    return:
      type: ChartTools.Track
    content.vb: Protected MustOverride Function GetMedium() As Track
  overload: ChartTools.Instrument.GetMedium*
- uid: ChartTools.Instrument.GetHard
  commentId: M:ChartTools.Instrument.GetHard
  id: GetHard
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetHard()
  nameWithType: Instrument.GetHard()
  fullName: ChartTools.Instrument.GetHard()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetHard
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 79
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract Track? GetHard()
    return:
      type: ChartTools.Track
    content.vb: Protected MustOverride Function GetHard() As Track
  overload: ChartTools.Instrument.GetHard*
- uid: ChartTools.Instrument.GetExpert
  commentId: M:ChartTools.Instrument.GetExpert
  id: GetExpert
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetExpert()
  nameWithType: Instrument.GetExpert()
  fullName: ChartTools.Instrument.GetExpert()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetExpert
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 80
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract Track? GetExpert()
    return:
      type: ChartTools.Track
    content.vb: Protected MustOverride Function GetExpert() As Track
  overload: ChartTools.Instrument.GetExpert*
- uid: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  id: CreateTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: CreateTrack(Difficulty)
  nameWithType: Instrument.CreateTrack(Difficulty)
  fullName: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CreateTrack
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 86
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates a track
  example: []
  syntax:
    content: public abstract Track CreateTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
      description: Difficulty of the track
    return:
      type: ChartTools.Track
    content.vb: Public MustOverride Function CreateTrack(difficulty As Difficulty) As Track
  overload: ChartTools.Instrument.CreateTrack*
- uid: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  id: RemoveTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: RemoveTrack(Difficulty)
  nameWithType: Instrument.RemoveTrack(Difficulty)
  fullName: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: RemoveTrack
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 91
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes a track.
  example: []
  syntax:
    content: public abstract bool RemoveTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
      description: Difficulty of the target track
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function RemoveTrack(difficulty As Difficulty) As Boolean
  overload: ChartTools.Instrument.RemoveTrack*
- uid: ChartTools.Instrument.GetTracks
  commentId: M:ChartTools.Instrument.GetTracks
  id: GetTracks
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetTracks()
  nameWithType: Instrument.GetTracks()
  fullName: ChartTools.Instrument.GetTracks()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetTracks
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 96
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates an array containing all tracks.
  example: []
  syntax:
    content: public virtual Track?[] GetTracks()
    return:
      type: ChartTools.Track[]
    content.vb: Public Overridable Function GetTracks() As Track()
  overload: ChartTools.Instrument.GetTracks*
- uid: ChartTools.Instrument.GetExistingTracks
  commentId: M:ChartTools.Instrument.GetExistingTracks
  id: GetExistingTracks
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetExistingTracks()
  nameWithType: Instrument.GetExistingTracks()
  fullName: ChartTools.Instrument.GetExistingTracks()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetExistingTracks
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 100
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates an array containing all tracks with data.
  example: []
  syntax:
    content: public virtual IEnumerable<Track> GetExistingTracks()
    return:
      type: System.Collections.Generic.IEnumerable{ChartTools.Track}
    content.vb: Public Overridable Function GetExistingTracks() As IEnumerable(Of Track)
  overload: ChartTools.Instrument.GetExistingTracks*
- uid: ChartTools.Instrument.GetIdentity
  commentId: M:ChartTools.Instrument.GetIdentity
  id: GetIdentity
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: GetIdentity()
  nameWithType: Instrument.GetIdentity()
  fullName: ChartTools.Instrument.GetIdentity()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetIdentity
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 102
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract InstrumentIdentity GetIdentity()
    return:
      type: ChartTools.InstrumentIdentity
    content.vb: Protected MustOverride Function GetIdentity() As InstrumentIdentity
  overload: ChartTools.Instrument.GetIdentity*
- uid: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  commentId: M:ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  id: ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: ShareLocalEvents(TrackObjectSource)
  nameWithType: Instrument.ShareLocalEvents(TrackObjectSource)
  fullName: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ShareLocalEvents
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 107
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gives all tracks the same local events.
  example: []
  syntax:
    content: public LocalEvent[] ShareLocalEvents(TrackObjectSource source)
    parameters:
    - id: source
      type: ChartTools.IO.Configuration.TrackObjectSource
    return:
      type: ChartTools.Events.LocalEvent[]
    content.vb: Public Function ShareLocalEvents(source As TrackObjectSource) As LocalEvent()
  overload: ChartTools.Instrument.ShareLocalEvents*
- uid: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  commentId: M:ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  id: ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: ShareSpecial(TrackObjectSource)
  nameWithType: Instrument.ShareSpecial(TrackObjectSource)
  fullName: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ShareSpecial
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 112
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gives all tracks the same special phrases
  example: []
  syntax:
    content: public SpecialPhrase[] ShareSpecial(TrackObjectSource source)
    parameters:
    - id: source
      type: ChartTools.IO.Configuration.TrackObjectSource
    return:
      type: ChartTools.SpecialPhrase[]
    content.vb: Public Function ShareSpecial(source As TrackObjectSource) As SpecialPhrase()
  overload: ChartTools.Instrument.ShareSpecial*
- uid: ChartTools.Instrument.ToString
  commentId: M:ChartTools.Instrument.ToString
  id: ToString
  parent: ChartTools.Instrument
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Instrument.ToString()
  fullName: ChartTools.Instrument.ToString()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/Instrument.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToString
    path: ../ChartTools/Instruments/Instrument.cs
    startLine: 137
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ChartTools.Instrument.ToString*
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ChartTools.IEmptyVerifiable
  commentId: T:ChartTools.IEmptyVerifiable
  parent: ChartTools
  href: ChartTools.IEmptyVerifiable.html
  name: IEmptyVerifiable
  nameWithType: IEmptyVerifiable
  fullName: ChartTools.IEmptyVerifiable
- uid: System.IEquatable{ChartTools.Instrument}
  commentId: T:System.IEquatable{ChartTools.Instrument}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Instrument>
  nameWithType: IEquatable<Instrument>
  fullName: System.IEquatable<ChartTools.Instrument>
  nameWithType.vb: IEquatable(Of Instrument)
  fullName.vb: System.IEquatable(Of ChartTools.Instrument)
  name.vb: IEquatable(Of Instrument)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ChartTools.Instrument.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Instrument[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<Instrument>(Instrument, bool, bool, params Instrument[])
  nameWithType: PropertyMerger.Merge<Instrument>(Instrument, bool, bool, params Instrument[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.Instrument>(ChartTools.Instrument, bool, bool, params ChartTools.Instrument[])
  nameWithType.vb: PropertyMerger.Merge(Of Instrument)(Instrument, Boolean, Boolean, ParamArray Instrument())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.Instrument)(ChartTools.Instrument, Boolean, Boolean, ParamArray ChartTools.Instrument())
  name.vb: Merge(Of Instrument)(Instrument, Boolean, Boolean, ParamArray Instrument())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Instrument,System.Boolean,System.Boolean,ChartTools.Instrument[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: '>'
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Instrument,System.Boolean,System.Boolean,ChartTools.Instrument[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: )
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Instrument.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  name: Rescale(Instrument, float)
  nameWithType: TempoRescaler.Rescale(Instrument, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, float)
  nameWithType.vb: TempoRescaler.Rescale(Instrument, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, Single)
  name.vb: Rescale(Instrument, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  name: Rescale(Instrument, float)
  nameWithType: TempoRescaler.Rescale(Instrument, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, float)
  nameWithType.vb: TempoRescaler.Rescale(Instrument, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, Single)
  name.vb: Rescale(Instrument, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.TempoRescaler
  commentId: T:ChartTools.Tools.TempoRescaler
  parent: ChartTools.Tools
  href: ChartTools.Tools.TempoRescaler.html
  name: TempoRescaler
  nameWithType: TempoRescaler
  fullName: ChartTools.Tools.TempoRescaler
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Instrument.IsEmpty*
  commentId: Overload:ChartTools.Instrument.IsEmpty
  href: ChartTools.Instrument.html#ChartTools_Instrument_IsEmpty
  name: IsEmpty
  nameWithType: Instrument.IsEmpty
  fullName: ChartTools.Instrument.IsEmpty
- uid: ChartTools.IEmptyVerifiable.IsEmpty
  commentId: P:ChartTools.IEmptyVerifiable.IsEmpty
  parent: ChartTools.IEmptyVerifiable
  href: ChartTools.IEmptyVerifiable.html#ChartTools_IEmptyVerifiable_IsEmpty
  name: IsEmpty
  nameWithType: IEmptyVerifiable.IsEmpty
  fullName: ChartTools.IEmptyVerifiable.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ChartTools.Instrument.InstrumentIdentity*
  commentId: Overload:ChartTools.Instrument.InstrumentIdentity
  href: ChartTools.Instrument.html#ChartTools_Instrument_InstrumentIdentity
  name: InstrumentIdentity
  nameWithType: Instrument.InstrumentIdentity
  fullName: ChartTools.Instrument.InstrumentIdentity
- uid: ChartTools.InstrumentIdentity
  commentId: T:ChartTools.InstrumentIdentity
  parent: ChartTools
  href: ChartTools.InstrumentIdentity.html
  name: InstrumentIdentity
  nameWithType: InstrumentIdentity
  fullName: ChartTools.InstrumentIdentity
- uid: ChartTools.Instrument.InstrumentType*
  commentId: Overload:ChartTools.Instrument.InstrumentType
  href: ChartTools.Instrument.html#ChartTools_Instrument_InstrumentType
  name: InstrumentType
  nameWithType: Instrument.InstrumentType
  fullName: ChartTools.Instrument.InstrumentType
- uid: ChartTools.InstrumentType
  commentId: T:ChartTools.InstrumentType
  parent: ChartTools
  href: ChartTools.InstrumentType.html
  name: InstrumentType
  nameWithType: InstrumentType
  fullName: ChartTools.InstrumentType
- uid: ChartTools.Instrument.SpecialPhrases*
  commentId: Overload:ChartTools.Instrument.SpecialPhrases
  href: ChartTools.Instrument.html#ChartTools_Instrument_SpecialPhrases
  name: SpecialPhrases
  nameWithType: Instrument.SpecialPhrases
  fullName: ChartTools.Instrument.SpecialPhrases
- uid: System.Collections.Generic.List{ChartTools.InstrumentSpecialPhrase}
  commentId: T:System.Collections.Generic.List{ChartTools.InstrumentSpecialPhrase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<InstrumentSpecialPhrase>
  nameWithType: List<InstrumentSpecialPhrase>
  fullName: System.Collections.Generic.List<ChartTools.InstrumentSpecialPhrase>
  nameWithType.vb: List(Of InstrumentSpecialPhrase)
  fullName.vb: System.Collections.Generic.List(Of ChartTools.InstrumentSpecialPhrase)
  name.vb: List(Of InstrumentSpecialPhrase)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ChartTools.InstrumentSpecialPhrase
    name: InstrumentSpecialPhrase
    href: ChartTools.InstrumentSpecialPhrase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.InstrumentSpecialPhrase
    name: InstrumentSpecialPhrase
    href: ChartTools.InstrumentSpecialPhrase.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ChartTools.Instrument.GetDifficulty*
  commentId: Overload:ChartTools.Instrument.GetDifficulty
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetDifficulty_ChartTools_InstrumentDifficultySet_
  name: GetDifficulty
  nameWithType: Instrument.GetDifficulty
  fullName: ChartTools.Instrument.GetDifficulty
- uid: ChartTools.InstrumentDifficultySet
  commentId: T:ChartTools.InstrumentDifficultySet
  parent: ChartTools
  href: ChartTools.InstrumentDifficultySet.html
  name: InstrumentDifficultySet
  nameWithType: InstrumentDifficultySet
  fullName: ChartTools.InstrumentDifficultySet
- uid: System.Nullable{System.SByte}
  commentId: T:System.Nullable{System.SByte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte?
  nameWithType: sbyte?
  fullName: sbyte?
  nameWithType.vb: SByte?
  fullName.vb: SByte?
  name.vb: SByte?
  spec.csharp:
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
  spec.vb:
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Instrument.SetDifficulty*
  commentId: Overload:ChartTools.Instrument.SetDifficulty
  href: ChartTools.Instrument.html#ChartTools_Instrument_SetDifficulty_ChartTools_InstrumentDifficultySet_System_Nullable_System_SByte__
  name: SetDifficulty
  nameWithType: Instrument.SetDifficulty
  fullName: ChartTools.Instrument.SetDifficulty
- uid: ChartTools.Instrument.Easy*
  commentId: Overload:ChartTools.Instrument.Easy
  href: ChartTools.Instrument.html#ChartTools_Instrument_Easy
  name: Easy
  nameWithType: Instrument.Easy
  fullName: ChartTools.Instrument.Easy
- uid: ChartTools.Track
  commentId: T:ChartTools.Track
  parent: ChartTools
  href: ChartTools.Track.html
  name: Track
  nameWithType: Track
  fullName: ChartTools.Track
- uid: ChartTools.Instrument.Medium*
  commentId: Overload:ChartTools.Instrument.Medium
  href: ChartTools.Instrument.html#ChartTools_Instrument_Medium
  name: Medium
  nameWithType: Instrument.Medium
  fullName: ChartTools.Instrument.Medium
- uid: ChartTools.Instrument.Hard*
  commentId: Overload:ChartTools.Instrument.Hard
  href: ChartTools.Instrument.html#ChartTools_Instrument_Hard
  name: Hard
  nameWithType: Instrument.Hard
  fullName: ChartTools.Instrument.Hard
- uid: ChartTools.Instrument.Expert*
  commentId: Overload:ChartTools.Instrument.Expert
  href: ChartTools.Instrument.html#ChartTools_Instrument_Expert
  name: Expert
  nameWithType: Instrument.Expert
  fullName: ChartTools.Instrument.Expert
- uid: ChartTools.Instrument.GetTrack*
  commentId: Overload:ChartTools.Instrument.GetTrack
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetTrack_ChartTools_Difficulty_
  name: GetTrack
  nameWithType: Instrument.GetTrack
  fullName: ChartTools.Instrument.GetTrack
- uid: ChartTools.Difficulty
  commentId: T:ChartTools.Difficulty
  parent: ChartTools
  href: ChartTools.Difficulty.html
  name: Difficulty
  nameWithType: Difficulty
  fullName: ChartTools.Difficulty
- uid: ChartTools.Instrument.GetEasy*
  commentId: Overload:ChartTools.Instrument.GetEasy
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetEasy
  name: GetEasy
  nameWithType: Instrument.GetEasy
  fullName: ChartTools.Instrument.GetEasy
- uid: ChartTools.Instrument.GetMedium*
  commentId: Overload:ChartTools.Instrument.GetMedium
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetMedium
  name: GetMedium
  nameWithType: Instrument.GetMedium
  fullName: ChartTools.Instrument.GetMedium
- uid: ChartTools.Instrument.GetHard*
  commentId: Overload:ChartTools.Instrument.GetHard
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetHard
  name: GetHard
  nameWithType: Instrument.GetHard
  fullName: ChartTools.Instrument.GetHard
- uid: ChartTools.Instrument.GetExpert*
  commentId: Overload:ChartTools.Instrument.GetExpert
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetExpert
  name: GetExpert
  nameWithType: Instrument.GetExpert
  fullName: ChartTools.Instrument.GetExpert
- uid: ChartTools.Instrument.CreateTrack*
  commentId: Overload:ChartTools.Instrument.CreateTrack
  href: ChartTools.Instrument.html#ChartTools_Instrument_CreateTrack_ChartTools_Difficulty_
  name: CreateTrack
  nameWithType: Instrument.CreateTrack
  fullName: ChartTools.Instrument.CreateTrack
- uid: ChartTools.Instrument.RemoveTrack*
  commentId: Overload:ChartTools.Instrument.RemoveTrack
  href: ChartTools.Instrument.html#ChartTools_Instrument_RemoveTrack_ChartTools_Difficulty_
  name: RemoveTrack
  nameWithType: Instrument.RemoveTrack
  fullName: ChartTools.Instrument.RemoveTrack
- uid: ChartTools.Instrument.GetTracks*
  commentId: Overload:ChartTools.Instrument.GetTracks
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetTracks
  name: GetTracks
  nameWithType: Instrument.GetTracks
  fullName: ChartTools.Instrument.GetTracks
- uid: ChartTools.Track[]
  isExternal: true
  href: ChartTools.Track.html
  name: Track[]
  nameWithType: Track[]
  fullName: ChartTools.Track[]
  nameWithType.vb: Track()
  fullName.vb: ChartTools.Track()
  name.vb: Track()
  spec.csharp:
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: (
  - name: )
- uid: ChartTools.Instrument.GetExistingTracks*
  commentId: Overload:ChartTools.Instrument.GetExistingTracks
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetExistingTracks
  name: GetExistingTracks
  nameWithType: Instrument.GetExistingTracks
  fullName: ChartTools.Instrument.GetExistingTracks
- uid: System.Collections.Generic.IEnumerable{ChartTools.Track}
  commentId: T:System.Collections.Generic.IEnumerable{ChartTools.Track}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Track>
  nameWithType: IEnumerable<Track>
  fullName: System.Collections.Generic.IEnumerable<ChartTools.Track>
  nameWithType.vb: IEnumerable(Of Track)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ChartTools.Track)
  name.vb: IEnumerable(Of Track)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Instrument.GetIdentity*
  commentId: Overload:ChartTools.Instrument.GetIdentity
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetIdentity
  name: GetIdentity
  nameWithType: Instrument.GetIdentity
  fullName: ChartTools.Instrument.GetIdentity
- uid: ChartTools.Instrument.ShareLocalEvents*
  commentId: Overload:ChartTools.Instrument.ShareLocalEvents
  href: ChartTools.Instrument.html#ChartTools_Instrument_ShareLocalEvents_ChartTools_IO_Configuration_TrackObjectSource_
  name: ShareLocalEvents
  nameWithType: Instrument.ShareLocalEvents
  fullName: ChartTools.Instrument.ShareLocalEvents
- uid: ChartTools.IO.Configuration.TrackObjectSource
  commentId: T:ChartTools.IO.Configuration.TrackObjectSource
  parent: ChartTools.IO.Configuration
  href: ChartTools.IO.Configuration.TrackObjectSource.html
  name: TrackObjectSource
  nameWithType: TrackObjectSource
  fullName: ChartTools.IO.Configuration.TrackObjectSource
- uid: ChartTools.Events.LocalEvent[]
  isExternal: true
  href: ChartTools.Events.LocalEvent.html
  name: LocalEvent[]
  nameWithType: LocalEvent[]
  fullName: ChartTools.Events.LocalEvent[]
  nameWithType.vb: LocalEvent()
  fullName.vb: ChartTools.Events.LocalEvent()
  name.vb: LocalEvent()
  spec.csharp:
  - uid: ChartTools.Events.LocalEvent
    name: LocalEvent
    href: ChartTools.Events.LocalEvent.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ChartTools.Events.LocalEvent
    name: LocalEvent
    href: ChartTools.Events.LocalEvent.html
  - name: (
  - name: )
- uid: ChartTools.IO.Configuration
  commentId: N:ChartTools.IO.Configuration
  href: ChartTools.html
  name: ChartTools.IO.Configuration
  nameWithType: ChartTools.IO.Configuration
  fullName: ChartTools.IO.Configuration
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
- uid: ChartTools.Instrument.ShareSpecial*
  commentId: Overload:ChartTools.Instrument.ShareSpecial
  href: ChartTools.Instrument.html#ChartTools_Instrument_ShareSpecial_ChartTools_IO_Configuration_TrackObjectSource_
  name: ShareSpecial
  nameWithType: Instrument.ShareSpecial
  fullName: ChartTools.Instrument.ShareSpecial
- uid: ChartTools.SpecialPhrase[]
  isExternal: true
  href: ChartTools.SpecialPhrase.html
  name: SpecialPhrase[]
  nameWithType: SpecialPhrase[]
  fullName: ChartTools.SpecialPhrase[]
  nameWithType.vb: SpecialPhrase()
  fullName.vb: ChartTools.SpecialPhrase()
  name.vb: SpecialPhrase()
  spec.csharp:
  - uid: ChartTools.SpecialPhrase
    name: SpecialPhrase
    href: ChartTools.SpecialPhrase.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ChartTools.SpecialPhrase
    name: SpecialPhrase
    href: ChartTools.SpecialPhrase.html
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.Instrument.ToString*
  commentId: Overload:ChartTools.Instrument.ToString
  href: ChartTools.Instrument.html#ChartTools_Instrument_ToString
  name: ToString
  nameWithType: Instrument.ToString
  fullName: ChartTools.Instrument.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
