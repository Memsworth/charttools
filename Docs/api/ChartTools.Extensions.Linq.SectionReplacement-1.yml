### YamlMime:ManagedReference
items:
- uid: ChartTools.Extensions.Linq.SectionReplacement`1
  commentId: T:ChartTools.Extensions.Linq.SectionReplacement`1
  id: SectionReplacement`1
  parent: ChartTools.Extensions.Linq
  children:
  - ChartTools.Extensions.Linq.SectionReplacement`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0},System.Boolean)
  - ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing
  - ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace
  - ChartTools.Extensions.Linq.SectionReplacement`1.Replacement
  - ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace
  langs:
  - csharp
  - vb
  name: SectionReplacement<T>
  nameWithType: SectionReplacement<T>
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>
  type: Struct
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SectionReplacement
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: Replacement for a section of items in a collection
  example: []
  syntax:
    content: 'public readonly record struct SectionReplacement<T> : IEquatable<SectionReplacement<T>>'
    typeParameters:
    - id: T
    content.vb: Public Structure SectionReplacement(Of T) Implements IEquatable(Of SectionReplacement(Of T))
  implements:
  - System.IEquatable{ChartTools.Extensions.Linq.SectionReplacement`1}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - ChartTools.Extensions.Linq.SectionReplacement`1.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Extensions.Linq.SectionReplacement{{T}}[])
  nameWithType.vb: SectionReplacement(Of T)
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T)
  name.vb: SectionReplacement(Of T)
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0},System.Boolean)
  commentId: M:ChartTools.Extensions.Linq.SectionReplacement`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0},System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0},System.Boolean)'
  parent: ChartTools.Extensions.Linq.SectionReplacement`1
  langs:
  - csharp
  - vb
  name: SectionReplacement(IEnumerable<T>, Predicate<T>, Predicate<T>, bool)
  nameWithType: SectionReplacement<T>.SectionReplacement(IEnumerable<T>, Predicate<T>, Predicate<T>, bool)
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.SectionReplacement(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, System.Predicate<T>, bool)
  type: Constructor
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: .ctor
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: Replacement for a section of items in a collection
  example: []
  syntax:
    content: public SectionReplacement(IEnumerable<T> Replacement, Predicate<T> StartReplace, Predicate<T> EndReplace, bool AddIfMissing)
    parameters:
    - id: Replacement
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Items to replace with
    - id: StartReplace
      type: System.Predicate{{T}}
      description: Method that defines if a source marks the start of the section to replace
    - id: EndReplace
      type: System.Predicate{{T}}
      description: Method that defines if a source item marks the end of the section to replace
    - id: AddIfMissing
      type: System.Boolean
      description: The replacement should be appended to the collection if the section to replace is not found
    content.vb: Public Sub New(Replacement As IEnumerable(Of T), StartReplace As Predicate(Of T), EndReplace As Predicate(Of T), AddIfMissing As Boolean)
  overload: ChartTools.Extensions.Linq.SectionReplacement`1.#ctor*
  nameWithType.vb: SectionReplacement(Of T).New(IEnumerable(Of T), Predicate(Of T), Predicate(Of T), Boolean)
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).New(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), System.Predicate(Of T), Boolean)
  name.vb: New(IEnumerable(Of T), Predicate(Of T), Predicate(Of T), Boolean)
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.Replacement
  commentId: P:ChartTools.Extensions.Linq.SectionReplacement`1.Replacement
  id: Replacement
  parent: ChartTools.Extensions.Linq.SectionReplacement`1
  langs:
  - csharp
  - vb
  name: Replacement
  nameWithType: SectionReplacement<T>.Replacement
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.Replacement
  type: Property
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Replacement
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: Items to replace with
  example: []
  syntax:
    content: public IEnumerable<T> Replacement { get; init; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Property Replacement As IEnumerable(Of T)
  overload: ChartTools.Extensions.Linq.SectionReplacement`1.Replacement*
  nameWithType.vb: SectionReplacement(Of T).Replacement
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).Replacement
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace
  commentId: P:ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace
  id: StartReplace
  parent: ChartTools.Extensions.Linq.SectionReplacement`1
  langs:
  - csharp
  - vb
  name: StartReplace
  nameWithType: SectionReplacement<T>.StartReplace
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.StartReplace
  type: Property
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: StartReplace
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: Method that defines if a source marks the start of the section to replace
  example: []
  syntax:
    content: public Predicate<T> StartReplace { get; init; }
    parameters: []
    return:
      type: System.Predicate{{T}}
    content.vb: Public Property StartReplace As Predicate(Of T)
  overload: ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace*
  nameWithType.vb: SectionReplacement(Of T).StartReplace
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).StartReplace
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace
  commentId: P:ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace
  id: EndReplace
  parent: ChartTools.Extensions.Linq.SectionReplacement`1
  langs:
  - csharp
  - vb
  name: EndReplace
  nameWithType: SectionReplacement<T>.EndReplace
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.EndReplace
  type: Property
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: EndReplace
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: Method that defines if a source item marks the end of the section to replace
  example: []
  syntax:
    content: public Predicate<T> EndReplace { get; init; }
    parameters: []
    return:
      type: System.Predicate{{T}}
    content.vb: Public Property EndReplace As Predicate(Of T)
  overload: ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace*
  nameWithType.vb: SectionReplacement(Of T).EndReplace
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).EndReplace
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing
  commentId: P:ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing
  id: AddIfMissing
  parent: ChartTools.Extensions.Linq.SectionReplacement`1
  langs:
  - csharp
  - vb
  name: AddIfMissing
  nameWithType: SectionReplacement<T>.AddIfMissing
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.AddIfMissing
  type: Property
  source:
    remote:
      path: ChartTools/Extensions/Linq/SectionReplacement.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: AddIfMissing
    path: ../ChartTools/Extensions/Linq/SectionReplacement.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools.Extensions.Linq
  summary: The replacement should be appended to the collection if the section to replace is not found
  example: []
  syntax:
    content: public bool AddIfMissing { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddIfMissing As Boolean
  overload: ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing*
  nameWithType.vb: SectionReplacement(Of T).AddIfMissing
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).AddIfMissing
references:
- uid: ChartTools.Extensions.Linq
  commentId: N:ChartTools.Extensions.Linq
  href: ChartTools.html
  name: ChartTools.Extensions.Linq
  nameWithType: ChartTools.Extensions.Linq
  fullName: ChartTools.Extensions.Linq
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Extensions
    name: Extensions
    href: ChartTools.Extensions.html
  - name: .
  - uid: ChartTools.Extensions.Linq
    name: Linq
    href: ChartTools.Extensions.Linq.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Extensions
    name: Extensions
    href: ChartTools.Extensions.html
  - name: .
  - uid: ChartTools.Extensions.Linq
    name: Linq
    href: ChartTools.Extensions.Linq.html
- uid: System.IEquatable{ChartTools.Extensions.Linq.SectionReplacement`1}
  commentId: T:System.IEquatable{ChartTools.Extensions.Linq.SectionReplacement`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SectionReplacement<T>>
  nameWithType: IEquatable<SectionReplacement<T>>
  fullName: System.IEquatable<ChartTools.Extensions.Linq.SectionReplacement<T>>
  nameWithType.vb: IEquatable(Of SectionReplacement(Of T))
  fullName.vb: System.IEquatable(Of ChartTools.Extensions.Linq.SectionReplacement(Of T))
  name.vb: IEquatable(Of SectionReplacement(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Extensions.Linq.SectionReplacement{{T}}[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<SectionReplacement<T>>(SectionReplacement<T>, bool, bool, params SectionReplacement<T>[])
  nameWithType: PropertyMerger.Merge<SectionReplacement<T>>(SectionReplacement<T>, bool, bool, params SectionReplacement<T>[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.Extensions.Linq.SectionReplacement<T>>(ChartTools.Extensions.Linq.SectionReplacement<T>, bool, bool, params ChartTools.Extensions.Linq.SectionReplacement<T>[])
  nameWithType.vb: PropertyMerger.Merge(Of SectionReplacement(Of T))(SectionReplacement(Of T), Boolean, Boolean, ParamArray SectionReplacement(Of T)())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.Extensions.Linq.SectionReplacement(Of T))(ChartTools.Extensions.Linq.SectionReplacement(Of T), Boolean, Boolean, ParamArray ChartTools.Extensions.Linq.SectionReplacement(Of T)())
  name.vb: Merge(Of SectionReplacement(Of T))(SectionReplacement(Of T), Boolean, Boolean, ParamArray SectionReplacement(Of T)())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Extensions.Linq.SectionReplacement{`0},System.Boolean,System.Boolean,ChartTools.Extensions.Linq.SectionReplacement{`0}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Extensions.Linq.SectionReplacement{`0},System.Boolean,System.Boolean,ChartTools.Extensions.Linq.SectionReplacement{`0}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.#ctor*
  commentId: Overload:ChartTools.Extensions.Linq.SectionReplacement`1.#ctor
  href: ChartTools.Extensions.Linq.SectionReplacement-1.html#ChartTools_Extensions_Linq_SectionReplacement_1__ctor_System_Collections_Generic_IEnumerable__0__System_Predicate__0__System_Predicate__0__System_Boolean_
  name: SectionReplacement
  nameWithType: SectionReplacement<T>.SectionReplacement
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.SectionReplacement
  nameWithType.vb: SectionReplacement(Of T).New
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{``0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.Replacement*
  commentId: Overload:ChartTools.Extensions.Linq.SectionReplacement`1.Replacement
  href: ChartTools.Extensions.Linq.SectionReplacement-1.html#ChartTools_Extensions_Linq_SectionReplacement_1_Replacement
  name: Replacement
  nameWithType: SectionReplacement<T>.Replacement
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.Replacement
  nameWithType.vb: SectionReplacement(Of T).Replacement
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).Replacement
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace*
  commentId: Overload:ChartTools.Extensions.Linq.SectionReplacement`1.StartReplace
  href: ChartTools.Extensions.Linq.SectionReplacement-1.html#ChartTools_Extensions_Linq_SectionReplacement_1_StartReplace
  name: StartReplace
  nameWithType: SectionReplacement<T>.StartReplace
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.StartReplace
  nameWithType.vb: SectionReplacement(Of T).StartReplace
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).StartReplace
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace*
  commentId: Overload:ChartTools.Extensions.Linq.SectionReplacement`1.EndReplace
  href: ChartTools.Extensions.Linq.SectionReplacement-1.html#ChartTools_Extensions_Linq_SectionReplacement_1_EndReplace
  name: EndReplace
  nameWithType: SectionReplacement<T>.EndReplace
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.EndReplace
  nameWithType.vb: SectionReplacement(Of T).EndReplace
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).EndReplace
- uid: ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing*
  commentId: Overload:ChartTools.Extensions.Linq.SectionReplacement`1.AddIfMissing
  href: ChartTools.Extensions.Linq.SectionReplacement-1.html#ChartTools_Extensions_Linq_SectionReplacement_1_AddIfMissing
  name: AddIfMissing
  nameWithType: SectionReplacement<T>.AddIfMissing
  fullName: ChartTools.Extensions.Linq.SectionReplacement<T>.AddIfMissing
  nameWithType.vb: SectionReplacement(Of T).AddIfMissing
  fullName.vb: ChartTools.Extensions.Linq.SectionReplacement(Of T).AddIfMissing
