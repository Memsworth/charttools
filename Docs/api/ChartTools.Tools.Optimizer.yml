### YamlMime:ManagedReference
items:
- uid: ChartTools.Tools.Optimizer
  commentId: T:ChartTools.Tools.Optimizer
  id: Optimizer
  parent: ChartTools.Tools
  children:
  - ChartTools.Tools.Optimizer.CutLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - ChartTools.Tools.Optimizer.CutSpecialLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - ChartTools.Tools.Optimizer.CutSustains``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - ChartTools.Tools.Optimizer.RemoveUneeded(ChartTools.TempoMap,System.UInt32,System.Boolean)
  - ChartTools.Tools.Optimizer.RemoveUneeded(System.Collections.Generic.ICollection{ChartTools.Tempo},System.Boolean)
  - ChartTools.Tools.Optimizer.RemoveUnneeded(System.Collections.Generic.ICollection{ChartTools.TimeSignature},System.Boolean)
  langs:
  - csharp
  - vb
  name: Optimizer
  nameWithType: Optimizer
  fullName: ChartTools.Tools.Optimizer
  type: Class
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Optimizer
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 10
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Provides methods for simplifying songs
  example: []
  syntax:
    content: public static class Optimizer
    content.vb: Public Module Optimizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ChartTools.Tools.Optimizer.CutSustains``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.CutSustains``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: CutSustains``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExtensionMethod: true
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: CutSustains<T>(IEnumerable<T>, bool)
  nameWithType: Optimizer.CutSustains<T>(IEnumerable<T>, bool)
  fullName: ChartTools.Tools.Optimizer.CutSustains<T>(System.Collections.Generic.IEnumerable<T>, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CutSustains
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 19
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Cuts short sustains that exceed the position of the next note preventing the sustain from continuing.
  example: []
  syntax:
    content: 'public static void CutSustains<T>(this IEnumerable<T> chords, bool preOrdered = false) where T : LaneChord'
    parameters:
    - id: chords
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Chords to cut the sustains of
    - id: preOrdered
      type: System.Boolean
      description: Skip ordering of chords by position
    typeParameters:
    - id: T
    content.vb: Public Shared Sub CutSustains(Of T As LaneChord)(chords As IEnumerable(Of T), preOrdered As Boolean = False)
  overload: ChartTools.Tools.Optimizer.CutSustains*
  nameWithType.vb: Optimizer.CutSustains(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.CutSustains(Of T)(System.Collections.Generic.IEnumerable(Of T), Boolean)
  name.vb: CutSustains(Of T)(IEnumerable(Of T), Boolean)
- uid: ChartTools.Tools.Optimizer.CutSpecialLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.CutSpecialLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: CutSpecialLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: CutSpecialLengths<T>(IEnumerable<T>, bool)
  nameWithType: Optimizer.CutSpecialLengths<T>(IEnumerable<T>, bool)
  fullName: ChartTools.Tools.Optimizer.CutSpecialLengths<T>(System.Collections.Generic.IEnumerable<T>, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CutSpecialLengths
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 82
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Cuts lengths of special phrases based on the numeric value of the type.
  example: []
  syntax:
    content: 'public static List<T>[] CutSpecialLengths<T>(IEnumerable<T> phrases, bool preOrdered = false) where T : SpecialPhrase'
    parameters:
    - id: phrases
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Set of phrases
    - id: preOrdered
      type: System.Boolean
      description: Skip ordering of phrases by position
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}[]
      description: Passed phrases ordered by position and grouped by type
    content.vb: Public Shared Function CutSpecialLengths(Of T As SpecialPhrase)(phrases As IEnumerable(Of T), preOrdered As Boolean = False) As List(Of T)()
  overload: ChartTools.Tools.Optimizer.CutSpecialLengths*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Optimizer.CutSpecialLengths(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.CutSpecialLengths(Of T)(System.Collections.Generic.IEnumerable(Of T), Boolean)
  name.vb: CutSpecialLengths(Of T)(IEnumerable(Of T), Boolean)
- uid: ChartTools.Tools.Optimizer.CutLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.CutLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: CutLengths``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExtensionMethod: true
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: CutLengths<T>(IEnumerable<T>, bool)
  nameWithType: Optimizer.CutLengths<T>(IEnumerable<T>, bool)
  fullName: ChartTools.Tools.Optimizer.CutLengths<T>(System.Collections.Generic.IEnumerable<T>, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CutLengths
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 100
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Cuts short long track objects that exceed the start of the next one.
  example: []
  syntax:
    content: 'public static void CutLengths<T>(this IEnumerable<T> objects, bool preOrdered = false) where T : ILongTrackObject'
    parameters:
    - id: objects
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Set of long track objects
    - id: preOrdered
      type: System.Boolean
      description: Skip ordering of objects by position
    typeParameters:
    - id: T
    content.vb: Public Shared Sub CutLengths(Of T As ILongTrackObject)(objects As IEnumerable(Of T), preOrdered As Boolean = False)
  overload: ChartTools.Tools.Optimizer.CutLengths*
  nameWithType.vb: Optimizer.CutLengths(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.CutLengths(Of T)(System.Collections.Generic.IEnumerable(Of T), Boolean)
  name.vb: CutLengths(Of T)(IEnumerable(Of T), Boolean)
- uid: ChartTools.Tools.Optimizer.RemoveUneeded(System.Collections.Generic.ICollection{ChartTools.Tempo},System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.RemoveUneeded(System.Collections.Generic.ICollection{ChartTools.Tempo},System.Boolean)
  id: RemoveUneeded(System.Collections.Generic.ICollection{ChartTools.Tempo},System.Boolean)
  isExtensionMethod: true
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: RemoveUneeded(ICollection<Tempo>, bool)
  nameWithType: Optimizer.RemoveUneeded(ICollection<Tempo>, bool)
  fullName: ChartTools.Tools.Optimizer.RemoveUneeded(System.Collections.Generic.ICollection<ChartTools.Tempo>, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: RemoveUneeded
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 114
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Removes redundant tempo markers.
  remarks: If some markers may be anchored, use the overload with a resolution.
  example: []
  syntax:
    content: public static void RemoveUneeded(this ICollection<Tempo> markers, bool preOrdered = false)
    parameters:
    - id: markers
      type: System.Collections.Generic.ICollection{ChartTools.Tempo}
      description: Tempo markers without anchors.
    - id: preOrdered
      type: System.Boolean
      description: Skip ordering of markers by position.
    content.vb: Public Shared Sub RemoveUneeded(markers As ICollection(Of Tempo), preOrdered As Boolean = False)
  overload: ChartTools.Tools.Optimizer.RemoveUneeded*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Optimizer.RemoveUneeded(ICollection(Of Tempo), Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.RemoveUneeded(System.Collections.Generic.ICollection(Of ChartTools.Tempo), Boolean)
  name.vb: RemoveUneeded(ICollection(Of Tempo), Boolean)
- uid: ChartTools.Tools.Optimizer.RemoveUneeded(ChartTools.TempoMap,System.UInt32,System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.RemoveUneeded(ChartTools.TempoMap,System.UInt32,System.Boolean)
  id: RemoveUneeded(ChartTools.TempoMap,System.UInt32,System.Boolean)
  isExtensionMethod: true
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: RemoveUneeded(TempoMap, uint, bool)
  nameWithType: Optimizer.RemoveUneeded(TempoMap, uint, bool)
  fullName: ChartTools.Tools.Optimizer.RemoveUneeded(ChartTools.TempoMap, uint, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: RemoveUneeded
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 129
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Removes redundant tempo markers by syncing the position of anchored markers.
  example: []
  syntax:
    content: public static void RemoveUneeded(this TempoMap markers, uint resolution, bool desyncedPreOrdered = false)
    parameters:
    - id: markers
      type: ChartTools.TempoMap
      description: Set of markers
    - id: resolution
      type: System.UInt32
      description: Resolution from <xref href="ChartTools.IO.Formatting.FormattingRules.TrueResolution" data-throw-if-not-resolved="false"></xref>
    - id: desyncedPreOrdered
      type: System.Boolean
      description: Skip ordering of desynced markers by position
    content.vb: Public Shared Sub RemoveUneeded(markers As TempoMap, resolution As UInteger, desyncedPreOrdered As Boolean = False)
  overload: ChartTools.Tools.Optimizer.RemoveUneeded*
  nameWithType.vb: Optimizer.RemoveUneeded(TempoMap, UInteger, Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.RemoveUneeded(ChartTools.TempoMap, UInteger, Boolean)
  name.vb: RemoveUneeded(TempoMap, UInteger, Boolean)
- uid: ChartTools.Tools.Optimizer.RemoveUnneeded(System.Collections.Generic.ICollection{ChartTools.TimeSignature},System.Boolean)
  commentId: M:ChartTools.Tools.Optimizer.RemoveUnneeded(System.Collections.Generic.ICollection{ChartTools.TimeSignature},System.Boolean)
  id: RemoveUnneeded(System.Collections.Generic.ICollection{ChartTools.TimeSignature},System.Boolean)
  isExtensionMethod: true
  parent: ChartTools.Tools.Optimizer
  langs:
  - csharp
  - vb
  name: RemoveUnneeded(ICollection<TimeSignature>, bool)
  nameWithType: Optimizer.RemoveUnneeded(ICollection<TimeSignature>, bool)
  fullName: ChartTools.Tools.Optimizer.RemoveUnneeded(System.Collections.Generic.ICollection<ChartTools.TimeSignature>, bool)
  type: Method
  source:
    remote:
      path: ChartTools/Tools/Optimizer.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: RemoveUnneeded
    path: ../ChartTools/Tools/Optimizer.cs
    startLine: 144
  assemblies:
  - ChartTools
  namespace: ChartTools.Tools
  summary: Removes redundant time signature markers.
  example: []
  syntax:
    content: public static void RemoveUnneeded(this ICollection<TimeSignature> signatures, bool preOrdered = false)
    parameters:
    - id: signatures
      type: System.Collections.Generic.ICollection{ChartTools.TimeSignature}
      description: Time signatures to remove the unneeded from
    - id: preOrdered
      type: System.Boolean
      description: Skip ordering of markers by position
    content.vb: Public Shared Sub RemoveUnneeded(signatures As ICollection(Of TimeSignature), preOrdered As Boolean = False)
  overload: ChartTools.Tools.Optimizer.RemoveUnneeded*
  nameWithType.vb: Optimizer.RemoveUnneeded(ICollection(Of TimeSignature), Boolean)
  fullName.vb: ChartTools.Tools.Optimizer.RemoveUnneeded(System.Collections.Generic.ICollection(Of ChartTools.TimeSignature), Boolean)
  name.vb: RemoveUnneeded(ICollection(Of TimeSignature), Boolean)
references:
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ChartTools.Tools.Optimizer.CutSustains*
  commentId: Overload:ChartTools.Tools.Optimizer.CutSustains
  href: ChartTools.Tools.Optimizer.html#ChartTools_Tools_Optimizer_CutSustains__1_System_Collections_Generic_IEnumerable___0__System_Boolean_
  name: CutSustains
  nameWithType: Optimizer.CutSustains
  fullName: ChartTools.Tools.Optimizer.CutSustains
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: ChartTools.Tools.Optimizer.CutSpecialLengths*
  commentId: Overload:ChartTools.Tools.Optimizer.CutSpecialLengths
  href: ChartTools.Tools.Optimizer.html#ChartTools_Tools_Optimizer_CutSpecialLengths__1_System_Collections_Generic_IEnumerable___0__System_Boolean_
  name: CutSpecialLengths
  nameWithType: Optimizer.CutSpecialLengths
  fullName: ChartTools.Tools.Optimizer.CutSpecialLengths
- uid: System.Collections.Generic.List{{T}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>[]
  nameWithType: List<T>[]
  fullName: System.Collections.Generic.List<T>[]
  nameWithType.vb: List(Of T)()
  fullName.vb: System.Collections.Generic.List(Of T)()
  name.vb: List(Of T)()
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: ChartTools.Tools.Optimizer.CutLengths*
  commentId: Overload:ChartTools.Tools.Optimizer.CutLengths
  href: ChartTools.Tools.Optimizer.html#ChartTools_Tools_Optimizer_CutLengths__1_System_Collections_Generic_IEnumerable___0__System_Boolean_
  name: CutLengths
  nameWithType: Optimizer.CutLengths
  fullName: ChartTools.Tools.Optimizer.CutLengths
- uid: ChartTools.Tools.Optimizer.RemoveUneeded*
  commentId: Overload:ChartTools.Tools.Optimizer.RemoveUneeded
  href: ChartTools.Tools.Optimizer.html#ChartTools_Tools_Optimizer_RemoveUneeded_System_Collections_Generic_ICollection_ChartTools_Tempo__System_Boolean_
  name: RemoveUneeded
  nameWithType: Optimizer.RemoveUneeded
  fullName: ChartTools.Tools.Optimizer.RemoveUneeded
- uid: System.Collections.Generic.ICollection{ChartTools.Tempo}
  commentId: T:System.Collections.Generic.ICollection{ChartTools.Tempo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Tempo>
  nameWithType: ICollection<Tempo>
  fullName: System.Collections.Generic.ICollection<ChartTools.Tempo>
  nameWithType.vb: ICollection(Of Tempo)
  fullName.vb: System.Collections.Generic.ICollection(Of ChartTools.Tempo)
  name.vb: ICollection(Of Tempo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: ChartTools.Tempo
    name: Tempo
    href: ChartTools.Tempo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Tempo
    name: Tempo
    href: ChartTools.Tempo.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.IO.Formatting.FormattingRules.TrueResolution
  commentId: P:ChartTools.IO.Formatting.FormattingRules.TrueResolution
  href: ChartTools.IO.Formatting.FormattingRules.html#ChartTools_IO_Formatting_FormattingRules_TrueResolution
  name: TrueResolution
  nameWithType: FormattingRules.TrueResolution
  fullName: ChartTools.IO.Formatting.FormattingRules.TrueResolution
- uid: ChartTools.TempoMap
  commentId: T:ChartTools.TempoMap
  parent: ChartTools
  href: ChartTools.TempoMap.html
  name: TempoMap
  nameWithType: TempoMap
  fullName: ChartTools.TempoMap
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Tools.Optimizer.RemoveUnneeded*
  commentId: Overload:ChartTools.Tools.Optimizer.RemoveUnneeded
  href: ChartTools.Tools.Optimizer.html#ChartTools_Tools_Optimizer_RemoveUnneeded_System_Collections_Generic_ICollection_ChartTools_TimeSignature__System_Boolean_
  name: RemoveUnneeded
  nameWithType: Optimizer.RemoveUnneeded
  fullName: ChartTools.Tools.Optimizer.RemoveUnneeded
- uid: System.Collections.Generic.ICollection{ChartTools.TimeSignature}
  commentId: T:System.Collections.Generic.ICollection{ChartTools.TimeSignature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TimeSignature>
  nameWithType: ICollection<TimeSignature>
  fullName: System.Collections.Generic.ICollection<ChartTools.TimeSignature>
  nameWithType.vb: ICollection(Of TimeSignature)
  fullName.vb: System.Collections.Generic.ICollection(Of ChartTools.TimeSignature)
  name.vb: ICollection(Of TimeSignature)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: ChartTools.TimeSignature
    name: TimeSignature
    href: ChartTools.TimeSignature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.TimeSignature
    name: TimeSignature
    href: ChartTools.TimeSignature.html
  - name: )
