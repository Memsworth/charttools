### YamlMime:ManagedReference
items:
- uid: ChartTools.Song
  commentId: T:ChartTools.Song
  id: Song
  parent: ChartTools
  children:
  - ChartTools.Song.Formatting
  - ChartTools.Song.FromDirectory(System.String,ChartTools.IO.Configuration.ReadingConfiguration)
  - ChartTools.Song.FromDirectoryAsync(System.String,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Song.FromFile(System.String,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Song.FromFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Song.GetLyrics
  - ChartTools.Song.GlobalEvents
  - ChartTools.Song.Instruments
  - ChartTools.Song.Metadata
  - ChartTools.Song.SetLyrics(System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase})
  - ChartTools.Song.SyncTrack
  - ChartTools.Song.ToFile(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration)
  - ChartTools.Song.ToFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Song.UnknownChartSections
  langs:
  - csharp
  - vb
  name: Song
  nameWithType: Song
  fullName: ChartTools.Song
  type: Class
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Song
    path: ../ChartTools/Song.cs
    startLine: 15
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Song playable in Clone Hero
  example: []
  syntax:
    content: public class Song
    content.vb: Public Class Song
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ChartTools.Song.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Song[])
  - ChartTools.Song.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
- uid: ChartTools.Song.Metadata
  commentId: P:ChartTools.Song.Metadata
  id: Metadata
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: Song.Metadata
  fullName: ChartTools.Song.Metadata
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Metadata
    path: ../ChartTools/Song.cs
    startLine: 20
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of information about the song not unrelated to instruments, syncing or events
  example: []
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: ChartTools.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: ChartTools.Song.Metadata*
- uid: ChartTools.Song.Formatting
  commentId: P:ChartTools.Song.Formatting
  id: Formatting
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: Formatting
  nameWithType: Song.Formatting
  fullName: ChartTools.Song.Formatting
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Formatting
    path: ../ChartTools/Song.cs
    startLine: 28
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Rules defined in song.ini that affect how the song data file is read and written
  remarks: Property summaries provided by Nathan Hurst.
  example: []
  syntax:
    content: public FormattingRules Formatting { get; set; }
    parameters: []
    return:
      type: ChartTools.IO.Formatting.FormattingRules
    content.vb: Public Property Formatting As FormattingRules
  overload: ChartTools.Song.Formatting*
- uid: ChartTools.Song.SyncTrack
  commentId: P:ChartTools.Song.SyncTrack
  id: SyncTrack
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: SyncTrack
  nameWithType: Song.SyncTrack
  fullName: ChartTools.Song.SyncTrack
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SyncTrack
    path: ../ChartTools/Song.cs
    startLine: 36
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of markers that define the time signature and tempo
  example: []
  syntax:
    content: public SyncTrack SyncTrack { get; set; }
    parameters: []
    return:
      type: ChartTools.SyncTrack
    content.vb: Public Property SyncTrack As SyncTrack
  overload: ChartTools.Song.SyncTrack*
- uid: ChartTools.Song.GlobalEvents
  commentId: P:ChartTools.Song.GlobalEvents
  id: GlobalEvents
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: GlobalEvents
  nameWithType: Song.GlobalEvents
  fullName: ChartTools.Song.GlobalEvents
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GlobalEvents
    path: ../ChartTools/Song.cs
    startLine: 46
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: List of events common to all instruments
  example: []
  syntax:
    content: public List<GlobalEvent> GlobalEvents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ChartTools.Events.GlobalEvent}
    content.vb: Public Property GlobalEvents As List(Of GlobalEvent)
  overload: ChartTools.Song.GlobalEvents*
- uid: ChartTools.Song.Instruments
  commentId: P:ChartTools.Song.Instruments
  id: Instruments
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: Instruments
  nameWithType: Song.Instruments
  fullName: ChartTools.Song.Instruments
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Instruments
    path: ../ChartTools/Song.cs
    startLine: 54
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of all instruments
  example: []
  syntax:
    content: public InstrumentSet Instruments { get; set; }
    parameters: []
    return:
      type: ChartTools.InstrumentSet
    content.vb: Public Property Instruments As InstrumentSet
  overload: ChartTools.Song.Instruments*
- uid: ChartTools.Song.UnknownChartSections
  commentId: P:ChartTools.Song.UnknownChartSections
  id: UnknownChartSections
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: UnknownChartSections
  nameWithType: Song.UnknownChartSections
  fullName: ChartTools.Song.UnknownChartSections
  type: Property
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: UnknownChartSections
    path: ../ChartTools/Song.cs
    startLine: 61
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public ChartSection? UnknownChartSections { get; set; }
    parameters: []
    return:
      type: ChartTools.IO.Chart.ChartSection
    content.vb: Public Property UnknownChartSections As ChartSection
  overload: ChartTools.Song.UnknownChartSections*
- uid: ChartTools.Song.FromFile(System.String,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Song.FromFile(System.String,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: FromFile(System.String,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: FromFile(string, ReadingConfiguration?, FormattingRules?)
  nameWithType: Song.FromFile(string, ReadingConfiguration?, FormattingRules?)
  fullName: ChartTools.Song.FromFile(string, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFile
    path: ../ChartTools/Song.cs
    startLine: 70
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Reads all elements of a <xref href="ChartTools.Song" data-throw-if-not-resolved="false"></xref> from a file.
  example: []
  syntax:
    content: public static Song FromFile(string path, ReadingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
      description: Path of the file
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
      description: ''
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
      description: >-
        <summary>
            Rules defined in song.ini that affect how the song data file is read and written
            </summary>
    return:
      type: ChartTools.Song
    content.vb: Public Shared Function FromFile(path As String, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing) As Song
  overload: ChartTools.Song.FromFile*
  nameWithType.vb: Song.FromFile(String, ReadingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Song.FromFile(String, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: FromFile(String, ReadingConfiguration, FormattingRules)
- uid: ChartTools.Song.FromFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Song.FromFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: FromFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: FromFileAsync(string, ChartReadingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Song.FromFileAsync(string, ChartReadingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Song.FromFileAsync(string, ChartTools.IO.Chart.Configuration.ChartReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFileAsync
    path: ../ChartTools/Song.cs
    startLine: 78
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Reads all elements of a <xref href="ChartTools.Song" data-throw-if-not-resolved="false"></xref> from a file asynchronously using multitasking.
  example: []
  syntax:
    content: public static Task<Song> FromFileAsync(string path, ChartReadingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
      description: <param name="path">Path of the file</param>
    - id: config
      type: ChartTools.IO.Chart.Configuration.ChartReadingConfiguration
      description: <param name="config" />
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
      description: >-
        <summary>
            Rules defined in song.ini that affect how the song data file is read and written
            </summary>
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Token to request cancellation
    return:
      type: System.Threading.Tasks.Task{ChartTools.Song}
    content.vb: Public Shared Function FromFileAsync(path As String, config As ChartReadingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Song)
  overload: ChartTools.Song.FromFileAsync*
  nameWithType.vb: Song.FromFileAsync(String, ChartReadingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Song.FromFileAsync(String, ChartTools.IO.Chart.Configuration.ChartReadingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: FromFileAsync(String, ChartReadingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Song.FromDirectory(System.String,ChartTools.IO.Configuration.ReadingConfiguration)
  commentId: M:ChartTools.Song.FromDirectory(System.String,ChartTools.IO.Configuration.ReadingConfiguration)
  id: FromDirectory(System.String,ChartTools.IO.Configuration.ReadingConfiguration)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: FromDirectory(string, ReadingConfiguration?)
  nameWithType: Song.FromDirectory(string, ReadingConfiguration?)
  fullName: ChartTools.Song.FromDirectory(string, ChartTools.IO.Configuration.ReadingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectory
    path: ../ChartTools/Song.cs
    startLine: 80
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public static Song FromDirectory(string directory, ReadingConfiguration? config = null)
    parameters:
    - id: directory
      type: System.String
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    return:
      type: ChartTools.Song
    content.vb: Public Shared Function FromDirectory(directory As String, config As ReadingConfiguration = Nothing) As Song
  overload: ChartTools.Song.FromDirectory*
  nameWithType.vb: Song.FromDirectory(String, ReadingConfiguration)
  fullName.vb: ChartTools.Song.FromDirectory(String, ChartTools.IO.Configuration.ReadingConfiguration)
  name.vb: FromDirectory(String, ReadingConfiguration)
- uid: ChartTools.Song.FromDirectoryAsync(System.String,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Song.FromDirectoryAsync(System.String,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  id: FromDirectoryAsync(System.String,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: FromDirectoryAsync(string, ReadingConfiguration?, CancellationToken)
  nameWithType: Song.FromDirectoryAsync(string, ReadingConfiguration?, CancellationToken)
  fullName: ChartTools.Song.FromDirectoryAsync(string, ChartTools.IO.Configuration.ReadingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectoryAsync
    path: ../ChartTools/Song.cs
    startLine: 89
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public static Task<Song> FromDirectoryAsync(string directory, ReadingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: directory
      type: System.String
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.Song}
    content.vb: Public Shared Function FromDirectoryAsync(directory As String, config As ReadingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Song)
  overload: ChartTools.Song.FromDirectoryAsync*
  nameWithType.vb: Song.FromDirectoryAsync(String, ReadingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Song.FromDirectoryAsync(String, ChartTools.IO.Configuration.ReadingConfiguration, System.Threading.CancellationToken)
  name.vb: FromDirectoryAsync(String, ReadingConfiguration, CancellationToken)
- uid: ChartTools.Song.ToFile(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration)
  commentId: M:ChartTools.Song.ToFile(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration)
  id: ToFile(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: ToFile(string, ChartWritingConfiguration?)
  nameWithType: Song.ToFile(string, ChartWritingConfiguration?)
  fullName: ChartTools.Song.ToFile(string, ChartTools.IO.Chart.Configuration.ChartWritingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToFile
    path: ../ChartTools/Song.cs
    startLine: 111
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Writes the <xref href="ChartTools.Song" data-throw-if-not-resolved="false"></xref> to a file.
  example: []
  syntax:
    content: public void ToFile(string path, ChartWritingConfiguration? config = null)
    parameters:
    - id: path
      type: System.String
    - id: config
      type: ChartTools.IO.Chart.Configuration.ChartWritingConfiguration
    content.vb: Public Sub ToFile(path As String, config As ChartWritingConfiguration = Nothing)
  overload: ChartTools.Song.ToFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: ''
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: ''
  - type: ChartTools.IO.LineException
    commentId: T:ChartTools.IO.LineException
    description: ''
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: ''
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: ''
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: ''
  nameWithType.vb: Song.ToFile(String, ChartWritingConfiguration)
  fullName.vb: ChartTools.Song.ToFile(String, ChartTools.IO.Chart.Configuration.ChartWritingConfiguration)
  name.vb: ToFile(String, ChartWritingConfiguration)
- uid: ChartTools.Song.ToFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Song.ToFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration,System.Threading.CancellationToken)
  id: ToFileAsync(System.String,ChartTools.IO.Chart.Configuration.ChartWritingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: ToFileAsync(string, ChartWritingConfiguration?, CancellationToken)
  nameWithType: Song.ToFileAsync(string, ChartWritingConfiguration?, CancellationToken)
  fullName: ChartTools.Song.ToFileAsync(string, ChartTools.IO.Chart.Configuration.ChartWritingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToFileAsync
    path: ../ChartTools/Song.cs
    startLine: 112
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public Task ToFileAsync(string path, ChartWritingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: config
      type: ChartTools.IO.Chart.Configuration.ChartWritingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ToFileAsync(path As String, config As ChartWritingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: ChartTools.Song.ToFileAsync*
  nameWithType.vb: Song.ToFileAsync(String, ChartWritingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Song.ToFileAsync(String, ChartTools.IO.Chart.Configuration.ChartWritingConfiguration, System.Threading.CancellationToken)
  name.vb: ToFileAsync(String, ChartWritingConfiguration, CancellationToken)
- uid: ChartTools.Song.GetLyrics
  commentId: M:ChartTools.Song.GetLyrics
  id: GetLyrics
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: GetLyrics()
  nameWithType: Song.GetLyrics()
  fullName: ChartTools.Song.GetLyrics()
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetLyrics
    path: ../ChartTools/Song.cs
    startLine: 117
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Retrieves the lyrics from the global events.
  example: []
  syntax:
    content: public IEnumerable<Phrase> GetLyrics()
    return:
      type: System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase}
    content.vb: Public Function GetLyrics() As IEnumerable(Of Phrase)
  overload: ChartTools.Song.GetLyrics*
- uid: ChartTools.Song.SetLyrics(System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase})
  commentId: M:ChartTools.Song.SetLyrics(System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase})
  id: SetLyrics(System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase})
  parent: ChartTools.Song
  langs:
  - csharp
  - vb
  name: SetLyrics(IEnumerable<Phrase>)
  nameWithType: Song.SetLyrics(IEnumerable<Phrase>)
  fullName: ChartTools.Song.SetLyrics(System.Collections.Generic.IEnumerable<ChartTools.Lyrics.Phrase>)
  type: Method
  source:
    remote:
      path: ChartTools/Song.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SetLyrics
    path: ../ChartTools/Song.cs
    startLine: 122
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Replaces phrase and lyric events from <xref href="ChartTools.Song.GlobalEvents" data-throw-if-not-resolved="false"></xref> with the ones making up a set of <xref href="ChartTools.Lyrics.Phrase" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetLyrics(IEnumerable<Phrase> phrases)
    parameters:
    - id: phrases
      type: System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase}
      description: Phrases to use as a replacement
    content.vb: Public Sub SetLyrics(phrases As IEnumerable(Of Phrase))
  overload: ChartTools.Song.SetLyrics*
  nameWithType.vb: Song.SetLyrics(IEnumerable(Of Phrase))
  fullName.vb: ChartTools.Song.SetLyrics(System.Collections.Generic.IEnumerable(Of ChartTools.Lyrics.Phrase))
  name.vb: SetLyrics(IEnumerable(Of Phrase))
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.Song.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Song[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<Song>(Song, bool, bool, params Song[])
  nameWithType: PropertyMerger.Merge<Song>(Song, bool, bool, params Song[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.Song>(ChartTools.Song, bool, bool, params ChartTools.Song[])
  nameWithType.vb: PropertyMerger.Merge(Of Song)(Song, Boolean, Boolean, ParamArray Song())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.Song)(ChartTools.Song, Boolean, Boolean, ParamArray ChartTools.Song())
  name.vb: Merge(Of Song)(Song, Boolean, Boolean, ParamArray Song())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Song,System.Boolean,System.Boolean,ChartTools.Song[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: '>'
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Song,System.Boolean,System.Boolean,ChartTools.Song[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: )
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Song.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  name: Rescale(Song, float)
  nameWithType: TempoRescaler.Rescale(Song, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song, float)
  nameWithType.vb: TempoRescaler.Rescale(Song, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song, Single)
  name.vb: Rescale(Song, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  name: Rescale(Song, float)
  nameWithType: TempoRescaler.Rescale(Song, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song, float)
  nameWithType.vb: TempoRescaler.Rescale(Song, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song, Single)
  name.vb: Rescale(Song, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Song,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Song_System_Single_
  - name: (
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.TempoRescaler
  commentId: T:ChartTools.Tools.TempoRescaler
  parent: ChartTools.Tools
  href: ChartTools.Tools.TempoRescaler.html
  name: TempoRescaler
  nameWithType: TempoRescaler
  fullName: ChartTools.Tools.TempoRescaler
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Song.Metadata*
  commentId: Overload:ChartTools.Song.Metadata
  href: ChartTools.Song.html#ChartTools_Song_Metadata
  name: Metadata
  nameWithType: Song.Metadata
  fullName: ChartTools.Song.Metadata
- uid: ChartTools.Metadata
  commentId: T:ChartTools.Metadata
  parent: ChartTools
  href: ChartTools.Metadata.html
  name: Metadata
  nameWithType: Metadata
  fullName: ChartTools.Metadata
- uid: ChartTools.Song.Formatting*
  commentId: Overload:ChartTools.Song.Formatting
  href: ChartTools.Song.html#ChartTools_Song_Formatting
  name: Formatting
  nameWithType: Song.Formatting
  fullName: ChartTools.Song.Formatting
- uid: ChartTools.IO.Formatting.FormattingRules
  commentId: T:ChartTools.IO.Formatting.FormattingRules
  parent: ChartTools.IO.Formatting
  href: ChartTools.IO.Formatting.FormattingRules.html
  name: FormattingRules
  nameWithType: FormattingRules
  fullName: ChartTools.IO.Formatting.FormattingRules
- uid: ChartTools.IO.Formatting
  commentId: N:ChartTools.IO.Formatting
  href: ChartTools.html
  name: ChartTools.IO.Formatting
  nameWithType: ChartTools.IO.Formatting
  fullName: ChartTools.IO.Formatting
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Formatting
    name: Formatting
    href: ChartTools.IO.Formatting.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Formatting
    name: Formatting
    href: ChartTools.IO.Formatting.html
- uid: ChartTools.Song.SyncTrack*
  commentId: Overload:ChartTools.Song.SyncTrack
  href: ChartTools.Song.html#ChartTools_Song_SyncTrack
  name: SyncTrack
  nameWithType: Song.SyncTrack
  fullName: ChartTools.Song.SyncTrack
- uid: ChartTools.SyncTrack
  commentId: T:ChartTools.SyncTrack
  parent: ChartTools
  href: ChartTools.SyncTrack.html
  name: SyncTrack
  nameWithType: SyncTrack
  fullName: ChartTools.SyncTrack
- uid: ChartTools.Song.GlobalEvents*
  commentId: Overload:ChartTools.Song.GlobalEvents
  href: ChartTools.Song.html#ChartTools_Song_GlobalEvents
  name: GlobalEvents
  nameWithType: Song.GlobalEvents
  fullName: ChartTools.Song.GlobalEvents
- uid: System.Collections.Generic.List{ChartTools.Events.GlobalEvent}
  commentId: T:System.Collections.Generic.List{ChartTools.Events.GlobalEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GlobalEvent>
  nameWithType: List<GlobalEvent>
  fullName: System.Collections.Generic.List<ChartTools.Events.GlobalEvent>
  nameWithType.vb: List(Of GlobalEvent)
  fullName.vb: System.Collections.Generic.List(Of ChartTools.Events.GlobalEvent)
  name.vb: List(Of GlobalEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ChartTools.Events.GlobalEvent
    name: GlobalEvent
    href: ChartTools.Events.GlobalEvent.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Events.GlobalEvent
    name: GlobalEvent
    href: ChartTools.Events.GlobalEvent.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ChartTools.Song.Instruments*
  commentId: Overload:ChartTools.Song.Instruments
  href: ChartTools.Song.html#ChartTools_Song_Instruments
  name: Instruments
  nameWithType: Song.Instruments
  fullName: ChartTools.Song.Instruments
- uid: ChartTools.InstrumentSet
  commentId: T:ChartTools.InstrumentSet
  parent: ChartTools
  href: ChartTools.InstrumentSet.html
  name: InstrumentSet
  nameWithType: InstrumentSet
  fullName: ChartTools.InstrumentSet
- uid: ChartTools.Song.UnknownChartSections*
  commentId: Overload:ChartTools.Song.UnknownChartSections
  href: ChartTools.Song.html#ChartTools_Song_UnknownChartSections
  name: UnknownChartSections
  nameWithType: Song.UnknownChartSections
  fullName: ChartTools.Song.UnknownChartSections
- uid: ChartTools.IO.Chart.ChartSection
  commentId: T:ChartTools.IO.Chart.ChartSection
  parent: ChartTools.IO.Chart
  href: ChartTools.IO.Chart.ChartSection.html
  name: ChartSection
  nameWithType: ChartSection
  fullName: ChartTools.IO.Chart.ChartSection
- uid: ChartTools.IO.Chart
  commentId: N:ChartTools.IO.Chart
  href: ChartTools.html
  name: ChartTools.IO.Chart
  nameWithType: ChartTools.IO.Chart
  fullName: ChartTools.IO.Chart
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Chart
    name: Chart
    href: ChartTools.IO.Chart.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Chart
    name: Chart
    href: ChartTools.IO.Chart.html
- uid: ChartTools.Song
  commentId: T:ChartTools.Song
  parent: ChartTools
  href: ChartTools.Song.html
  name: Song
  nameWithType: Song
  fullName: ChartTools.Song
- uid: ChartTools.Song.FromFile*
  commentId: Overload:ChartTools.Song.FromFile
  href: ChartTools.Song.html#ChartTools_Song_FromFile_System_String_ChartTools_IO_Configuration_ReadingConfiguration_ChartTools_IO_Formatting_FormattingRules_
  name: FromFile
  nameWithType: Song.FromFile
  fullName: ChartTools.Song.FromFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ChartTools.IO.Configuration.ReadingConfiguration
  commentId: T:ChartTools.IO.Configuration.ReadingConfiguration
  parent: ChartTools.IO.Configuration
  href: ChartTools.IO.Configuration.ReadingConfiguration.html
  name: ReadingConfiguration
  nameWithType: ReadingConfiguration
  fullName: ChartTools.IO.Configuration.ReadingConfiguration
- uid: ChartTools.IO.Configuration
  commentId: N:ChartTools.IO.Configuration
  href: ChartTools.html
  name: ChartTools.IO.Configuration
  nameWithType: ChartTools.IO.Configuration
  fullName: ChartTools.IO.Configuration
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
- uid: ChartTools.Song.FromFileAsync*
  commentId: Overload:ChartTools.Song.FromFileAsync
  href: ChartTools.Song.html#ChartTools_Song_FromFileAsync_System_String_ChartTools_IO_Chart_Configuration_ChartReadingConfiguration_ChartTools_IO_Formatting_FormattingRules_System_Threading_CancellationToken_
  name: FromFileAsync
  nameWithType: Song.FromFileAsync
  fullName: ChartTools.Song.FromFileAsync
- uid: ChartTools.IO.Chart.Configuration.ChartReadingConfiguration
  commentId: T:ChartTools.IO.Chart.Configuration.ChartReadingConfiguration
  parent: ChartTools.IO.Chart.Configuration
  href: ChartTools.IO.Chart.Configuration.ChartReadingConfiguration.html
  name: ChartReadingConfiguration
  nameWithType: ChartReadingConfiguration
  fullName: ChartTools.IO.Chart.Configuration.ChartReadingConfiguration
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{ChartTools.Song}
  commentId: T:System.Threading.Tasks.Task{ChartTools.Song}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Song>
  nameWithType: Task<Song>
  fullName: System.Threading.Tasks.Task<ChartTools.Song>
  nameWithType.vb: Task(Of Song)
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.Song)
  name.vb: Task(Of Song)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Song
    name: Song
    href: ChartTools.Song.html
  - name: )
- uid: ChartTools.IO.Chart.Configuration
  commentId: N:ChartTools.IO.Chart.Configuration
  href: ChartTools.html
  name: ChartTools.IO.Chart.Configuration
  nameWithType: ChartTools.IO.Chart.Configuration
  fullName: ChartTools.IO.Chart.Configuration
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Chart
    name: Chart
    href: ChartTools.IO.Chart.html
  - name: .
  - uid: ChartTools.IO.Chart.Configuration
    name: Configuration
    href: ChartTools.IO.Chart.Configuration.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Chart
    name: Chart
    href: ChartTools.IO.Chart.html
  - name: .
  - uid: ChartTools.IO.Chart.Configuration
    name: Configuration
    href: ChartTools.IO.Chart.Configuration.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ChartTools.Song.FromDirectory*
  commentId: Overload:ChartTools.Song.FromDirectory
  href: ChartTools.Song.html#ChartTools_Song_FromDirectory_System_String_ChartTools_IO_Configuration_ReadingConfiguration_
  name: FromDirectory
  nameWithType: Song.FromDirectory
  fullName: ChartTools.Song.FromDirectory
- uid: ChartTools.Song.FromDirectoryAsync*
  commentId: Overload:ChartTools.Song.FromDirectoryAsync
  href: ChartTools.Song.html#ChartTools_Song_FromDirectoryAsync_System_String_ChartTools_IO_Configuration_ReadingConfiguration_System_Threading_CancellationToken_
  name: FromDirectoryAsync
  nameWithType: Song.FromDirectoryAsync
  fullName: ChartTools.Song.FromDirectoryAsync
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.pathtoolongexception
  name: PathTooLongException
  nameWithType: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directorynotfoundexception
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: ChartTools.IO.LineException
  commentId: T:ChartTools.IO.LineException
  href: ChartTools.IO.LineException.html
  name: LineException
  nameWithType: LineException
  fullName: ChartTools.IO.LineException
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.unauthorizedaccessexception
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.securityexception
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: ChartTools.Song.ToFile*
  commentId: Overload:ChartTools.Song.ToFile
  href: ChartTools.Song.html#ChartTools_Song_ToFile_System_String_ChartTools_IO_Chart_Configuration_ChartWritingConfiguration_
  name: ToFile
  nameWithType: Song.ToFile
  fullName: ChartTools.Song.ToFile
- uid: ChartTools.IO.Chart.Configuration.ChartWritingConfiguration
  commentId: T:ChartTools.IO.Chart.Configuration.ChartWritingConfiguration
  parent: ChartTools.IO.Chart.Configuration
  href: ChartTools.IO.Chart.Configuration.ChartWritingConfiguration.html
  name: ChartWritingConfiguration
  nameWithType: ChartWritingConfiguration
  fullName: ChartTools.IO.Chart.Configuration.ChartWritingConfiguration
- uid: ChartTools.Song.ToFileAsync*
  commentId: Overload:ChartTools.Song.ToFileAsync
  href: ChartTools.Song.html#ChartTools_Song_ToFileAsync_System_String_ChartTools_IO_Chart_Configuration_ChartWritingConfiguration_System_Threading_CancellationToken_
  name: ToFileAsync
  nameWithType: Song.ToFileAsync
  fullName: ChartTools.Song.ToFileAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: ChartTools.Song.GetLyrics*
  commentId: Overload:ChartTools.Song.GetLyrics
  href: ChartTools.Song.html#ChartTools_Song_GetLyrics
  name: GetLyrics
  nameWithType: Song.GetLyrics
  fullName: ChartTools.Song.GetLyrics
- uid: System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase}
  commentId: T:System.Collections.Generic.IEnumerable{ChartTools.Lyrics.Phrase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Phrase>
  nameWithType: IEnumerable<Phrase>
  fullName: System.Collections.Generic.IEnumerable<ChartTools.Lyrics.Phrase>
  nameWithType.vb: IEnumerable(Of Phrase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ChartTools.Lyrics.Phrase)
  name.vb: IEnumerable(Of Phrase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ChartTools.Lyrics.Phrase
    name: Phrase
    href: ChartTools.Lyrics.Phrase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Lyrics.Phrase
    name: Phrase
    href: ChartTools.Lyrics.Phrase.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Song.GlobalEvents
  commentId: P:ChartTools.Song.GlobalEvents
  href: ChartTools.Song.html#ChartTools_Song_GlobalEvents
  name: GlobalEvents
  nameWithType: Song.GlobalEvents
  fullName: ChartTools.Song.GlobalEvents
- uid: ChartTools.Lyrics.Phrase
  commentId: T:ChartTools.Lyrics.Phrase
  href: ChartTools.Lyrics.Phrase.html
  name: Phrase
  nameWithType: Phrase
  fullName: ChartTools.Lyrics.Phrase
- uid: ChartTools.Song.SetLyrics*
  commentId: Overload:ChartTools.Song.SetLyrics
  href: ChartTools.Song.html#ChartTools_Song_SetLyrics_System_Collections_Generic_IEnumerable_ChartTools_Lyrics_Phrase__
  name: SetLyrics
  nameWithType: Song.SetLyrics
  fullName: ChartTools.Song.SetLyrics
