### YamlMime:ManagedReference
items:
- uid: ChartTools.Track
  commentId: T:ChartTools.Track
  id: Track
  parent: ChartTools
  children:
  - ChartTools.Track.Chords
  - ChartTools.Track.Difficulty
  - ChartTools.Track.FromDirectory(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  - ChartTools.Track.FromDirectory(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  - ChartTools.Track.FromDirectory(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  - ChartTools.Track.FromDirectory(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  - ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  - ChartTools.Track.FromFile(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Track.FromFile(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Track.FromFile(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Track.FromFile(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Track.FromFileAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Track.FromFileAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Track.FromFileAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Track.FromFileAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Track.GetChords
  - ChartTools.Track.GetInstrument
  - ChartTools.Track.IsEmpty
  - ChartTools.Track.LocalEvents
  - ChartTools.Track.ParentInstrument
  - ChartTools.Track.SpecialPhrases
  - ChartTools.Track.ToFile(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  - ChartTools.Track.ToFileAsync(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  - ChartTools.Track.ToString
  langs:
  - csharp
  - vb
  name: Track
  nameWithType: Track
  fullName: ChartTools.Track
  type: Class
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Track
    path: ../ChartTools/Tracks/Track.cs
    startLine: 11
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Base class for tracks
  example: []
  syntax:
    content: 'public abstract record Track : IEmptyVerifiable, IEquatable<Track>'
    content.vb: Public MustInherit Class Track Implements IEmptyVerifiable, IEquatable(Of Track)
  inheritance:
  - System.Object
  derivedClasses:
  - ChartTools.Track`1
  implements:
  - ChartTools.IEmptyVerifiable
  - System.IEquatable{ChartTools.Track}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - ChartTools.Track.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Track[])
  - ChartTools.Track.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
- uid: ChartTools.Track.IsEmpty
  commentId: P:ChartTools.Track.IsEmpty
  id: IsEmpty
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Track.IsEmpty
  fullName: ChartTools.Track.IsEmpty
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: IsEmpty
    path: ../ChartTools/Tracks/Track.cs
    startLine: 14
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if containing no data
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: ChartTools.Track.IsEmpty*
  implements:
  - ChartTools.IEmptyVerifiable.IsEmpty
- uid: ChartTools.Track.Difficulty
  commentId: P:ChartTools.Track.Difficulty
  id: Difficulty
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: Difficulty
  nameWithType: Track.Difficulty
  fullName: ChartTools.Track.Difficulty
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Difficulty
    path: ../ChartTools/Tracks/Track.cs
    startLine: 19
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of the track
  example: []
  syntax:
    content: public Difficulty Difficulty { get; init; }
    parameters: []
    return:
      type: ChartTools.Difficulty
    content.vb: Public Property Difficulty As Difficulty
  overload: ChartTools.Track.Difficulty*
- uid: ChartTools.Track.ParentInstrument
  commentId: P:ChartTools.Track.ParentInstrument
  id: ParentInstrument
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: ParentInstrument
  nameWithType: Track.ParentInstrument
  fullName: ChartTools.Track.ParentInstrument
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ParentInstrument
    path: ../ChartTools/Tracks/Track.cs
    startLine: 23
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Instrument containing the track
  example: []
  syntax:
    content: public Instrument? ParentInstrument { get; }
    parameters: []
    return:
      type: ChartTools.Instrument
    content.vb: Public ReadOnly Property ParentInstrument As Instrument
  overload: ChartTools.Track.ParentInstrument*
- uid: ChartTools.Track.LocalEvents
  commentId: P:ChartTools.Track.LocalEvents
  id: LocalEvents
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: LocalEvents
  nameWithType: Track.LocalEvents
  fullName: ChartTools.Track.LocalEvents
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: LocalEvents
    path: ../ChartTools/Tracks/Track.cs
    startLine: 27
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Events specific to the <xref href="ChartTools.Track" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public List<LocalEvent> LocalEvents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ChartTools.Events.LocalEvent}
    content.vb: Public ReadOnly Property LocalEvents As List(Of LocalEvent)
  overload: ChartTools.Track.LocalEvents*
- uid: ChartTools.Track.SpecialPhrases
  commentId: P:ChartTools.Track.SpecialPhrases
  id: SpecialPhrases
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: SpecialPhrases
  nameWithType: Track.SpecialPhrases
  fullName: ChartTools.Track.SpecialPhrases
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SpecialPhrases
    path: ../ChartTools/Tracks/Track.cs
    startLine: 31
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of special phrases
  example: []
  syntax:
    content: public List<TrackSpecialPhrase> SpecialPhrases { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ChartTools.TrackSpecialPhrase}
    content.vb: Public ReadOnly Property SpecialPhrases As List(Of TrackSpecialPhrase)
  overload: ChartTools.Track.SpecialPhrases*
- uid: ChartTools.Track.Chords
  commentId: P:ChartTools.Track.Chords
  id: Chords
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: Chords
  nameWithType: Track.Chords
  fullName: ChartTools.Track.Chords
  type: Property
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Chords
    path: ../ChartTools/Tracks/Track.cs
    startLine: 36
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Groups of notes of the same position
  example: []
  syntax:
    content: public IReadOnlyList<IChord> Chords { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{ChartTools.IChord}
    content.vb: Public ReadOnly Property Chords As IReadOnlyList(Of IChord)
  overload: ChartTools.Track.Chords*
- uid: ChartTools.Track.GetChords
  commentId: M:ChartTools.Track.GetChords
  id: GetChords
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: GetChords()
  nameWithType: Track.GetChords()
  fullName: ChartTools.Track.GetChords()
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetChords
    path: ../ChartTools/Tracks/Track.cs
    startLine: 38
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract IReadOnlyList<IChord> GetChords()
    return:
      type: System.Collections.Generic.IReadOnlyList{ChartTools.IChord}
    content.vb: Protected MustOverride Function GetChords() As IReadOnlyList(Of IChord)
  overload: ChartTools.Track.GetChords*
- uid: ChartTools.Track.GetInstrument
  commentId: M:ChartTools.Track.GetInstrument
  id: GetInstrument
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: GetInstrument()
  nameWithType: Track.GetInstrument()
  fullName: ChartTools.Track.GetInstrument()
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetInstrument
    path: ../ChartTools/Tracks/Track.cs
    startLine: 69
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: protected abstract Instrument? GetInstrument()
    return:
      type: ChartTools.Instrument
    content.vb: Protected MustOverride Function GetInstrument() As Instrument
  overload: ChartTools.Track.GetInstrument*
- uid: ChartTools.Track.FromFile(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Track.FromFile(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: FromFile(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFile(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  nameWithType: Track.FromFile(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  fullName: ChartTools.Track.FromFile(string, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFile
    path: ../ChartTools/Tracks/Track.cs
    startLine: 73
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack.")]

      public static Track FromFile(string path, InstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.InstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    return:
      type: ChartTools.Track
    content.vb: >-
      <Obsolete("Use ReadTrack.")>

      Public Shared Function FromFile(path As String, instrument As InstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing) As Track
  overload: ChartTools.Track.FromFile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack.
  nameWithType.vb: Track.FromFile(String, InstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Track.FromFile(String, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: FromFile(String, InstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
- uid: ChartTools.Track.FromFileAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromFileAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: FromFileAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFileAsync(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Track.FromFileAsync(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Track.FromFileAsync(string, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFileAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 76
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync.")]

      public static Task<Track> FromFileAsync(string path, InstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.InstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.Track}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync.")>

      Public Shared Function FromFileAsync(path As String, instrument As InstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Track)
  overload: ChartTools.Track.FromFileAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync.
  nameWithType.vb: Track.FromFileAsync(String, InstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Track.FromFileAsync(String, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: FromFileAsync(String, InstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Track.FromFile(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Track.FromFile(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: FromFile(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFile(string, Difficulty, ReadingConfiguration?, FormattingRules?)
  nameWithType: Track.FromFile(string, Difficulty, ReadingConfiguration?, FormattingRules?)
  fullName: ChartTools.Track.FromFile(string, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFile
    path: ../ChartTools/Tracks/Track.cs
    startLine: 79
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadDrumsTrack.")]

      public static Track<DrumsChord> FromFile(string path, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    return:
      type: ChartTools.Track{ChartTools.DrumsChord}
    content.vb: >-
      <Obsolete("Use ReadDrumsTrack.")>

      Public Shared Function FromFile(path As String, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing) As Track(Of DrumsChord)
  overload: ChartTools.Track.FromFile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadDrumsTrack.
  nameWithType.vb: Track.FromFile(String, Difficulty, ReadingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Track.FromFile(String, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: FromFile(String, Difficulty, ReadingConfiguration, FormattingRules)
- uid: ChartTools.Track.FromFileAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromFileAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: FromFileAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFileAsync(string, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Track.FromFileAsync(string, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Track.FromFileAsync(string, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFileAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 82
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadDrumsTrackAsync.")]

      public static Task<Track<DrumsChord>> FromFileAsync(string path, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.DrumsChord}}
    content.vb: >-
      <Obsolete("Use ReadDrumsTrackAsync.")>

      Public Shared Function FromFileAsync(path As String, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Track(Of DrumsChord))
  overload: ChartTools.Track.FromFileAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadDrumsTrackAsync.
  nameWithType.vb: Track.FromFileAsync(String, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Track.FromFileAsync(String, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: FromFileAsync(String, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Track.FromFile(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Track.FromFile(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: FromFile(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFile(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  nameWithType: Track.FromFile(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  fullName: ChartTools.Track.FromFile(string, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFile
    path: ../ChartTools/Tracks/Track.cs
    startLine: 85
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack.")]

      public static Track<GHLChord> FromFile(string path, GHLInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.GHLInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    return:
      type: ChartTools.Track{ChartTools.GHLChord}
    content.vb: >-
      <Obsolete("Use ReadTrack.")>

      Public Shared Function FromFile(path As String, instrument As GHLInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing) As Track(Of GHLChord)
  overload: ChartTools.Track.FromFile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack.
  nameWithType.vb: Track.FromFile(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Track.FromFile(String, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: FromFile(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
- uid: ChartTools.Track.FromFileAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromFileAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: FromFileAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFileAsync(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Track.FromFileAsync(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Track.FromFileAsync(string, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFileAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 88
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync.")]

      public static Task<Track<GHLChord>> FromFileAsync(string path, GHLInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.GHLInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.GHLChord}}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync.")>

      Public Shared Function FromFileAsync(path As String, instrument As GHLInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Track(Of GHLChord))
  overload: ChartTools.Track.FromFileAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync.
  nameWithType.vb: Track.FromFileAsync(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Track.FromFileAsync(String, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: FromFileAsync(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Track.FromFile(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Track.FromFile(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: FromFile(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFile(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  nameWithType: Track.FromFile(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?)
  fullName: ChartTools.Track.FromFile(string, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFile
    path: ../ChartTools/Tracks/Track.cs
    startLine: 91
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack.")]

      public static Track<StandardChord> FromFile(string path, StandardInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.StandardInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    return:
      type: ChartTools.Track{ChartTools.StandardChord}
    content.vb: >-
      <Obsolete("Use ReadTrack.")>

      Public Shared Function FromFile(path As String, instrument As StandardInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing) As Track(Of StandardChord)
  overload: ChartTools.Track.FromFile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack.
  nameWithType.vb: Track.FromFile(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Track.FromFile(String, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: FromFile(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules)
- uid: ChartTools.Track.FromFileAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromFileAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: FromFileAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromFileAsync(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Track.FromFileAsync(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Track.FromFileAsync(string, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromFileAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 94
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync.")]

      public static Task<Track<StandardChord>> FromFileAsync(string path, StandardInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: instrument
      type: ChartTools.StandardInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.StandardChord}}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync.")>

      Public Shared Function FromFileAsync(path As String, instrument As StandardInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Track(Of StandardChord))
  overload: ChartTools.Track.FromFileAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync.
  nameWithType.vb: Track.FromFileAsync(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Track.FromFileAsync(String, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: FromFileAsync(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Track.FromDirectory(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  commentId: M:ChartTools.Track.FromDirectory(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  id: FromDirectory(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectory(string, InstrumentIdentity, Difficulty, ReadingConfiguration?)
  nameWithType: Track.FromDirectory(string, InstrumentIdentity, Difficulty, ReadingConfiguration?)
  fullName: ChartTools.Track.FromDirectory(string, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectory
    path: ../ChartTools/Tracks/Track.cs
    startLine: 99
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack with Formatting.")]

      public static DirectoryResult<Track?> FromDirectory(string directory, InstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.InstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    return:
      type: ChartTools.IO.DirectoryResult{ChartTools.Track}
    content.vb: >-
      <Obsolete("Use ReadTrack with Formatting.")>

      Public Shared Function FromDirectory(directory As String, instrument As InstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing) As DirectoryResult(Of Track)
  overload: ChartTools.Track.FromDirectory*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack with Formatting.
  nameWithType.vb: Track.FromDirectory(String, InstrumentIdentity, Difficulty, ReadingConfiguration)
  fullName.vb: ChartTools.Track.FromDirectory(String, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration)
  name.vb: FromDirectory(String, InstrumentIdentity, Difficulty, ReadingConfiguration)
- uid: ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  id: FromDirectoryAsync(System.String,ChartTools.InstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectoryAsync(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  nameWithType: Track.FromDirectoryAsync(string, InstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  fullName: ChartTools.Track.FromDirectoryAsync(string, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectoryAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 102
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync with Formatting.")]

      public static Task<DirectoryResult<Track?>> FromDirectoryAsync(string directory, InstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.InstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track}}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync with Formatting.")>

      Public Shared Function FromDirectoryAsync(directory As String, instrument As InstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DirectoryResult(Of Track))
  overload: ChartTools.Track.FromDirectoryAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync with Formatting.
  nameWithType.vb: Track.FromDirectoryAsync(String, InstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Track.FromDirectoryAsync(String, ChartTools.InstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, System.Threading.CancellationToken)
  name.vb: FromDirectoryAsync(String, InstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
- uid: ChartTools.Track.FromDirectory(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  commentId: M:ChartTools.Track.FromDirectory(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  id: FromDirectory(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectory(string, Difficulty, ReadingConfiguration?)
  nameWithType: Track.FromDirectory(string, Difficulty, ReadingConfiguration?)
  fullName: ChartTools.Track.FromDirectory(string, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectory
    path: ../ChartTools/Tracks/Track.cs
    startLine: 105
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadDrumsTrack with Formatting.")]

      public static DirectoryResult<Track<DrumsChord>?> FromDirectory(string directory, Difficulty difficulty, ReadingConfiguration? config = null)
    parameters:
    - id: directory
      type: System.String
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    return:
      type: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}
    content.vb: >-
      <Obsolete("Use ReadDrumsTrack with Formatting.")>

      Public Shared Function FromDirectory(directory As String, difficulty As Difficulty, config As ReadingConfiguration = Nothing) As DirectoryResult(Of Track(Of DrumsChord))
  overload: ChartTools.Track.FromDirectory*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadDrumsTrack with Formatting.
  nameWithType.vb: Track.FromDirectory(String, Difficulty, ReadingConfiguration)
  fullName.vb: ChartTools.Track.FromDirectory(String, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration)
  name.vb: FromDirectory(String, Difficulty, ReadingConfiguration)
- uid: ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  id: FromDirectoryAsync(System.String,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectoryAsync(string, Difficulty, ReadingConfiguration?, CancellationToken)
  nameWithType: Track.FromDirectoryAsync(string, Difficulty, ReadingConfiguration?, CancellationToken)
  fullName: ChartTools.Track.FromDirectoryAsync(string, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectoryAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 108
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadDrumsTrackAsync with Formatting.")]

      public static Task<DirectoryResult<Track<DrumsChord>?>> FromDirectoryAsync(string directory, Difficulty difficulty, ReadingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: directory
      type: System.String
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}}
    content.vb: >-
      <Obsolete("Use ReadDrumsTrackAsync with Formatting.")>

      Public Shared Function FromDirectoryAsync(directory As String, difficulty As Difficulty, config As ReadingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DirectoryResult(Of Track(Of DrumsChord)))
  overload: ChartTools.Track.FromDirectoryAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadDrumsTrackAsync with Formatting.
  nameWithType.vb: Track.FromDirectoryAsync(String, Difficulty, ReadingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Track.FromDirectoryAsync(String, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, System.Threading.CancellationToken)
  name.vb: FromDirectoryAsync(String, Difficulty, ReadingConfiguration, CancellationToken)
- uid: ChartTools.Track.FromDirectory(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  commentId: M:ChartTools.Track.FromDirectory(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  id: FromDirectory(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectory(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?)
  nameWithType: Track.FromDirectory(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?)
  fullName: ChartTools.Track.FromDirectory(string, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectory
    path: ../ChartTools/Tracks/Track.cs
    startLine: 111
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack with Formatting.")]

      public static DirectoryResult<Track<GHLChord>?> FromDirectory(string directory, GHLInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.GHLInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    return:
      type: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}
    content.vb: >-
      <Obsolete("Use ReadTrack with Formatting.")>

      Public Shared Function FromDirectory(directory As String, instrument As GHLInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing) As DirectoryResult(Of Track(Of GHLChord))
  overload: ChartTools.Track.FromDirectory*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack with Formatting.
  nameWithType.vb: Track.FromDirectory(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration)
  fullName.vb: ChartTools.Track.FromDirectory(String, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration)
  name.vb: FromDirectory(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration)
- uid: ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  id: FromDirectoryAsync(System.String,ChartTools.GHLInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectoryAsync(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  nameWithType: Track.FromDirectoryAsync(string, GHLInstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  fullName: ChartTools.Track.FromDirectoryAsync(string, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectoryAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 114
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync with Formatting.")]

      public static Task<DirectoryResult<Track<GHLChord>?>> FromDirectoryAsync(string directory, GHLInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.GHLInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync with Formatting.")>

      Public Shared Function FromDirectoryAsync(directory As String, instrument As GHLInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DirectoryResult(Of Track(Of GHLChord)))
  overload: ChartTools.Track.FromDirectoryAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync with Formatting.
  nameWithType.vb: Track.FromDirectoryAsync(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Track.FromDirectoryAsync(String, ChartTools.GHLInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, System.Threading.CancellationToken)
  name.vb: FromDirectoryAsync(String, GHLInstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
- uid: ChartTools.Track.FromDirectory(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  commentId: M:ChartTools.Track.FromDirectory(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  id: FromDirectory(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectory(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?)
  nameWithType: Track.FromDirectory(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?)
  fullName: ChartTools.Track.FromDirectory(string, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectory
    path: ../ChartTools/Tracks/Track.cs
    startLine: 117
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrack with Formatting.")]

      public static DirectoryResult<Track<StandardChord>?> FromDirectory(string directory, StandardInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.StandardInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    return:
      type: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}
    content.vb: >-
      <Obsolete("Use ReadTrack with Formatting.")>

      Public Shared Function FromDirectory(directory As String, instrument As StandardInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing) As DirectoryResult(Of Track(Of StandardChord))
  overload: ChartTools.Track.FromDirectory*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrack with Formatting.
  nameWithType.vb: Track.FromDirectory(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration)
  fullName.vb: ChartTools.Track.FromDirectory(String, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration)
  name.vb: FromDirectory(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration)
- uid: ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.FromDirectoryAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  id: FromDirectoryAsync(System.String,ChartTools.StandardInstrumentIdentity,ChartTools.Difficulty,ChartTools.IO.Configuration.ReadingConfiguration,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: FromDirectoryAsync(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  nameWithType: Track.FromDirectoryAsync(string, StandardInstrumentIdentity, Difficulty, ReadingConfiguration?, CancellationToken)
  fullName: ChartTools.Track.FromDirectoryAsync(string, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: FromDirectoryAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 120
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReadTrackAsync with Formatting.")]

      public static Task<DirectoryResult<Track<StandardChord>?>> FromDirectoryAsync(string directory, StandardInstrumentIdentity instrument, Difficulty difficulty, ReadingConfiguration? config = null, CancellationToken cancellationToken = default)
    parameters:
    - id: directory
      type: System.String
    - id: instrument
      type: ChartTools.StandardInstrumentIdentity
    - id: difficulty
      type: ChartTools.Difficulty
    - id: config
      type: ChartTools.IO.Configuration.ReadingConfiguration
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}}
    content.vb: >-
      <Obsolete("Use ReadTrackAsync with Formatting.")>

      Public Shared Function FromDirectoryAsync(directory As String, instrument As StandardInstrumentIdentity, difficulty As Difficulty, config As ReadingConfiguration = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DirectoryResult(Of Track(Of StandardChord)))
  overload: ChartTools.Track.FromDirectoryAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReadTrackAsync with Formatting.
  nameWithType.vb: Track.FromDirectoryAsync(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
  fullName.vb: ChartTools.Track.FromDirectoryAsync(String, ChartTools.StandardInstrumentIdentity, ChartTools.Difficulty, ChartTools.IO.Configuration.ReadingConfiguration, System.Threading.CancellationToken)
  name.vb: FromDirectoryAsync(String, StandardInstrumentIdentity, Difficulty, ReadingConfiguration, CancellationToken)
- uid: ChartTools.Track.ToFile(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  commentId: M:ChartTools.Track.ToFile(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  id: ToFile(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: ToFile(string, WritingConfiguration?, FormattingRules?)
  nameWithType: Track.ToFile(string, WritingConfiguration?, FormattingRules?)
  fullName: ChartTools.Track.ToFile(string, ChartTools.IO.Configuration.WritingConfiguration?, ChartTools.IO.Formatting.FormattingRules?)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToFile
    path: ../ChartTools/Tracks/Track.cs
    startLine: 125
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReplaceTrack.")]

      public void ToFile(string path, WritingConfiguration? config = null, FormattingRules? formatting = null)
    parameters:
    - id: path
      type: System.String
    - id: config
      type: ChartTools.IO.Configuration.WritingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    content.vb: >-
      <Obsolete("Use ReplaceTrack.")>

      Public Sub ToFile(path As String, config As WritingConfiguration = Nothing, formatting As FormattingRules = Nothing)
  overload: ChartTools.Track.ToFile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReplaceTrack.
  nameWithType.vb: Track.ToFile(String, WritingConfiguration, FormattingRules)
  fullName.vb: ChartTools.Track.ToFile(String, ChartTools.IO.Configuration.WritingConfiguration, ChartTools.IO.Formatting.FormattingRules)
  name.vb: ToFile(String, WritingConfiguration, FormattingRules)
- uid: ChartTools.Track.ToFileAsync(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  commentId: M:ChartTools.Track.ToFileAsync(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  id: ToFileAsync(System.String,ChartTools.IO.Configuration.WritingConfiguration,ChartTools.IO.Formatting.FormattingRules,System.Threading.CancellationToken)
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: ToFileAsync(string, WritingConfiguration?, FormattingRules?, CancellationToken)
  nameWithType: Track.ToFileAsync(string, WritingConfiguration?, FormattingRules?, CancellationToken)
  fullName: ChartTools.Track.ToFileAsync(string, ChartTools.IO.Configuration.WritingConfiguration?, ChartTools.IO.Formatting.FormattingRules?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToFileAsync
    path: ../ChartTools/Tracks/Track.cs
    startLine: 128
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: >-
      [Obsolete("Use ReplaceTrackAsync.")]

      public Task ToFileAsync(string path, WritingConfiguration? config = null, FormattingRules? formatting = null, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
    - id: config
      type: ChartTools.IO.Configuration.WritingConfiguration
    - id: formatting
      type: ChartTools.IO.Formatting.FormattingRules
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Obsolete("Use ReplaceTrackAsync.")>

      Public Function ToFileAsync(path As String, config As WritingConfiguration = Nothing, formatting As FormattingRules = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: ChartTools.Track.ToFileAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ReplaceTrackAsync.
  nameWithType.vb: Track.ToFileAsync(String, WritingConfiguration, FormattingRules, CancellationToken)
  fullName.vb: ChartTools.Track.ToFileAsync(String, ChartTools.IO.Configuration.WritingConfiguration, ChartTools.IO.Formatting.FormattingRules, System.Threading.CancellationToken)
  name.vb: ToFileAsync(String, WritingConfiguration, FormattingRules, CancellationToken)
- uid: ChartTools.Track.ToString
  commentId: M:ChartTools.Track.ToString
  id: ToString
  parent: ChartTools.Track
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Track.ToString()
  fullName: ChartTools.Track.ToString()
  type: Method
  source:
    remote:
      path: ChartTools/Tracks/Track.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: ToString
    path: ../ChartTools/Tracks/Track.cs
    startLine: 131
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ChartTools.Track.ToString*
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ChartTools.IEmptyVerifiable
  commentId: T:ChartTools.IEmptyVerifiable
  parent: ChartTools
  href: ChartTools.IEmptyVerifiable.html
  name: IEmptyVerifiable
  nameWithType: IEmptyVerifiable
  fullName: ChartTools.IEmptyVerifiable
- uid: System.IEquatable{ChartTools.Track}
  commentId: T:System.IEquatable{ChartTools.Track}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Track>
  nameWithType: IEquatable<Track>
  fullName: System.IEquatable<ChartTools.Track>
  nameWithType.vb: IEquatable(Of Track)
  fullName.vb: System.IEquatable(Of ChartTools.Track)
  name.vb: IEquatable(Of Track)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ChartTools.Track.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Track[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<Track>(Track, bool, bool, params Track[])
  nameWithType: PropertyMerger.Merge<Track>(Track, bool, bool, params Track[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.Track>(ChartTools.Track, bool, bool, params ChartTools.Track[])
  nameWithType.vb: PropertyMerger.Merge(Of Track)(Track, Boolean, Boolean, ParamArray Track())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.Track)(ChartTools.Track, Boolean, Boolean, ParamArray ChartTools.Track())
  name.vb: Merge(Of Track)(Track, Boolean, Boolean, ParamArray Track())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Track,System.Boolean,System.Boolean,ChartTools.Track[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Track,System.Boolean,System.Boolean,ChartTools.Track[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Track.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  name: Rescale(Track, float)
  nameWithType: TempoRescaler.Rescale(Track, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track, float)
  nameWithType.vb: TempoRescaler.Rescale(Track, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track, Single)
  name.vb: Rescale(Track, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  name: Rescale(Track, float)
  nameWithType: TempoRescaler.Rescale(Track, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track, float)
  nameWithType.vb: TempoRescaler.Rescale(Track, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track, Single)
  name.vb: Rescale(Track, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Track,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Track_System_Single_
  - name: (
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.TempoRescaler
  commentId: T:ChartTools.Tools.TempoRescaler
  parent: ChartTools.Tools
  href: ChartTools.Tools.TempoRescaler.html
  name: TempoRescaler
  nameWithType: TempoRescaler
  fullName: ChartTools.Tools.TempoRescaler
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Track.IsEmpty*
  commentId: Overload:ChartTools.Track.IsEmpty
  href: ChartTools.Track.html#ChartTools_Track_IsEmpty
  name: IsEmpty
  nameWithType: Track.IsEmpty
  fullName: ChartTools.Track.IsEmpty
- uid: ChartTools.IEmptyVerifiable.IsEmpty
  commentId: P:ChartTools.IEmptyVerifiable.IsEmpty
  parent: ChartTools.IEmptyVerifiable
  href: ChartTools.IEmptyVerifiable.html#ChartTools_IEmptyVerifiable_IsEmpty
  name: IsEmpty
  nameWithType: IEmptyVerifiable.IsEmpty
  fullName: ChartTools.IEmptyVerifiable.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ChartTools.Track.Difficulty*
  commentId: Overload:ChartTools.Track.Difficulty
  href: ChartTools.Track.html#ChartTools_Track_Difficulty
  name: Difficulty
  nameWithType: Track.Difficulty
  fullName: ChartTools.Track.Difficulty
- uid: ChartTools.Difficulty
  commentId: T:ChartTools.Difficulty
  parent: ChartTools
  href: ChartTools.Difficulty.html
  name: Difficulty
  nameWithType: Difficulty
  fullName: ChartTools.Difficulty
- uid: ChartTools.Track.ParentInstrument*
  commentId: Overload:ChartTools.Track.ParentInstrument
  href: ChartTools.Track.html#ChartTools_Track_ParentInstrument
  name: ParentInstrument
  nameWithType: Track.ParentInstrument
  fullName: ChartTools.Track.ParentInstrument
- uid: ChartTools.Instrument
  commentId: T:ChartTools.Instrument
  parent: ChartTools
  href: ChartTools.Instrument.html
  name: Instrument
  nameWithType: Instrument
  fullName: ChartTools.Instrument
- uid: ChartTools.Track
  commentId: T:ChartTools.Track
  parent: ChartTools
  href: ChartTools.Track.html
  name: Track
  nameWithType: Track
  fullName: ChartTools.Track
- uid: ChartTools.Track.LocalEvents*
  commentId: Overload:ChartTools.Track.LocalEvents
  href: ChartTools.Track.html#ChartTools_Track_LocalEvents
  name: LocalEvents
  nameWithType: Track.LocalEvents
  fullName: ChartTools.Track.LocalEvents
- uid: System.Collections.Generic.List{ChartTools.Events.LocalEvent}
  commentId: T:System.Collections.Generic.List{ChartTools.Events.LocalEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LocalEvent>
  nameWithType: List<LocalEvent>
  fullName: System.Collections.Generic.List<ChartTools.Events.LocalEvent>
  nameWithType.vb: List(Of LocalEvent)
  fullName.vb: System.Collections.Generic.List(Of ChartTools.Events.LocalEvent)
  name.vb: List(Of LocalEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ChartTools.Events.LocalEvent
    name: LocalEvent
    href: ChartTools.Events.LocalEvent.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Events.LocalEvent
    name: LocalEvent
    href: ChartTools.Events.LocalEvent.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ChartTools.Track.SpecialPhrases*
  commentId: Overload:ChartTools.Track.SpecialPhrases
  href: ChartTools.Track.html#ChartTools_Track_SpecialPhrases
  name: SpecialPhrases
  nameWithType: Track.SpecialPhrases
  fullName: ChartTools.Track.SpecialPhrases
- uid: System.Collections.Generic.List{ChartTools.TrackSpecialPhrase}
  commentId: T:System.Collections.Generic.List{ChartTools.TrackSpecialPhrase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TrackSpecialPhrase>
  nameWithType: List<TrackSpecialPhrase>
  fullName: System.Collections.Generic.List<ChartTools.TrackSpecialPhrase>
  nameWithType.vb: List(Of TrackSpecialPhrase)
  fullName.vb: System.Collections.Generic.List(Of ChartTools.TrackSpecialPhrase)
  name.vb: List(Of TrackSpecialPhrase)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ChartTools.TrackSpecialPhrase
    name: TrackSpecialPhrase
    href: ChartTools.TrackSpecialPhrase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.TrackSpecialPhrase
    name: TrackSpecialPhrase
    href: ChartTools.TrackSpecialPhrase.html
  - name: )
- uid: ChartTools.Track.Chords*
  commentId: Overload:ChartTools.Track.Chords
  href: ChartTools.Track.html#ChartTools_Track_Chords
  name: Chords
  nameWithType: Track.Chords
  fullName: ChartTools.Track.Chords
- uid: System.Collections.Generic.IReadOnlyList{ChartTools.IChord}
  commentId: T:System.Collections.Generic.IReadOnlyList{ChartTools.IChord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<IChord>
  nameWithType: IReadOnlyList<IChord>
  fullName: System.Collections.Generic.IReadOnlyList<ChartTools.IChord>
  nameWithType.vb: IReadOnlyList(Of IChord)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of ChartTools.IChord)
  name.vb: IReadOnlyList(Of IChord)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IChord
    name: IChord
    href: ChartTools.IChord.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Track.GetChords*
  commentId: Overload:ChartTools.Track.GetChords
  href: ChartTools.Track.html#ChartTools_Track_GetChords
  name: GetChords
  nameWithType: Track.GetChords
  fullName: ChartTools.Track.GetChords
- uid: ChartTools.Track.GetInstrument*
  commentId: Overload:ChartTools.Track.GetInstrument
  href: ChartTools.Track.html#ChartTools_Track_GetInstrument
  name: GetInstrument
  nameWithType: Track.GetInstrument
  fullName: ChartTools.Track.GetInstrument
- uid: ChartTools.Track.FromFile*
  commentId: Overload:ChartTools.Track.FromFile
  href: ChartTools.Track.html#ChartTools_Track_FromFile_System_String_ChartTools_InstrumentIdentity_ChartTools_Difficulty_ChartTools_IO_Configuration_ReadingConfiguration_ChartTools_IO_Formatting_FormattingRules_
  name: FromFile
  nameWithType: Track.FromFile
  fullName: ChartTools.Track.FromFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ChartTools.InstrumentIdentity
  commentId: T:ChartTools.InstrumentIdentity
  parent: ChartTools
  href: ChartTools.InstrumentIdentity.html
  name: InstrumentIdentity
  nameWithType: InstrumentIdentity
  fullName: ChartTools.InstrumentIdentity
- uid: ChartTools.IO.Configuration.ReadingConfiguration
  commentId: T:ChartTools.IO.Configuration.ReadingConfiguration
  parent: ChartTools.IO.Configuration
  href: ChartTools.IO.Configuration.ReadingConfiguration.html
  name: ReadingConfiguration
  nameWithType: ReadingConfiguration
  fullName: ChartTools.IO.Configuration.ReadingConfiguration
- uid: ChartTools.IO.Formatting.FormattingRules
  commentId: T:ChartTools.IO.Formatting.FormattingRules
  parent: ChartTools.IO.Formatting
  href: ChartTools.IO.Formatting.FormattingRules.html
  name: FormattingRules
  nameWithType: FormattingRules
  fullName: ChartTools.IO.Formatting.FormattingRules
- uid: ChartTools.IO.Configuration
  commentId: N:ChartTools.IO.Configuration
  href: ChartTools.html
  name: ChartTools.IO.Configuration
  nameWithType: ChartTools.IO.Configuration
  fullName: ChartTools.IO.Configuration
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Configuration
    name: Configuration
    href: ChartTools.IO.Configuration.html
- uid: ChartTools.IO.Formatting
  commentId: N:ChartTools.IO.Formatting
  href: ChartTools.html
  name: ChartTools.IO.Formatting
  nameWithType: ChartTools.IO.Formatting
  fullName: ChartTools.IO.Formatting
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Formatting
    name: Formatting
    href: ChartTools.IO.Formatting.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  - name: .
  - uid: ChartTools.IO.Formatting
    name: Formatting
    href: ChartTools.IO.Formatting.html
- uid: ChartTools.Track.FromFileAsync*
  commentId: Overload:ChartTools.Track.FromFileAsync
  href: ChartTools.Track.html#ChartTools_Track_FromFileAsync_System_String_ChartTools_InstrumentIdentity_ChartTools_Difficulty_ChartTools_IO_Configuration_ReadingConfiguration_ChartTools_IO_Formatting_FormattingRules_System_Threading_CancellationToken_
  name: FromFileAsync
  nameWithType: Track.FromFileAsync
  fullName: ChartTools.Track.FromFileAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{ChartTools.Track}
  commentId: T:System.Threading.Tasks.Task{ChartTools.Track}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Track>
  nameWithType: Task<Track>
  fullName: System.Threading.Tasks.Task<ChartTools.Track>
  nameWithType.vb: Task(Of Track)
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.Track)
  name.vb: Task(Of Track)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ChartTools.Track{ChartTools.DrumsChord}
  commentId: T:ChartTools.Track{ChartTools.DrumsChord}
  parent: ChartTools
  definition: ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<DrumsChord>
  nameWithType: Track<DrumsChord>
  fullName: ChartTools.Track<ChartTools.DrumsChord>
  nameWithType.vb: Track(Of DrumsChord)
  fullName.vb: ChartTools.Track(Of ChartTools.DrumsChord)
  name.vb: Track(Of DrumsChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: )
- uid: ChartTools.Track`1
  commentId: T:ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<TChord>
  nameWithType: Track<TChord>
  fullName: ChartTools.Track<TChord>
  nameWithType.vb: Track(Of TChord)
  fullName.vb: ChartTools.Track(Of TChord)
  name.vb: Track(Of TChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - name: TChord
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.DrumsChord}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.Track{ChartTools.DrumsChord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Track<DrumsChord>>
  nameWithType: Task<Track<DrumsChord>>
  fullName: System.Threading.Tasks.Task<ChartTools.Track<ChartTools.DrumsChord>>
  nameWithType.vb: Task(Of Track(Of DrumsChord))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.Track(Of ChartTools.DrumsChord))
  name.vb: Task(Of Track(Of DrumsChord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: )
  - name: )
- uid: ChartTools.GHLInstrumentIdentity
  commentId: T:ChartTools.GHLInstrumentIdentity
  parent: ChartTools
  href: ChartTools.GHLInstrumentIdentity.html
  name: GHLInstrumentIdentity
  nameWithType: GHLInstrumentIdentity
  fullName: ChartTools.GHLInstrumentIdentity
- uid: ChartTools.Track{ChartTools.GHLChord}
  commentId: T:ChartTools.Track{ChartTools.GHLChord}
  parent: ChartTools
  definition: ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<GHLChord>
  nameWithType: Track<GHLChord>
  fullName: ChartTools.Track<ChartTools.GHLChord>
  nameWithType.vb: Track(Of GHLChord)
  fullName.vb: ChartTools.Track(Of ChartTools.GHLChord)
  name.vb: Track(Of GHLChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.GHLChord}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.Track{ChartTools.GHLChord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Track<GHLChord>>
  nameWithType: Task<Track<GHLChord>>
  fullName: System.Threading.Tasks.Task<ChartTools.Track<ChartTools.GHLChord>>
  nameWithType.vb: Task(Of Track(Of GHLChord))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.Track(Of ChartTools.GHLChord))
  name.vb: Task(Of Track(Of GHLChord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: )
  - name: )
- uid: ChartTools.StandardInstrumentIdentity
  commentId: T:ChartTools.StandardInstrumentIdentity
  parent: ChartTools
  href: ChartTools.StandardInstrumentIdentity.html
  name: StandardInstrumentIdentity
  nameWithType: StandardInstrumentIdentity
  fullName: ChartTools.StandardInstrumentIdentity
- uid: ChartTools.Track{ChartTools.StandardChord}
  commentId: T:ChartTools.Track{ChartTools.StandardChord}
  parent: ChartTools
  definition: ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<StandardChord>
  nameWithType: Track<StandardChord>
  fullName: ChartTools.Track<ChartTools.StandardChord>
  nameWithType.vb: Track(Of StandardChord)
  fullName.vb: ChartTools.Track(Of ChartTools.StandardChord)
  name.vb: Track(Of StandardChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.Track{ChartTools.StandardChord}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.Track{ChartTools.StandardChord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Track<StandardChord>>
  nameWithType: Task<Track<StandardChord>>
  fullName: System.Threading.Tasks.Task<ChartTools.Track<ChartTools.StandardChord>>
  nameWithType.vb: Task(Of Track(Of StandardChord))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.Track(Of ChartTools.StandardChord))
  name.vb: Task(Of Track(Of StandardChord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: )
  - name: )
- uid: ChartTools.Track.FromDirectory*
  commentId: Overload:ChartTools.Track.FromDirectory
  href: ChartTools.Track.html#ChartTools_Track_FromDirectory_System_String_ChartTools_InstrumentIdentity_ChartTools_Difficulty_ChartTools_IO_Configuration_ReadingConfiguration_
  name: FromDirectory
  nameWithType: Track.FromDirectory
  fullName: ChartTools.Track.FromDirectory
- uid: ChartTools.IO.DirectoryResult{ChartTools.Track}
  commentId: T:ChartTools.IO.DirectoryResult{ChartTools.Track}
  parent: ChartTools.IO
  definition: ChartTools.IO.DirectoryResult`1
  href: ChartTools.IO.DirectoryResult-1.html
  name: DirectoryResult<Track>
  nameWithType: DirectoryResult<Track>
  fullName: ChartTools.IO.DirectoryResult<ChartTools.Track>
  nameWithType.vb: DirectoryResult(Of Track)
  fullName.vb: ChartTools.IO.DirectoryResult(Of ChartTools.Track)
  name.vb: DirectoryResult(Of Track)
  spec.csharp:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  spec.vb:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
- uid: ChartTools.IO.DirectoryResult`1
  commentId: T:ChartTools.IO.DirectoryResult`1
  href: ChartTools.IO.DirectoryResult-1.html
  name: DirectoryResult<T>
  nameWithType: DirectoryResult<T>
  fullName: ChartTools.IO.DirectoryResult<T>
  nameWithType.vb: DirectoryResult(Of T)
  fullName.vb: ChartTools.IO.DirectoryResult(Of T)
  name.vb: DirectoryResult(Of T)
  spec.csharp:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.IO
  commentId: N:ChartTools.IO
  href: ChartTools.html
  name: ChartTools.IO
  nameWithType: ChartTools.IO
  fullName: ChartTools.IO
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.IO
    name: IO
    href: ChartTools.IO.html
- uid: ChartTools.Track.FromDirectoryAsync*
  commentId: Overload:ChartTools.Track.FromDirectoryAsync
  href: ChartTools.Track.html#ChartTools_Track_FromDirectoryAsync_System_String_ChartTools_InstrumentIdentity_ChartTools_Difficulty_ChartTools_IO_Configuration_ReadingConfiguration_System_Threading_CancellationToken_
  name: FromDirectoryAsync
  nameWithType: Track.FromDirectoryAsync
  fullName: ChartTools.Track.FromDirectoryAsync
- uid: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DirectoryResult<Track>>
  nameWithType: Task<DirectoryResult<Track>>
  fullName: System.Threading.Tasks.Task<ChartTools.IO.DirectoryResult<ChartTools.Track>>
  nameWithType.vb: Task(Of DirectoryResult(Of Track))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.IO.DirectoryResult(Of ChartTools.Track))
  name.vb: Task(Of DirectoryResult(Of Track))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track
    name: Track
    href: ChartTools.Track.html
  - name: )
  - name: )
- uid: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}
  commentId: T:ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}
  parent: ChartTools.IO
  definition: ChartTools.IO.DirectoryResult`1
  href: ChartTools.IO.DirectoryResult-1.html
  name: DirectoryResult<Track<DrumsChord>>
  nameWithType: DirectoryResult<Track<DrumsChord>>
  fullName: ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.DrumsChord>>
  nameWithType.vb: DirectoryResult(Of Track(Of DrumsChord))
  fullName.vb: ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.DrumsChord))
  name.vb: DirectoryResult(Of Track(Of DrumsChord))
  spec.csharp:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.DrumsChord}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DirectoryResult<Track<DrumsChord>>>
  nameWithType: Task<DirectoryResult<Track<DrumsChord>>>
  fullName: System.Threading.Tasks.Task<ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.DrumsChord>>>
  nameWithType.vb: Task(Of DirectoryResult(Of Track(Of DrumsChord)))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.DrumsChord)))
  name.vb: Task(Of DirectoryResult(Of Track(Of DrumsChord)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.DrumsChord
    name: DrumsChord
    href: ChartTools.DrumsChord.html
  - name: )
  - name: )
  - name: )
- uid: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}
  commentId: T:ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}
  parent: ChartTools.IO
  definition: ChartTools.IO.DirectoryResult`1
  href: ChartTools.IO.DirectoryResult-1.html
  name: DirectoryResult<Track<GHLChord>>
  nameWithType: DirectoryResult<Track<GHLChord>>
  fullName: ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.GHLChord>>
  nameWithType.vb: DirectoryResult(Of Track(Of GHLChord))
  fullName.vb: ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.GHLChord))
  name.vb: DirectoryResult(Of Track(Of GHLChord))
  spec.csharp:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.GHLChord}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DirectoryResult<Track<GHLChord>>>
  nameWithType: Task<DirectoryResult<Track<GHLChord>>>
  fullName: System.Threading.Tasks.Task<ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.GHLChord>>>
  nameWithType.vb: Task(Of DirectoryResult(Of Track(Of GHLChord)))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.GHLChord)))
  name.vb: Task(Of DirectoryResult(Of Track(Of GHLChord)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.GHLChord
    name: GHLChord
    href: ChartTools.GHLChord.html
  - name: )
  - name: )
  - name: )
- uid: ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}
  commentId: T:ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}
  parent: ChartTools.IO
  definition: ChartTools.IO.DirectoryResult`1
  href: ChartTools.IO.DirectoryResult-1.html
  name: DirectoryResult<Track<StandardChord>>
  nameWithType: DirectoryResult<Track<StandardChord>>
  fullName: ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.StandardChord>>
  nameWithType.vb: DirectoryResult(Of Track(Of StandardChord))
  fullName.vb: ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.StandardChord))
  name.vb: DirectoryResult(Of Track(Of StandardChord))
  spec.csharp:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}}
  commentId: T:System.Threading.Tasks.Task{ChartTools.IO.DirectoryResult{ChartTools.Track{ChartTools.StandardChord}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DirectoryResult<Track<StandardChord>>>
  nameWithType: Task<DirectoryResult<Track<StandardChord>>>
  fullName: System.Threading.Tasks.Task<ChartTools.IO.DirectoryResult<ChartTools.Track<ChartTools.StandardChord>>>
  nameWithType.vb: Task(Of DirectoryResult(Of Track(Of StandardChord)))
  fullName.vb: System.Threading.Tasks.Task(Of ChartTools.IO.DirectoryResult(Of ChartTools.Track(Of ChartTools.StandardChord)))
  name.vb: Task(Of DirectoryResult(Of Track(Of StandardChord)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.IO.DirectoryResult`1
    name: DirectoryResult
    href: ChartTools.IO.DirectoryResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.StandardChord
    name: StandardChord
    href: ChartTools.StandardChord.html
  - name: )
  - name: )
  - name: )
- uid: ChartTools.Track.ToFile*
  commentId: Overload:ChartTools.Track.ToFile
  href: ChartTools.Track.html#ChartTools_Track_ToFile_System_String_ChartTools_IO_Configuration_WritingConfiguration_ChartTools_IO_Formatting_FormattingRules_
  name: ToFile
  nameWithType: Track.ToFile
  fullName: ChartTools.Track.ToFile
- uid: ChartTools.IO.Configuration.WritingConfiguration
  commentId: T:ChartTools.IO.Configuration.WritingConfiguration
  parent: ChartTools.IO.Configuration
  href: ChartTools.IO.Configuration.WritingConfiguration.html
  name: WritingConfiguration
  nameWithType: WritingConfiguration
  fullName: ChartTools.IO.Configuration.WritingConfiguration
- uid: ChartTools.Track.ToFileAsync*
  commentId: Overload:ChartTools.Track.ToFileAsync
  href: ChartTools.Track.html#ChartTools_Track_ToFileAsync_System_String_ChartTools_IO_Configuration_WritingConfiguration_ChartTools_IO_Formatting_FormattingRules_System_Threading_CancellationToken_
  name: ToFileAsync
  nameWithType: Track.ToFileAsync
  fullName: ChartTools.Track.ToFileAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.Track.ToString*
  commentId: Overload:ChartTools.Track.ToString
  href: ChartTools.Track.html#ChartTools_Track_ToString
  name: ToString
  nameWithType: Track.ToString
  fullName: ChartTools.Track.ToString
