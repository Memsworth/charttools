### YamlMime:ManagedReference
items:
- uid: ChartTools.Instrument`1
  commentId: T:ChartTools.Instrument`1
  id: Instrument`1
  parent: ChartTools
  children:
  - ChartTools.Instrument`1.CreateTrack(ChartTools.Difficulty)
  - ChartTools.Instrument`1.Easy
  - ChartTools.Instrument`1.Expert
  - ChartTools.Instrument`1.GetEasy
  - ChartTools.Instrument`1.GetExistingTracks
  - ChartTools.Instrument`1.GetExpert
  - ChartTools.Instrument`1.GetHard
  - ChartTools.Instrument`1.GetMedium
  - ChartTools.Instrument`1.GetTrack(ChartTools.Difficulty)
  - ChartTools.Instrument`1.GetTracks
  - ChartTools.Instrument`1.Hard
  - ChartTools.Instrument`1.Medium
  - ChartTools.Instrument`1.RemoveTrack(ChartTools.Difficulty)
  - ChartTools.Instrument`1.SetTrack(ChartTools.Track{`0})
  langs:
  - csharp
  - vb
  name: Instrument<TChord>
  nameWithType: Instrument<TChord>
  fullName: ChartTools.Instrument<TChord>
  type: Class
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Instrument
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 5
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Set of tracks common to an instrument
  example: []
  syntax:
    content: 'public abstract record Instrument<TChord> : Instrument, IEmptyVerifiable, IEquatable<Instrument>, IEquatable<Instrument<TChord>> where TChord : IChord'
    typeParameters:
    - id: TChord
    content.vb: Public MustInherit Class Instrument(Of TChord As IChord) Inherits Instrument Implements IEmptyVerifiable, IEquatable(Of Instrument), IEquatable(Of Instrument(Of TChord))
  inheritance:
  - System.Object
  - ChartTools.Instrument
  derivedClasses:
  - ChartTools.Drums
  - ChartTools.GHLInstrument
  - ChartTools.StandardInstrument
  - ChartTools.Vocals
  implements:
  - ChartTools.IEmptyVerifiable
  - System.IEquatable{ChartTools.Instrument}
  - System.IEquatable{ChartTools.Instrument`1}
  inheritedMembers:
  - ChartTools.Instrument.IsEmpty
  - ChartTools.Instrument.InstrumentIdentity
  - ChartTools.Instrument.InstrumentType
  - ChartTools.Instrument.SpecialPhrases
  - ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  - ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  - ChartTools.Instrument.GetIdentity
  - ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  - ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  - ChartTools.Instrument.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - ChartTools.Instrument.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  - ChartTools.Instrument`1.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Instrument{{TChord}}[])
  nameWithType.vb: Instrument(Of TChord)
  fullName.vb: ChartTools.Instrument(Of TChord)
  name.vb: Instrument(Of TChord)
- uid: ChartTools.Instrument`1.Easy
  commentId: P:ChartTools.Instrument`1.Easy
  id: Easy
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: Easy
  nameWithType: Instrument<TChord>.Easy
  fullName: ChartTools.Instrument<TChord>.Easy
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Easy
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 10
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Easy track
  example: []
  syntax:
    content: public Track<TChord>? Easy { get; set; }
    parameters: []
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Property Easy As Track(Of TChord)
  overload: ChartTools.Instrument`1.Easy*
  nameWithType.vb: Instrument(Of TChord).Easy
  fullName.vb: ChartTools.Instrument(Of TChord).Easy
- uid: ChartTools.Instrument`1.Medium
  commentId: P:ChartTools.Instrument`1.Medium
  id: Medium
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: Medium
  nameWithType: Instrument<TChord>.Medium
  fullName: ChartTools.Instrument<TChord>.Medium
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Medium
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 20
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Medium track
  example: []
  syntax:
    content: public Track<TChord>? Medium { get; set; }
    parameters: []
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Property Medium As Track(Of TChord)
  overload: ChartTools.Instrument`1.Medium*
  nameWithType.vb: Instrument(Of TChord).Medium
  fullName.vb: ChartTools.Instrument(Of TChord).Medium
- uid: ChartTools.Instrument`1.Hard
  commentId: P:ChartTools.Instrument`1.Hard
  id: Hard
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: Hard
  nameWithType: Instrument<TChord>.Hard
  fullName: ChartTools.Instrument<TChord>.Hard
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Hard
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 30
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Hard track
  example: []
  syntax:
    content: public Track<TChord>? Hard { get; set; }
    parameters: []
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Property Hard As Track(Of TChord)
  overload: ChartTools.Instrument`1.Hard*
  nameWithType.vb: Instrument(Of TChord).Hard
  fullName.vb: ChartTools.Instrument(Of TChord).Hard
- uid: ChartTools.Instrument`1.Expert
  commentId: P:ChartTools.Instrument`1.Expert
  id: Expert
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: Expert
  nameWithType: Instrument<TChord>.Expert
  fullName: ChartTools.Instrument<TChord>.Expert
  type: Property
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Expert
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 40
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Expert track
  example: []
  syntax:
    content: public Track<TChord>? Expert { get; set; }
    parameters: []
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Property Expert As Track(Of TChord)
  overload: ChartTools.Instrument`1.Expert*
  nameWithType.vb: Instrument(Of TChord).Expert
  fullName.vb: ChartTools.Instrument(Of TChord).Expert
- uid: ChartTools.Instrument`1.GetTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument`1.GetTrack(ChartTools.Difficulty)
  id: GetTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetTrack(Difficulty)
  nameWithType: Instrument<TChord>.GetTrack(Difficulty)
  fullName: ChartTools.Instrument<TChord>.GetTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetTrack
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 50
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the <xref href="ChartTools.Track%601" data-throw-if-not-resolved="false"></xref> that matches a <xref href="ChartTools.Difficulty" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override Track<TChord>? GetTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Overrides Function GetTrack(difficulty As Difficulty) As Track(Of TChord)
  overridden: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  overload: ChartTools.Instrument`1.GetTrack*
  nameWithType.vb: Instrument(Of TChord).GetTrack(Difficulty)
  fullName.vb: ChartTools.Instrument(Of TChord).GetTrack(ChartTools.Difficulty)
- uid: ChartTools.Instrument`1.CreateTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument`1.CreateTrack(ChartTools.Difficulty)
  id: CreateTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: CreateTrack(Difficulty)
  nameWithType: Instrument<TChord>.CreateTrack(Difficulty)
  fullName: ChartTools.Instrument<TChord>.CreateTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CreateTrack
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 60
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates a track
  example: []
  syntax:
    content: public override Track<TChord> CreateTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
      description: Difficulty of the track
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Public Overrides Function CreateTrack(difficulty As Difficulty) As Track(Of TChord)
  overridden: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  overload: ChartTools.Instrument`1.CreateTrack*
  nameWithType.vb: Instrument(Of TChord).CreateTrack(Difficulty)
  fullName.vb: ChartTools.Instrument(Of TChord).CreateTrack(ChartTools.Difficulty)
- uid: ChartTools.Instrument`1.RemoveTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument`1.RemoveTrack(ChartTools.Difficulty)
  id: RemoveTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: RemoveTrack(Difficulty)
  nameWithType: Instrument<TChord>.RemoveTrack(Difficulty)
  fullName: ChartTools.Instrument<TChord>.RemoveTrack(ChartTools.Difficulty)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: RemoveTrack
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 69
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes a track.
  example: []
  syntax:
    content: public override bool RemoveTrack(Difficulty difficulty)
    parameters:
    - id: difficulty
      type: ChartTools.Difficulty
      description: Difficulty of the target track
    return:
      type: System.Boolean
    content.vb: Public Overrides Function RemoveTrack(difficulty As Difficulty) As Boolean
  overridden: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  overload: ChartTools.Instrument`1.RemoveTrack*
  nameWithType.vb: Instrument(Of TChord).RemoveTrack(Difficulty)
  fullName.vb: ChartTools.Instrument(Of TChord).RemoveTrack(ChartTools.Difficulty)
- uid: ChartTools.Instrument`1.GetEasy
  commentId: M:ChartTools.Instrument`1.GetEasy
  id: GetEasy
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetEasy()
  nameWithType: Instrument<TChord>.GetEasy()
  fullName: ChartTools.Instrument<TChord>.GetEasy()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetEasy
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 96
  assemblies:
  - ChartTools
  namespace: ChartTools
  example: []
  syntax:
    content: protected override Track<TChord>? GetEasy()
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Protected Overrides Function GetEasy() As Track(Of TChord)
  overridden: ChartTools.Instrument.GetEasy
  overload: ChartTools.Instrument`1.GetEasy*
  nameWithType.vb: Instrument(Of TChord).GetEasy()
  fullName.vb: ChartTools.Instrument(Of TChord).GetEasy()
- uid: ChartTools.Instrument`1.GetMedium
  commentId: M:ChartTools.Instrument`1.GetMedium
  id: GetMedium
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetMedium()
  nameWithType: Instrument<TChord>.GetMedium()
  fullName: ChartTools.Instrument<TChord>.GetMedium()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetMedium
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 97
  assemblies:
  - ChartTools
  namespace: ChartTools
  example: []
  syntax:
    content: protected override Track<TChord>? GetMedium()
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Protected Overrides Function GetMedium() As Track(Of TChord)
  overridden: ChartTools.Instrument.GetMedium
  overload: ChartTools.Instrument`1.GetMedium*
  nameWithType.vb: Instrument(Of TChord).GetMedium()
  fullName.vb: ChartTools.Instrument(Of TChord).GetMedium()
- uid: ChartTools.Instrument`1.GetHard
  commentId: M:ChartTools.Instrument`1.GetHard
  id: GetHard
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetHard()
  nameWithType: Instrument<TChord>.GetHard()
  fullName: ChartTools.Instrument<TChord>.GetHard()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetHard
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 98
  assemblies:
  - ChartTools
  namespace: ChartTools
  example: []
  syntax:
    content: protected override Track<TChord>? GetHard()
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Protected Overrides Function GetHard() As Track(Of TChord)
  overridden: ChartTools.Instrument.GetHard
  overload: ChartTools.Instrument`1.GetHard*
  nameWithType.vb: Instrument(Of TChord).GetHard()
  fullName.vb: ChartTools.Instrument(Of TChord).GetHard()
- uid: ChartTools.Instrument`1.GetExpert
  commentId: M:ChartTools.Instrument`1.GetExpert
  id: GetExpert
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetExpert()
  nameWithType: Instrument<TChord>.GetExpert()
  fullName: ChartTools.Instrument<TChord>.GetExpert()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetExpert
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 99
  assemblies:
  - ChartTools
  namespace: ChartTools
  example: []
  syntax:
    content: protected override Track<TChord>? GetExpert()
    return:
      type: ChartTools.Track{{TChord}}
    content.vb: Protected Overrides Function GetExpert() As Track(Of TChord)
  overridden: ChartTools.Instrument.GetExpert
  overload: ChartTools.Instrument`1.GetExpert*
  nameWithType.vb: Instrument(Of TChord).GetExpert()
  fullName.vb: ChartTools.Instrument(Of TChord).GetExpert()
- uid: ChartTools.Instrument`1.GetTracks
  commentId: M:ChartTools.Instrument`1.GetTracks
  id: GetTracks
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetTracks()
  nameWithType: Instrument<TChord>.GetTracks()
  fullName: ChartTools.Instrument<TChord>.GetTracks()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetTracks
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 101
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates an array containing all tracks.
  example: []
  syntax:
    content: public override Track<TChord>?[] GetTracks()
    return:
      type: ChartTools.Track{{TChord}}[]
    content.vb: Public Overrides Function GetTracks() As Track(Of TChord)()
  overridden: ChartTools.Instrument.GetTracks
  overload: ChartTools.Instrument`1.GetTracks*
  nameWithType.vb: Instrument(Of TChord).GetTracks()
  fullName.vb: ChartTools.Instrument(Of TChord).GetTracks()
- uid: ChartTools.Instrument`1.GetExistingTracks
  commentId: M:ChartTools.Instrument`1.GetExistingTracks
  id: GetExistingTracks
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: GetExistingTracks()
  nameWithType: Instrument<TChord>.GetExistingTracks()
  fullName: ChartTools.Instrument<TChord>.GetExistingTracks()
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetExistingTracks
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 102
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Creates an array containing all tracks with data.
  example: []
  syntax:
    content: public override IEnumerable<Track<TChord>> GetExistingTracks()
    return:
      type: System.Collections.Generic.IEnumerable{ChartTools.Track{{TChord}}}
    content.vb: Public Overrides Function GetExistingTracks() As IEnumerable(Of Track(Of TChord))
  overridden: ChartTools.Instrument.GetExistingTracks
  overload: ChartTools.Instrument`1.GetExistingTracks*
  nameWithType.vb: Instrument(Of TChord).GetExistingTracks()
  fullName.vb: ChartTools.Instrument(Of TChord).GetExistingTracks()
- uid: ChartTools.Instrument`1.SetTrack(ChartTools.Track{`0})
  commentId: M:ChartTools.Instrument`1.SetTrack(ChartTools.Track{`0})
  id: SetTrack(ChartTools.Track{`0})
  parent: ChartTools.Instrument`1
  langs:
  - csharp
  - vb
  name: SetTrack(Track<TChord>)
  nameWithType: Instrument<TChord>.SetTrack(Track<TChord>)
  fullName: ChartTools.Instrument<TChord>.SetTrack(ChartTools.Track<TChord>)
  type: Method
  source:
    remote:
      path: ChartTools/Instruments/InstrumentGeneric.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SetTrack
    path: ../ChartTools/Instruments/InstrumentGeneric.cs
    startLine: 110
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Sets a track for a given <xref href="ChartTools.Difficulty" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Track<TChord> SetTrack(Track<TChord> track)
    parameters:
    - id: track
      type: ChartTools.Track{{TChord}}
    return:
      type: ChartTools.Track{{TChord}}
      description: Track instance assigned to the instrument. Changed made to the passed reference will not be reflected in the instrument.
    content.vb: Public Function SetTrack(track As Track(Of TChord)) As Track(Of TChord)
  overload: ChartTools.Instrument`1.SetTrack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  - type: ChartTools.UndefinedEnumException
    commentId: T:ChartTools.UndefinedEnumException
    description: ''
  nameWithType.vb: Instrument(Of TChord).SetTrack(Track(Of TChord))
  fullName.vb: ChartTools.Instrument(Of TChord).SetTrack(ChartTools.Track(Of TChord))
  name.vb: SetTrack(Track(Of TChord))
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ChartTools.Instrument
  commentId: T:ChartTools.Instrument
  parent: ChartTools
  href: ChartTools.Instrument.html
  name: Instrument
  nameWithType: Instrument
  fullName: ChartTools.Instrument
- uid: ChartTools.IEmptyVerifiable
  commentId: T:ChartTools.IEmptyVerifiable
  parent: ChartTools
  href: ChartTools.IEmptyVerifiable.html
  name: IEmptyVerifiable
  nameWithType: IEmptyVerifiable
  fullName: ChartTools.IEmptyVerifiable
- uid: System.IEquatable{ChartTools.Instrument}
  commentId: T:System.IEquatable{ChartTools.Instrument}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Instrument>
  nameWithType: IEquatable<Instrument>
  fullName: System.IEquatable<ChartTools.Instrument>
  nameWithType.vb: IEquatable(Of Instrument)
  fullName.vb: System.IEquatable(Of ChartTools.Instrument)
  name.vb: IEquatable(Of Instrument)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: )
- uid: System.IEquatable{ChartTools.Instrument`1}
  commentId: T:System.IEquatable{ChartTools.Instrument`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Instrument<TChord>>
  nameWithType: IEquatable<Instrument<TChord>>
  fullName: System.IEquatable<ChartTools.Instrument<TChord>>
  nameWithType.vb: IEquatable(Of Instrument(Of TChord))
  fullName.vb: System.IEquatable(Of ChartTools.Instrument(Of TChord))
  name.vb: IEquatable(Of Instrument(Of TChord))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: )
- uid: ChartTools.Instrument.IsEmpty
  commentId: P:ChartTools.Instrument.IsEmpty
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_IsEmpty
  name: IsEmpty
  nameWithType: Instrument.IsEmpty
  fullName: ChartTools.Instrument.IsEmpty
- uid: ChartTools.Instrument.InstrumentIdentity
  commentId: P:ChartTools.Instrument.InstrumentIdentity
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_InstrumentIdentity
  name: InstrumentIdentity
  nameWithType: Instrument.InstrumentIdentity
  fullName: ChartTools.Instrument.InstrumentIdentity
- uid: ChartTools.Instrument.InstrumentType
  commentId: P:ChartTools.Instrument.InstrumentType
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_InstrumentType
  name: InstrumentType
  nameWithType: Instrument.InstrumentType
  fullName: ChartTools.Instrument.InstrumentType
- uid: ChartTools.Instrument.SpecialPhrases
  commentId: P:ChartTools.Instrument.SpecialPhrases
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_SpecialPhrases
  name: SpecialPhrases
  nameWithType: Instrument.SpecialPhrases
  fullName: ChartTools.Instrument.SpecialPhrases
- uid: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  commentId: M:ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetDifficulty_ChartTools_InstrumentDifficultySet_
  name: GetDifficulty(InstrumentDifficultySet)
  nameWithType: Instrument.GetDifficulty(InstrumentDifficultySet)
  fullName: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
  spec.csharp:
  - uid: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
    name: GetDifficulty
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetDifficulty_ChartTools_InstrumentDifficultySet_
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetDifficulty(ChartTools.InstrumentDifficultySet)
    name: GetDifficulty
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetDifficulty_ChartTools_InstrumentDifficultySet_
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: )
- uid: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  commentId: M:ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
  parent: ChartTools.Instrument
  isExternal: true
  href: ChartTools.Instrument.html#ChartTools_Instrument_SetDifficulty_ChartTools_InstrumentDifficultySet_System_Nullable_System_SByte__
  name: SetDifficulty(InstrumentDifficultySet, sbyte?)
  nameWithType: Instrument.SetDifficulty(InstrumentDifficultySet, sbyte?)
  fullName: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet, sbyte?)
  nameWithType.vb: Instrument.SetDifficulty(InstrumentDifficultySet, SByte?)
  fullName.vb: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet, SByte?)
  name.vb: SetDifficulty(InstrumentDifficultySet, SByte?)
  spec.csharp:
  - uid: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
    name: SetDifficulty
    href: ChartTools.Instrument.html#ChartTools_Instrument_SetDifficulty_ChartTools_InstrumentDifficultySet_System_Nullable_System_SByte__
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: ','
  - name: " "
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.SetDifficulty(ChartTools.InstrumentDifficultySet,System.Nullable{System.SByte})
    name: SetDifficulty
    href: ChartTools.Instrument.html#ChartTools_Instrument_SetDifficulty_ChartTools_InstrumentDifficultySet_System_Nullable_System_SByte__
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: ','
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
  - name: )
- uid: ChartTools.Instrument.GetIdentity
  commentId: M:ChartTools.Instrument.GetIdentity
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetIdentity
  name: GetIdentity()
  nameWithType: Instrument.GetIdentity()
  fullName: ChartTools.Instrument.GetIdentity()
  spec.csharp:
  - uid: ChartTools.Instrument.GetIdentity
    name: GetIdentity
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetIdentity
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetIdentity
    name: GetIdentity
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetIdentity
  - name: (
  - name: )
- uid: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  commentId: M:ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_ShareLocalEvents_ChartTools_IO_Configuration_TrackObjectSource_
  name: ShareLocalEvents(TrackObjectSource)
  nameWithType: Instrument.ShareLocalEvents(TrackObjectSource)
  fullName: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
  spec.csharp:
  - uid: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
    name: ShareLocalEvents
    href: ChartTools.Instrument.html#ChartTools_Instrument_ShareLocalEvents_ChartTools_IO_Configuration_TrackObjectSource_
  - name: (
  - uid: ChartTools.IO.Configuration.TrackObjectSource
    name: TrackObjectSource
    href: ChartTools.IO.Configuration.TrackObjectSource.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.ShareLocalEvents(ChartTools.IO.Configuration.TrackObjectSource)
    name: ShareLocalEvents
    href: ChartTools.Instrument.html#ChartTools_Instrument_ShareLocalEvents_ChartTools_IO_Configuration_TrackObjectSource_
  - name: (
  - uid: ChartTools.IO.Configuration.TrackObjectSource
    name: TrackObjectSource
    href: ChartTools.IO.Configuration.TrackObjectSource.html
  - name: )
- uid: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  commentId: M:ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_ShareSpecial_ChartTools_IO_Configuration_TrackObjectSource_
  name: ShareSpecial(TrackObjectSource)
  nameWithType: Instrument.ShareSpecial(TrackObjectSource)
  fullName: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
  spec.csharp:
  - uid: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
    name: ShareSpecial
    href: ChartTools.Instrument.html#ChartTools_Instrument_ShareSpecial_ChartTools_IO_Configuration_TrackObjectSource_
  - name: (
  - uid: ChartTools.IO.Configuration.TrackObjectSource
    name: TrackObjectSource
    href: ChartTools.IO.Configuration.TrackObjectSource.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.ShareSpecial(ChartTools.IO.Configuration.TrackObjectSource)
    name: ShareSpecial
    href: ChartTools.Instrument.html#ChartTools_Instrument_ShareSpecial_ChartTools_IO_Configuration_TrackObjectSource_
  - name: (
  - uid: ChartTools.IO.Configuration.TrackObjectSource
    name: TrackObjectSource
    href: ChartTools.IO.Configuration.TrackObjectSource.html
  - name: )
- uid: ChartTools.Instrument.ToString
  commentId: M:ChartTools.Instrument.ToString
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_ToString
  name: ToString()
  nameWithType: Instrument.ToString()
  fullName: ChartTools.Instrument.ToString()
  spec.csharp:
  - uid: ChartTools.Instrument.ToString
    name: ToString
    href: ChartTools.Instrument.html#ChartTools_Instrument_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.ToString
    name: ToString
    href: ChartTools.Instrument.html#ChartTools_Instrument_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ChartTools.Instrument.ChartTools.Tools.TempoRescaler.Rescale(System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  parent: ChartTools.Tools.TempoRescaler
  definition: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  name: Rescale(Instrument, float)
  nameWithType: TempoRescaler.Rescale(Instrument, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, float)
  nameWithType.vb: TempoRescaler.Rescale(Instrument, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, Single)
  name.vb: Rescale(Instrument, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Instrument`1.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.Instrument{{TChord}}[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<Instrument<TChord>>(Instrument<TChord>, bool, bool, params Instrument<TChord>[])
  nameWithType: PropertyMerger.Merge<Instrument<TChord>>(Instrument<TChord>, bool, bool, params Instrument<TChord>[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.Instrument<TChord>>(ChartTools.Instrument<TChord>, bool, bool, params ChartTools.Instrument<TChord>[])
  nameWithType.vb: PropertyMerger.Merge(Of Instrument(Of TChord))(Instrument(Of TChord), Boolean, Boolean, ParamArray Instrument(Of TChord)())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.Instrument(Of TChord))(ChartTools.Instrument(Of TChord), Boolean, Boolean, ParamArray ChartTools.Instrument(Of TChord)())
  name.vb: Merge(Of Instrument(Of TChord))(Instrument(Of TChord), Boolean, Boolean, ParamArray Instrument(Of TChord)())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Instrument{`0},System.Boolean,System.Boolean,ChartTools.Instrument{`0}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: '>'
  - name: (
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.Instrument{`0},System.Boolean,System.Boolean,ChartTools.Instrument{`0}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: )
  - name: (
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.Instrument`1
    name: Instrument
    href: ChartTools.Instrument-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: (
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  commentId: M:ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
  isExternal: true
  href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  name: Rescale(Instrument, float)
  nameWithType: TempoRescaler.Rescale(Instrument, float)
  fullName: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, float)
  nameWithType.vb: TempoRescaler.Rescale(Instrument, Single)
  fullName.vb: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument, Single)
  name.vb: Rescale(Instrument, Single)
  spec.csharp:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.TempoRescaler.Rescale(ChartTools.Instrument,System.Single)
    name: Rescale
    href: ChartTools.Tools.TempoRescaler.html#ChartTools_Tools_TempoRescaler_Rescale_ChartTools_Instrument_System_Single_
  - name: (
  - uid: ChartTools.Instrument
    name: Instrument
    href: ChartTools.Instrument.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ChartTools.Tools.TempoRescaler
  commentId: T:ChartTools.Tools.TempoRescaler
  parent: ChartTools.Tools
  href: ChartTools.Tools.TempoRescaler.html
  name: TempoRescaler
  nameWithType: TempoRescaler
  fullName: ChartTools.Tools.TempoRescaler
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Instrument`1.Easy*
  commentId: Overload:ChartTools.Instrument`1.Easy
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_Easy
  name: Easy
  nameWithType: Instrument<TChord>.Easy
  fullName: ChartTools.Instrument<TChord>.Easy
  nameWithType.vb: Instrument(Of TChord).Easy
  fullName.vb: ChartTools.Instrument(Of TChord).Easy
- uid: ChartTools.Track{{TChord}}
  commentId: T:ChartTools.Track{`0}
  parent: ChartTools
  definition: ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<TChord>
  nameWithType: Track<TChord>
  fullName: ChartTools.Track<TChord>
  nameWithType.vb: Track(Of TChord)
  fullName.vb: ChartTools.Track(Of TChord)
  name.vb: Track(Of TChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - name: TChord
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
- uid: ChartTools.Track`1
  commentId: T:ChartTools.Track`1
  href: ChartTools.Track-1.html
  name: Track<TChord>
  nameWithType: Track<TChord>
  fullName: ChartTools.Track<TChord>
  nameWithType.vb: Track(Of TChord)
  fullName.vb: ChartTools.Track(Of TChord)
  name.vb: Track(Of TChord)
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - name: TChord
  - name: '>'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
- uid: ChartTools.Instrument`1.Medium*
  commentId: Overload:ChartTools.Instrument`1.Medium
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_Medium
  name: Medium
  nameWithType: Instrument<TChord>.Medium
  fullName: ChartTools.Instrument<TChord>.Medium
  nameWithType.vb: Instrument(Of TChord).Medium
  fullName.vb: ChartTools.Instrument(Of TChord).Medium
- uid: ChartTools.Instrument`1.Hard*
  commentId: Overload:ChartTools.Instrument`1.Hard
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_Hard
  name: Hard
  nameWithType: Instrument<TChord>.Hard
  fullName: ChartTools.Instrument<TChord>.Hard
  nameWithType.vb: Instrument(Of TChord).Hard
  fullName.vb: ChartTools.Instrument(Of TChord).Hard
- uid: ChartTools.Instrument`1.Expert*
  commentId: Overload:ChartTools.Instrument`1.Expert
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_Expert
  name: Expert
  nameWithType: Instrument<TChord>.Expert
  fullName: ChartTools.Instrument<TChord>.Expert
  nameWithType.vb: Instrument(Of TChord).Expert
  fullName.vb: ChartTools.Instrument(Of TChord).Expert
- uid: ChartTools.Difficulty
  commentId: T:ChartTools.Difficulty
  parent: ChartTools
  href: ChartTools.Difficulty.html
  name: Difficulty
  nameWithType: Difficulty
  fullName: ChartTools.Difficulty
- uid: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetTrack_ChartTools_Difficulty_
  name: GetTrack(Difficulty)
  nameWithType: Instrument.GetTrack(Difficulty)
  fullName: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
  spec.csharp:
  - uid: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
    name: GetTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetTrack(ChartTools.Difficulty)
    name: GetTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
- uid: ChartTools.Instrument`1.GetTrack*
  commentId: Overload:ChartTools.Instrument`1.GetTrack
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetTrack_ChartTools_Difficulty_
  name: GetTrack
  nameWithType: Instrument<TChord>.GetTrack
  fullName: ChartTools.Instrument<TChord>.GetTrack
  nameWithType.vb: Instrument(Of TChord).GetTrack
  fullName.vb: ChartTools.Instrument(Of TChord).GetTrack
- uid: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_CreateTrack_ChartTools_Difficulty_
  name: CreateTrack(Difficulty)
  nameWithType: Instrument.CreateTrack(Difficulty)
  fullName: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
  spec.csharp:
  - uid: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
    name: CreateTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_CreateTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.CreateTrack(ChartTools.Difficulty)
    name: CreateTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_CreateTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
- uid: ChartTools.Instrument`1.CreateTrack*
  commentId: Overload:ChartTools.Instrument`1.CreateTrack
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_CreateTrack_ChartTools_Difficulty_
  name: CreateTrack
  nameWithType: Instrument<TChord>.CreateTrack
  fullName: ChartTools.Instrument<TChord>.CreateTrack
  nameWithType.vb: Instrument(Of TChord).CreateTrack
  fullName.vb: ChartTools.Instrument(Of TChord).CreateTrack
- uid: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  commentId: M:ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_RemoveTrack_ChartTools_Difficulty_
  name: RemoveTrack(Difficulty)
  nameWithType: Instrument.RemoveTrack(Difficulty)
  fullName: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
  spec.csharp:
  - uid: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
    name: RemoveTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_RemoveTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.RemoveTrack(ChartTools.Difficulty)
    name: RemoveTrack
    href: ChartTools.Instrument.html#ChartTools_Instrument_RemoveTrack_ChartTools_Difficulty_
  - name: (
  - uid: ChartTools.Difficulty
    name: Difficulty
    href: ChartTools.Difficulty.html
  - name: )
- uid: ChartTools.Instrument`1.RemoveTrack*
  commentId: Overload:ChartTools.Instrument`1.RemoveTrack
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_RemoveTrack_ChartTools_Difficulty_
  name: RemoveTrack
  nameWithType: Instrument<TChord>.RemoveTrack
  fullName: ChartTools.Instrument<TChord>.RemoveTrack
  nameWithType.vb: Instrument(Of TChord).RemoveTrack
  fullName.vb: ChartTools.Instrument(Of TChord).RemoveTrack
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ChartTools.Instrument.GetEasy
  commentId: M:ChartTools.Instrument.GetEasy
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetEasy
  name: GetEasy()
  nameWithType: Instrument.GetEasy()
  fullName: ChartTools.Instrument.GetEasy()
  spec.csharp:
  - uid: ChartTools.Instrument.GetEasy
    name: GetEasy
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetEasy
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetEasy
    name: GetEasy
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetEasy
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetEasy*
  commentId: Overload:ChartTools.Instrument`1.GetEasy
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetEasy
  name: GetEasy
  nameWithType: Instrument<TChord>.GetEasy
  fullName: ChartTools.Instrument<TChord>.GetEasy
  nameWithType.vb: Instrument(Of TChord).GetEasy
  fullName.vb: ChartTools.Instrument(Of TChord).GetEasy
- uid: ChartTools.Instrument.GetMedium
  commentId: M:ChartTools.Instrument.GetMedium
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetMedium
  name: GetMedium()
  nameWithType: Instrument.GetMedium()
  fullName: ChartTools.Instrument.GetMedium()
  spec.csharp:
  - uid: ChartTools.Instrument.GetMedium
    name: GetMedium
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetMedium
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetMedium
    name: GetMedium
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetMedium
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetMedium*
  commentId: Overload:ChartTools.Instrument`1.GetMedium
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetMedium
  name: GetMedium
  nameWithType: Instrument<TChord>.GetMedium
  fullName: ChartTools.Instrument<TChord>.GetMedium
  nameWithType.vb: Instrument(Of TChord).GetMedium
  fullName.vb: ChartTools.Instrument(Of TChord).GetMedium
- uid: ChartTools.Instrument.GetHard
  commentId: M:ChartTools.Instrument.GetHard
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetHard
  name: GetHard()
  nameWithType: Instrument.GetHard()
  fullName: ChartTools.Instrument.GetHard()
  spec.csharp:
  - uid: ChartTools.Instrument.GetHard
    name: GetHard
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetHard
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetHard
    name: GetHard
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetHard
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetHard*
  commentId: Overload:ChartTools.Instrument`1.GetHard
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetHard
  name: GetHard
  nameWithType: Instrument<TChord>.GetHard
  fullName: ChartTools.Instrument<TChord>.GetHard
  nameWithType.vb: Instrument(Of TChord).GetHard
  fullName.vb: ChartTools.Instrument(Of TChord).GetHard
- uid: ChartTools.Instrument.GetExpert
  commentId: M:ChartTools.Instrument.GetExpert
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetExpert
  name: GetExpert()
  nameWithType: Instrument.GetExpert()
  fullName: ChartTools.Instrument.GetExpert()
  spec.csharp:
  - uid: ChartTools.Instrument.GetExpert
    name: GetExpert
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetExpert
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetExpert
    name: GetExpert
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetExpert
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetExpert*
  commentId: Overload:ChartTools.Instrument`1.GetExpert
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetExpert
  name: GetExpert
  nameWithType: Instrument<TChord>.GetExpert
  fullName: ChartTools.Instrument<TChord>.GetExpert
  nameWithType.vb: Instrument(Of TChord).GetExpert
  fullName.vb: ChartTools.Instrument(Of TChord).GetExpert
- uid: ChartTools.Instrument.GetTracks
  commentId: M:ChartTools.Instrument.GetTracks
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetTracks
  name: GetTracks()
  nameWithType: Instrument.GetTracks()
  fullName: ChartTools.Instrument.GetTracks()
  spec.csharp:
  - uid: ChartTools.Instrument.GetTracks
    name: GetTracks
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetTracks
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetTracks
    name: GetTracks
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetTracks
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetTracks*
  commentId: Overload:ChartTools.Instrument`1.GetTracks
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetTracks
  name: GetTracks
  nameWithType: Instrument<TChord>.GetTracks
  fullName: ChartTools.Instrument<TChord>.GetTracks
  nameWithType.vb: Instrument(Of TChord).GetTracks
  fullName.vb: ChartTools.Instrument(Of TChord).GetTracks
- uid: ChartTools.Track{{TChord}}[]
  isExternal: true
  href: ChartTools.Track-1.html
  name: Track<TChord>[]
  nameWithType: Track<TChord>[]
  fullName: ChartTools.Track<TChord>[]
  nameWithType.vb: Track(Of TChord)()
  fullName.vb: ChartTools.Track(Of TChord)()
  name.vb: Track(Of TChord)()
  spec.csharp:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: (
  - name: )
- uid: ChartTools.Instrument.GetExistingTracks
  commentId: M:ChartTools.Instrument.GetExistingTracks
  parent: ChartTools.Instrument
  href: ChartTools.Instrument.html#ChartTools_Instrument_GetExistingTracks
  name: GetExistingTracks()
  nameWithType: Instrument.GetExistingTracks()
  fullName: ChartTools.Instrument.GetExistingTracks()
  spec.csharp:
  - uid: ChartTools.Instrument.GetExistingTracks
    name: GetExistingTracks
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetExistingTracks
  - name: (
  - name: )
  spec.vb:
  - uid: ChartTools.Instrument.GetExistingTracks
    name: GetExistingTracks
    href: ChartTools.Instrument.html#ChartTools_Instrument_GetExistingTracks
  - name: (
  - name: )
- uid: ChartTools.Instrument`1.GetExistingTracks*
  commentId: Overload:ChartTools.Instrument`1.GetExistingTracks
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_GetExistingTracks
  name: GetExistingTracks
  nameWithType: Instrument<TChord>.GetExistingTracks
  fullName: ChartTools.Instrument<TChord>.GetExistingTracks
  nameWithType.vb: Instrument(Of TChord).GetExistingTracks
  fullName.vb: ChartTools.Instrument(Of TChord).GetExistingTracks
- uid: System.Collections.Generic.IEnumerable{ChartTools.Track{{TChord}}}
  commentId: T:System.Collections.Generic.IEnumerable{ChartTools.Track{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Track<TChord>>
  nameWithType: IEnumerable<Track<TChord>>
  fullName: System.Collections.Generic.IEnumerable<ChartTools.Track<TChord>>
  nameWithType.vb: IEnumerable(Of Track(Of TChord))
  fullName.vb: System.Collections.Generic.IEnumerable(Of ChartTools.Track(Of TChord))
  name.vb: IEnumerable(Of Track(Of TChord))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: <
  - name: TChord
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Track`1
    name: Track
    href: ChartTools.Track-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TChord
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: ChartTools.UndefinedEnumException
  commentId: T:ChartTools.UndefinedEnumException
  href: ChartTools.UndefinedEnumException.html
  name: UndefinedEnumException
  nameWithType: UndefinedEnumException
  fullName: ChartTools.UndefinedEnumException
- uid: ChartTools.Instrument`1.SetTrack*
  commentId: Overload:ChartTools.Instrument`1.SetTrack
  href: ChartTools.Instrument-1.html#ChartTools_Instrument_1_SetTrack_ChartTools_Track__0__
  name: SetTrack
  nameWithType: Instrument<TChord>.SetTrack
  fullName: ChartTools.Instrument<TChord>.SetTrack
  nameWithType.vb: Instrument(Of TChord).SetTrack
  fullName.vb: ChartTools.Instrument(Of TChord).SetTrack
