### YamlMime:ManagedReference
items:
- uid: ChartTools.InstrumentDifficultySet
  commentId: T:ChartTools.InstrumentDifficultySet
  id: InstrumentDifficultySet
  parent: ChartTools
  children:
  - ChartTools.InstrumentDifficultySet.Bass
  - ChartTools.InstrumentDifficultySet.Drums
  - ChartTools.InstrumentDifficultySet.GHLBass
  - ChartTools.InstrumentDifficultySet.GHLGuitar
  - ChartTools.InstrumentDifficultySet.GetDifficulty(ChartTools.InstrumentIdentity)
  - ChartTools.InstrumentDifficultySet.Guitar
  - ChartTools.InstrumentDifficultySet.Keys
  - ChartTools.InstrumentDifficultySet.SetDifficulty(ChartTools.InstrumentIdentity,System.Nullable{System.SByte})
  langs:
  - csharp
  - vb
  name: InstrumentDifficultySet
  nameWithType: InstrumentDifficultySet
  fullName: ChartTools.InstrumentDifficultySet
  type: Class
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: InstrumentDifficultySet
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 9
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Stores the estimated difficulties for instruments
  example: []
  syntax:
    content: public class InstrumentDifficultySet
    content.vb: Public Class InstrumentDifficultySet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ChartTools.InstrumentDifficultySet.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.InstrumentDifficultySet[])
- uid: ChartTools.InstrumentDifficultySet.Guitar
  commentId: P:ChartTools.InstrumentDifficultySet.Guitar
  id: Guitar
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: Guitar
  nameWithType: InstrumentDifficultySet.Guitar
  fullName: ChartTools.InstrumentDifficultySet.Guitar
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Guitar
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 14
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.LeadGuitar" data-throw-if-not-resolved="false"></xref>, <xref href="ChartTools.InstrumentIdentity.CoopGuitar" data-throw-if-not-resolved="false"></xref> and <xref href="ChartTools.InstrumentIdentity.RhythmGuitar" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_guitar")]

      public sbyte? Guitar { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_guitar")>

      Public Property Guitar As SByte?
  overload: ChartTools.InstrumentDifficultySet.Guitar*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_guitar
- uid: ChartTools.InstrumentDifficultySet.Bass
  commentId: P:ChartTools.InstrumentDifficultySet.Bass
  id: Bass
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: Bass
  nameWithType: InstrumentDifficultySet.Bass
  fullName: ChartTools.InstrumentDifficultySet.Bass
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Bass
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 19
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.Bass" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_bass")]

      public sbyte? Bass { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_bass")>

      Public Property Bass As SByte?
  overload: ChartTools.InstrumentDifficultySet.Bass*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_bass
- uid: ChartTools.InstrumentDifficultySet.Drums
  commentId: P:ChartTools.InstrumentDifficultySet.Drums
  id: Drums
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: Drums
  nameWithType: InstrumentDifficultySet.Drums
  fullName: ChartTools.InstrumentDifficultySet.Drums
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Drums
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 24
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.Drums" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_drums")]

      public sbyte? Drums { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_drums")>

      Public Property Drums As SByte?
  overload: ChartTools.InstrumentDifficultySet.Drums*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_drums
- uid: ChartTools.InstrumentDifficultySet.Keys
  commentId: P:ChartTools.InstrumentDifficultySet.Keys
  id: Keys
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: InstrumentDifficultySet.Keys
  fullName: ChartTools.InstrumentDifficultySet.Keys
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Keys
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 29
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.Keys" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_keys")]

      public sbyte? Keys { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_keys")>

      Public Property Keys As SByte?
  overload: ChartTools.InstrumentDifficultySet.Keys*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_keys
- uid: ChartTools.InstrumentDifficultySet.GHLGuitar
  commentId: P:ChartTools.InstrumentDifficultySet.GHLGuitar
  id: GHLGuitar
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: GHLGuitar
  nameWithType: InstrumentDifficultySet.GHLGuitar
  fullName: ChartTools.InstrumentDifficultySet.GHLGuitar
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GHLGuitar
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 34
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.GHLGuitar" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_guitarghl")]

      public sbyte? GHLGuitar { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_guitarghl")>

      Public Property GHLGuitar As SByte?
  overload: ChartTools.InstrumentDifficultySet.GHLGuitar*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_guitarghl
- uid: ChartTools.InstrumentDifficultySet.GHLBass
  commentId: P:ChartTools.InstrumentDifficultySet.GHLBass
  id: GHLBass
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: GHLBass
  nameWithType: InstrumentDifficultySet.GHLBass
  fullName: ChartTools.InstrumentDifficultySet.GHLBass
  type: Property
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GHLBass
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 39
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Difficulty of <xref href="ChartTools.InstrumentIdentity.GHLBass" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [IniKeySerializable("diff_bassghl")]

      public sbyte? GHLBass { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.SByte}
    content.vb: >-
      <IniKeySerializable("diff_bassghl")>

      Public Property GHLBass As SByte?
  overload: ChartTools.InstrumentDifficultySet.GHLBass*
  attributes:
  - type: ChartTools.IO.Ini.IniKeySerializableAttribute
    ctor: ChartTools.IO.Ini.IniKeySerializableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diff_bassghl
- uid: ChartTools.InstrumentDifficultySet.GetDifficulty(ChartTools.InstrumentIdentity)
  commentId: M:ChartTools.InstrumentDifficultySet.GetDifficulty(ChartTools.InstrumentIdentity)
  id: GetDifficulty(ChartTools.InstrumentIdentity)
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: GetDifficulty(InstrumentIdentity)
  nameWithType: InstrumentDifficultySet.GetDifficulty(InstrumentIdentity)
  fullName: ChartTools.InstrumentDifficultySet.GetDifficulty(ChartTools.InstrumentIdentity)
  type: Method
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetDifficulty
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 45
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the difficulty for an <xref href="ChartTools.InstrumentIdentity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sbyte? GetDifficulty(InstrumentIdentity identity)
    parameters:
    - id: identity
      type: ChartTools.InstrumentIdentity
    return:
      type: System.Nullable{System.SByte}
    content.vb: Public Function GetDifficulty(identity As InstrumentIdentity) As SByte?
  overload: ChartTools.InstrumentDifficultySet.GetDifficulty*
- uid: ChartTools.InstrumentDifficultySet.SetDifficulty(ChartTools.InstrumentIdentity,System.Nullable{System.SByte})
  commentId: M:ChartTools.InstrumentDifficultySet.SetDifficulty(ChartTools.InstrumentIdentity,System.Nullable{System.SByte})
  id: SetDifficulty(ChartTools.InstrumentIdentity,System.Nullable{System.SByte})
  parent: ChartTools.InstrumentDifficultySet
  langs:
  - csharp
  - vb
  name: SetDifficulty(InstrumentIdentity, sbyte?)
  nameWithType: InstrumentDifficultySet.SetDifficulty(InstrumentIdentity, sbyte?)
  fullName: ChartTools.InstrumentDifficultySet.SetDifficulty(ChartTools.InstrumentIdentity, sbyte?)
  type: Method
  source:
    remote:
      path: ChartTools/Metadata/InstrumentDifficultySet.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: SetDifficulty
    path: ../ChartTools/Metadata/InstrumentDifficultySet.cs
    startLine: 49
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Sets the difficulty for an <xref href="ChartTools.InstrumentIdentity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetDifficulty(InstrumentIdentity identity, sbyte? difficulty)
    parameters:
    - id: identity
      type: ChartTools.InstrumentIdentity
    - id: difficulty
      type: System.Nullable{System.SByte}
    content.vb: Public Sub SetDifficulty(identity As InstrumentIdentity, difficulty As SByte?)
  overload: ChartTools.InstrumentDifficultySet.SetDifficulty*
  nameWithType.vb: InstrumentDifficultySet.SetDifficulty(InstrumentIdentity, SByte?)
  fullName.vb: ChartTools.InstrumentDifficultySet.SetDifficulty(ChartTools.InstrumentIdentity, SByte?)
  name.vb: SetDifficulty(InstrumentIdentity, SByte?)
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.InstrumentDifficultySet.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.InstrumentDifficultySet[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<InstrumentDifficultySet>(InstrumentDifficultySet, bool, bool, params InstrumentDifficultySet[])
  nameWithType: PropertyMerger.Merge<InstrumentDifficultySet>(InstrumentDifficultySet, bool, bool, params InstrumentDifficultySet[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.InstrumentDifficultySet>(ChartTools.InstrumentDifficultySet, bool, bool, params ChartTools.InstrumentDifficultySet[])
  nameWithType.vb: PropertyMerger.Merge(Of InstrumentDifficultySet)(InstrumentDifficultySet, Boolean, Boolean, ParamArray InstrumentDifficultySet())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.InstrumentDifficultySet)(ChartTools.InstrumentDifficultySet, Boolean, Boolean, ParamArray ChartTools.InstrumentDifficultySet())
  name.vb: Merge(Of InstrumentDifficultySet)(InstrumentDifficultySet, Boolean, Boolean, ParamArray InstrumentDifficultySet())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.InstrumentDifficultySet,System.Boolean,System.Boolean,ChartTools.InstrumentDifficultySet[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: '>'
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.InstrumentDifficultySet,System.Boolean,System.Boolean,ChartTools.InstrumentDifficultySet[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: )
  - name: (
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.InstrumentDifficultySet
    name: InstrumentDifficultySet
    href: ChartTools.InstrumentDifficultySet.html
  - name: (
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.InstrumentIdentity.LeadGuitar
  commentId: F:ChartTools.InstrumentIdentity.LeadGuitar
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_LeadGuitar
  name: LeadGuitar
  nameWithType: InstrumentIdentity.LeadGuitar
  fullName: ChartTools.InstrumentIdentity.LeadGuitar
- uid: ChartTools.InstrumentIdentity.CoopGuitar
  commentId: F:ChartTools.InstrumentIdentity.CoopGuitar
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_CoopGuitar
  name: CoopGuitar
  nameWithType: InstrumentIdentity.CoopGuitar
  fullName: ChartTools.InstrumentIdentity.CoopGuitar
- uid: ChartTools.InstrumentIdentity.RhythmGuitar
  commentId: F:ChartTools.InstrumentIdentity.RhythmGuitar
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_RhythmGuitar
  name: RhythmGuitar
  nameWithType: InstrumentIdentity.RhythmGuitar
  fullName: ChartTools.InstrumentIdentity.RhythmGuitar
- uid: ChartTools.InstrumentDifficultySet.Guitar*
  commentId: Overload:ChartTools.InstrumentDifficultySet.Guitar
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_Guitar
  name: Guitar
  nameWithType: InstrumentDifficultySet.Guitar
  fullName: ChartTools.InstrumentDifficultySet.Guitar
- uid: System.Nullable{System.SByte}
  commentId: T:System.Nullable{System.SByte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte?
  nameWithType: sbyte?
  fullName: sbyte?
  nameWithType.vb: SByte?
  fullName.vb: SByte?
  name.vb: SByte?
  spec.csharp:
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
  spec.vb:
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.InstrumentIdentity.Bass
  commentId: F:ChartTools.InstrumentIdentity.Bass
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_Bass
  name: Bass
  nameWithType: InstrumentIdentity.Bass
  fullName: ChartTools.InstrumentIdentity.Bass
- uid: ChartTools.InstrumentDifficultySet.Bass*
  commentId: Overload:ChartTools.InstrumentDifficultySet.Bass
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_Bass
  name: Bass
  nameWithType: InstrumentDifficultySet.Bass
  fullName: ChartTools.InstrumentDifficultySet.Bass
- uid: ChartTools.InstrumentIdentity.Drums
  commentId: F:ChartTools.InstrumentIdentity.Drums
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_Drums
  name: Drums
  nameWithType: InstrumentIdentity.Drums
  fullName: ChartTools.InstrumentIdentity.Drums
- uid: ChartTools.InstrumentDifficultySet.Drums*
  commentId: Overload:ChartTools.InstrumentDifficultySet.Drums
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_Drums
  name: Drums
  nameWithType: InstrumentDifficultySet.Drums
  fullName: ChartTools.InstrumentDifficultySet.Drums
- uid: ChartTools.InstrumentIdentity.Keys
  commentId: F:ChartTools.InstrumentIdentity.Keys
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_Keys
  name: Keys
  nameWithType: InstrumentIdentity.Keys
  fullName: ChartTools.InstrumentIdentity.Keys
- uid: ChartTools.InstrumentDifficultySet.Keys*
  commentId: Overload:ChartTools.InstrumentDifficultySet.Keys
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_Keys
  name: Keys
  nameWithType: InstrumentDifficultySet.Keys
  fullName: ChartTools.InstrumentDifficultySet.Keys
- uid: ChartTools.InstrumentIdentity.GHLGuitar
  commentId: F:ChartTools.InstrumentIdentity.GHLGuitar
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_GHLGuitar
  name: GHLGuitar
  nameWithType: InstrumentIdentity.GHLGuitar
  fullName: ChartTools.InstrumentIdentity.GHLGuitar
- uid: ChartTools.InstrumentDifficultySet.GHLGuitar*
  commentId: Overload:ChartTools.InstrumentDifficultySet.GHLGuitar
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_GHLGuitar
  name: GHLGuitar
  nameWithType: InstrumentDifficultySet.GHLGuitar
  fullName: ChartTools.InstrumentDifficultySet.GHLGuitar
- uid: ChartTools.InstrumentIdentity.GHLBass
  commentId: F:ChartTools.InstrumentIdentity.GHLBass
  href: ChartTools.InstrumentIdentity.html#ChartTools_InstrumentIdentity_GHLBass
  name: GHLBass
  nameWithType: InstrumentIdentity.GHLBass
  fullName: ChartTools.InstrumentIdentity.GHLBass
- uid: ChartTools.InstrumentDifficultySet.GHLBass*
  commentId: Overload:ChartTools.InstrumentDifficultySet.GHLBass
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_GHLBass
  name: GHLBass
  nameWithType: InstrumentDifficultySet.GHLBass
  fullName: ChartTools.InstrumentDifficultySet.GHLBass
- uid: ChartTools.InstrumentIdentity
  commentId: T:ChartTools.InstrumentIdentity
  parent: ChartTools
  href: ChartTools.InstrumentIdentity.html
  name: InstrumentIdentity
  nameWithType: InstrumentIdentity
  fullName: ChartTools.InstrumentIdentity
- uid: ChartTools.InstrumentDifficultySet.GetDifficulty*
  commentId: Overload:ChartTools.InstrumentDifficultySet.GetDifficulty
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_GetDifficulty_ChartTools_InstrumentIdentity_
  name: GetDifficulty
  nameWithType: InstrumentDifficultySet.GetDifficulty
  fullName: ChartTools.InstrumentDifficultySet.GetDifficulty
- uid: ChartTools.InstrumentDifficultySet.SetDifficulty*
  commentId: Overload:ChartTools.InstrumentDifficultySet.SetDifficulty
  href: ChartTools.InstrumentDifficultySet.html#ChartTools_InstrumentDifficultySet_SetDifficulty_ChartTools_InstrumentIdentity_System_Nullable_System_SByte__
  name: SetDifficulty
  nameWithType: InstrumentDifficultySet.SetDifficulty
  fullName: ChartTools.InstrumentDifficultySet.SetDifficulty
