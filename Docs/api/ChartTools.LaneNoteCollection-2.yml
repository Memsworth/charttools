### YamlMime:ManagedReference
items:
- uid: ChartTools.LaneNoteCollection`2
  commentId: T:ChartTools.LaneNoteCollection`2
  id: LaneNoteCollection`2
  parent: ChartTools
  children:
  - ChartTools.LaneNoteCollection`2.#ctor(System.Boolean)
  - ChartTools.LaneNoteCollection`2.Add(`0)
  - ChartTools.LaneNoteCollection`2.Add(`1)
  - ChartTools.LaneNoteCollection`2.Clear
  - ChartTools.LaneNoteCollection`2.Contains(System.Byte)
  - ChartTools.LaneNoteCollection`2.Contains(`0)
  - ChartTools.LaneNoteCollection`2.Contains(`1)
  - ChartTools.LaneNoteCollection`2.CopyTo(`0[],System.Int32)
  - ChartTools.LaneNoteCollection`2.Count
  - ChartTools.LaneNoteCollection`2.GetEnumerator
  - ChartTools.LaneNoteCollection`2.Item(System.Int32)
  - ChartTools.LaneNoteCollection`2.Item(`1)
  - ChartTools.LaneNoteCollection`2.OpenExclusivity
  - ChartTools.LaneNoteCollection`2.Remove(System.Byte)
  - ChartTools.LaneNoteCollection`2.Remove(`0)
  - ChartTools.LaneNoteCollection`2.Remove(`1)
  langs:
  - csharp
  - vb
  name: LaneNoteCollection<TNote, TLane>
  nameWithType: LaneNoteCollection<TNote, TLane>
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>
  type: Class
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: LaneNoteCollection
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 4
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: 'public class LaneNoteCollection<TNote, TLane> : ICollection<TNote>, IReadOnlyList<TNote>, IReadOnlyCollection<TNote>, IEnumerable<TNote>, IEnumerable where TNote : LaneNote<TLane>, new() where TLane : struct, Enum'
    typeParameters:
    - id: TNote
    - id: TLane
    content.vb: Public Class LaneNoteCollection(Of TNote As {LaneNote(Of TLane), New}, TLane As {Structure, [Enum]}) Implements ICollection(Of TNote), IReadOnlyList(Of TNote), IReadOnlyCollection(Of TNote), IEnumerable(Of TNote), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{TNote}}
  - System.Collections.Generic.IReadOnlyList{{TNote}}
  - System.Collections.Generic.IReadOnlyCollection{{TNote}}
  - System.Collections.Generic.IEnumerable{{TNote}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ChartTools.LaneNoteCollection`2.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.LaneNoteCollection{{TNote},{TLane}}[])
  - System.Collections.Generic.ICollection{`0}.ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Predicate{{TNote}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(ChartTools.Extensions.EqualityComparison{{TNote}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Predicate{{TNote}},{TNote},System.Boolean@)
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Func{{TNote},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Func{{TNote},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1({TNote})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Predicate{{TNote}},System.Predicate{{TNote}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Predicate{{TNote}},{TNote})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(ChartTools.Extensions.Linq.SectionReplacement{{TNote}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{{TNote}}})
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1({TNote}@)
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Predicate{{TNote}},{TNote}@)
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1
  - System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Func{{TNote},{TKey}})
  - System.Collections.IEnumerable.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1({TResult}@)
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane)
  name.vb: LaneNoteCollection(Of TNote, TLane)
- uid: ChartTools.LaneNoteCollection`2.OpenExclusivity
  commentId: P:ChartTools.LaneNoteCollection`2.OpenExclusivity
  id: OpenExclusivity
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: OpenExclusivity
  nameWithType: LaneNoteCollection<TNote, TLane>.OpenExclusivity
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.OpenExclusivity
  type: Property
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: OpenExclusivity
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 11
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, trying to combine an open note with other notes will remove the current ones.
  example: []
  syntax:
    content: public bool OpenExclusivity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OpenExclusivity As Boolean
  overload: ChartTools.LaneNoteCollection`2.OpenExclusivity*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).OpenExclusivity
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).OpenExclusivity
- uid: ChartTools.LaneNoteCollection`2.Count
  commentId: P:ChartTools.LaneNoteCollection`2.Count
  id: Count
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LaneNoteCollection<TNote, TLane>.Count
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Count
  type: Property
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Count
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 12
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: ChartTools.LaneNoteCollection`2.Count*
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.Count
  - System.Collections.Generic.IReadOnlyCollection{{TNote}}.Count
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Count
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Count
- uid: ChartTools.LaneNoteCollection`2.#ctor(System.Boolean)
  commentId: M:ChartTools.LaneNoteCollection`2.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: LaneNoteCollection(bool)
  nameWithType: LaneNoteCollection<TNote, TLane>.LaneNoteCollection(bool)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.LaneNoteCollection(bool)
  type: Constructor
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: .ctor
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 15
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public LaneNoteCollection(bool openExclusivity)
    parameters:
    - id: openExclusivity
      type: System.Boolean
    content.vb: Public Sub New(openExclusivity As Boolean)
  overload: ChartTools.LaneNoteCollection`2.#ctor*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).New(Boolean)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).New(Boolean)
  name.vb: New(Boolean)
- uid: ChartTools.LaneNoteCollection`2.Add(`1)
  commentId: M:ChartTools.LaneNoteCollection`2.Add(`1)
  id: Add(`1)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Add(TLane)
  nameWithType: LaneNoteCollection<TNote, TLane>.Add(TLane)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Add(TLane)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Add
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 17
  assemblies:
  - ChartTools
  namespace: ChartTools
  syntax:
    content: public void Add(TLane lane)
    parameters:
    - id: lane
      type: '{TLane}'
    content.vb: Public Sub Add(lane As TLane)
  overload: ChartTools.LaneNoteCollection`2.Add*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Add(TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Add(TLane)
- uid: ChartTools.LaneNoteCollection`2.Add(`0)
  commentId: M:ChartTools.LaneNoteCollection`2.Add(`0)
  id: Add(`0)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Add(TNote)
  nameWithType: LaneNoteCollection<TNote, TLane>.Add(TNote)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Add(TNote)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Add
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 25
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Adds a note to the <xref href="ChartTools.LaneNoteCollection%602" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Adding a note that already exists will overwrite the existing note.
            <p>If <xref href="ChartTools.LaneNoteCollection%602.OpenExclusivity" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, combining an open note with other notes will remove the current ones.</p>
  example: []
  syntax:
    content: public void Add(TNote note)
    parameters:
    - id: note
      type: '{TNote}'
      description: Note to add
    content.vb: Public Sub Add(note As TNote)
  overload: ChartTools.LaneNoteCollection`2.Add*
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.Add({TNote})
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Add(TNote)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Add(TNote)
- uid: ChartTools.LaneNoteCollection`2.Clear
  commentId: M:ChartTools.LaneNoteCollection`2.Clear
  id: Clear
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: LaneNoteCollection<TNote, TLane>.Clear()
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Clear()
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Clear
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 34
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes all items from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: ChartTools.LaneNoteCollection`2.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.Clear
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Clear()
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Clear()
- uid: ChartTools.LaneNoteCollection`2.Contains(`0)
  commentId: M:ChartTools.LaneNoteCollection`2.Contains(`0)
  id: Contains(`0)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Contains(TNote)
  nameWithType: LaneNoteCollection<TNote, TLane>.Contains(TNote)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Contains(TNote)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Contains
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 40
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Determines if any note matches the lane of a given note.
  example: []
  syntax:
    content: public bool Contains(TNote note)
    parameters:
    - id: note
      type: '{TNote}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(note As TNote) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.Contains({TNote})
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Contains(TNote)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Contains(TNote)
- uid: ChartTools.LaneNoteCollection`2.Contains(`1)
  commentId: M:ChartTools.LaneNoteCollection`2.Contains(`1)
  id: Contains(`1)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Contains(TLane)
  nameWithType: LaneNoteCollection<TNote, TLane>.Contains(TLane)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Contains(TLane)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Contains
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 44
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Determines if any note matches a given lane.
  example: []
  syntax:
    content: public bool Contains(TLane lane)
    parameters:
    - id: lane
      type: '{TLane}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(lane As TLane) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Contains*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Contains(TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Contains(TLane)
- uid: ChartTools.LaneNoteCollection`2.Contains(System.Byte)
  commentId: M:ChartTools.LaneNoteCollection`2.Contains(System.Byte)
  id: Contains(System.Byte)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Contains(byte)
  nameWithType: LaneNoteCollection<TNote, TLane>.Contains(byte)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Contains(byte)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Contains
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 48
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Determines if any note matches a given index.
  example: []
  syntax:
    content: public bool Contains(byte index)
    parameters:
    - id: index
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Function Contains(index As Byte) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Contains*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Contains(Byte)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Contains(Byte)
  name.vb: Contains(Byte)
- uid: ChartTools.LaneNoteCollection`2.CopyTo(`0[],System.Int32)
  commentId: M:ChartTools.LaneNoteCollection`2.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: CopyTo(TNote[], int)
  nameWithType: LaneNoteCollection<TNote, TLane>.CopyTo(TNote[], int)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.CopyTo(TNote[], int)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: CopyTo
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 50
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Copies the elements of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  example: []
  syntax:
    content: public void CopyTo(TNote[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{TNote}[]'
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code class="paramref">array</code> at which copying begins.
    content.vb: Public Sub CopyTo(array As TNote(), arrayIndex As Integer)
  overload: ChartTools.LaneNoteCollection`2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">array</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">arrayIndex</code> is less than 0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of elements in the source <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is greater than the available space from <code class="paramref">arrayIndex</code> to the end of the destination <code class="paramref">array</code>.
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.CopyTo({TNote}[],System.Int32)
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).CopyTo(TNote(), Integer)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).CopyTo(TNote(), Integer)
  name.vb: CopyTo(TNote(), Integer)
- uid: ChartTools.LaneNoteCollection`2.Remove(`0)
  commentId: M:ChartTools.LaneNoteCollection`2.Remove(`0)
  id: Remove(`0)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Remove(TNote)
  nameWithType: LaneNoteCollection<TNote, TLane>.Remove(TNote)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Remove(TNote)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Remove
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 56
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes the note that matches the lane of a given note.
  example: []
  syntax:
    content: public bool Remove(TNote note)
    parameters:
    - id: note
      type: '{TNote}'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a matching note was found.
    content.vb: Public Function Remove(note As TNote) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Remove*
  implements:
  - System.Collections.Generic.ICollection{{TNote}}.Remove({TNote})
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Remove(TNote)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Remove(TNote)
- uid: ChartTools.LaneNoteCollection`2.Remove(`1)
  commentId: M:ChartTools.LaneNoteCollection`2.Remove(`1)
  id: Remove(`1)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Remove(TLane)
  nameWithType: LaneNoteCollection<TNote, TLane>.Remove(TLane)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Remove(TLane)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Remove
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 61
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes the note that matches a given lane.
  example: []
  syntax:
    content: public bool Remove(TLane lane)
    parameters:
    - id: lane
      type: '{TLane}'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a matching note was found.
    content.vb: Public Function Remove(lane As TLane) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Remove*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Remove(TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Remove(TLane)
- uid: ChartTools.LaneNoteCollection`2.Remove(System.Byte)
  commentId: M:ChartTools.LaneNoteCollection`2.Remove(System.Byte)
  id: Remove(System.Byte)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: Remove(byte)
  nameWithType: LaneNoteCollection<TNote, TLane>.Remove(byte)
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Remove(byte)
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: Remove
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 66
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Removes the note that matches a given index.
  example: []
  syntax:
    content: public bool Remove(byte index)
    parameters:
    - id: index
      type: System.Byte
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a matching note was found.
    content.vb: Public Function Remove(index As Byte) As Boolean
  overload: ChartTools.LaneNoteCollection`2.Remove*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Remove(Byte)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Remove(Byte)
  name.vb: Remove(Byte)
- uid: ChartTools.LaneNoteCollection`2.Item(`1)
  commentId: P:ChartTools.LaneNoteCollection`2.Item(`1)
  id: Item(`1)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: this[TLane]
  nameWithType: LaneNoteCollection<TNote, TLane>.this[TLane]
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.this[TLane]
  type: Property
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: this[]
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 83
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the note matching a given lane.
  example: []
  syntax:
    content: public TNote? this[TLane lane] { get; }
    parameters:
    - id: lane
      type: '{TLane}'
      description: Lane of the note
    return:
      type: '{TNote}'
      description: Note with the lane if present, otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public ReadOnly Default Property this[](lane As TLane) As TNote
  overload: ChartTools.LaneNoteCollection`2.Item*
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).this[](TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).this[](TLane)
  name.vb: this[](TLane)
- uid: ChartTools.LaneNoteCollection`2.Item(System.Int32)
  commentId: P:ChartTools.LaneNoteCollection`2.Item(System.Int32)
  id: Item(System.Int32)
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: LaneNoteCollection<TNote, TLane>.this[int]
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.this[int]
  type: Property
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: this[]
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 90
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Gets the note at a given index based on order or addition.
  example: []
  syntax:
    content: public TNote this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the note in the collection, not to be confused with <xref href="ChartTools.INote.Index" data-throw-if-not-resolved="false"></xref>.
    return:
      type: '{TNote}'
      description: Note at the index
    content.vb: Public ReadOnly Default Property this[](index As Integer) As TNote
  overload: ChartTools.LaneNoteCollection`2.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: ''
  implements:
  - System.Collections.Generic.IReadOnlyList{{TNote}}.Item(System.Int32)
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).this[](Integer)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).this[](Integer)
  name.vb: this[](Integer)
- uid: ChartTools.LaneNoteCollection`2.GetEnumerator
  commentId: M:ChartTools.LaneNoteCollection`2.GetEnumerator
  id: GetEnumerator
  parent: ChartTools.LaneNoteCollection`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LaneNoteCollection<TNote, TLane>.GetEnumerator()
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.GetEnumerator()
  type: Method
  source:
    remote:
      path: ChartTools/Notes/LaneNoteCollection.cs
      branch: 64-rework-docs-website
      repo: https://github.com/TheBoxyBear/charttools.git
    id: GetEnumerator
    path: ../ChartTools/Notes/LaneNoteCollection.cs
    startLine: 92
  assemblies:
  - ChartTools
  namespace: ChartTools
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<TNote> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TNote}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of TNote)
  overload: ChartTools.LaneNoteCollection`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TNote}}.GetEnumerator
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).GetEnumerator()
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).GetEnumerator()
references:
- uid: ChartTools
  commentId: N:ChartTools
  href: ChartTools.html
  name: ChartTools
  nameWithType: ChartTools
  fullName: ChartTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.ICollection{{TNote}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TNote>
  nameWithType: ICollection<TNote>
  fullName: System.Collections.Generic.ICollection<TNote>
  nameWithType.vb: ICollection(Of TNote)
  fullName.vb: System.Collections.Generic.ICollection(Of TNote)
  name.vb: ICollection(Of TNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TNote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{{TNote}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<TNote>
  nameWithType: IReadOnlyList<TNote>
  fullName: System.Collections.Generic.IReadOnlyList<TNote>
  nameWithType.vb: IReadOnlyList(Of TNote)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TNote)
  name.vb: IReadOnlyList(Of TNote)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: TNote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{{TNote}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TNote>
  nameWithType: IReadOnlyCollection<TNote>
  fullName: System.Collections.Generic.IReadOnlyCollection<TNote>
  nameWithType.vb: IReadOnlyCollection(Of TNote)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TNote)
  name.vb: IReadOnlyCollection(Of TNote)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: TNote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TNote}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TNote>
  nameWithType: IEnumerable<TNote>
  fullName: System.Collections.Generic.IEnumerable<TNote>
  nameWithType.vb: IEnumerable(Of TNote)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TNote)
  name.vb: IEnumerable(Of TNote)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ChartTools.LaneNoteCollection`2.ChartTools.Tools.PropertyMerger.Merge``1(System.Boolean,System.Boolean,ChartTools.LaneNoteCollection{{TNote},{TLane}}[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  parent: ChartTools.Tools.PropertyMerger
  definition: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<LaneNoteCollection<TNote, TLane>>(LaneNoteCollection<TNote, TLane>, bool, bool, params LaneNoteCollection<TNote, TLane>[])
  nameWithType: PropertyMerger.Merge<LaneNoteCollection<TNote, TLane>>(LaneNoteCollection<TNote, TLane>, bool, bool, params LaneNoteCollection<TNote, TLane>[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<ChartTools.LaneNoteCollection<TNote, TLane>>(ChartTools.LaneNoteCollection<TNote, TLane>, bool, bool, params ChartTools.LaneNoteCollection<TNote, TLane>[])
  nameWithType.vb: PropertyMerger.Merge(Of LaneNoteCollection(Of TNote, TLane))(LaneNoteCollection(Of TNote, TLane), Boolean, Boolean, ParamArray LaneNoteCollection(Of TNote, TLane)())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of ChartTools.LaneNoteCollection(Of TNote, TLane))(ChartTools.LaneNoteCollection(Of TNote, TLane), Boolean, Boolean, ParamArray ChartTools.LaneNoteCollection(Of TNote, TLane)())
  name.vb: Merge(Of LaneNoteCollection(Of TNote, TLane))(LaneNoteCollection(Of TNote, TLane), Boolean, Boolean, ParamArray LaneNoteCollection(Of TNote, TLane)())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.LaneNoteCollection{`0,`1},System.Boolean,System.Boolean,ChartTools.LaneNoteCollection{`0,`1}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: '>'
  - name: '>'
  - name: (
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(ChartTools.LaneNoteCollection{`0,`1},System.Boolean,System.Boolean,ChartTools.LaneNoteCollection{`0,`1}[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: )
  - name: )
  - name: (
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: )
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection{`0}.ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Predicate{{TNote}})
  commentId: M:ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  parent: ChartTools.Extensions.Linq.CollectionExtensions
  definition: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  name: RemoveWhere<TNote>(ICollection<TNote>, Predicate<TNote>)
  nameWithType: CollectionExtensions.RemoveWhere<TNote>(ICollection<TNote>, Predicate<TNote>)
  fullName: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere<TNote>(System.Collections.Generic.ICollection<TNote>, System.Predicate<TNote>)
  nameWithType.vb: CollectionExtensions.RemoveWhere(Of TNote)(ICollection(Of TNote), Predicate(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere(Of TNote)(System.Collections.Generic.ICollection(Of TNote), System.Predicate(Of TNote))
  name.vb: RemoveWhere(Of TNote)(ICollection(Of TNote), Predicate(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{`0},System.Predicate{`0})
    name: RemoveWhere
    href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{`0},System.Predicate{`0})
    name: RemoveWhere
    href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(ChartTools.Extensions.EqualityComparison{{TNote}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  name: Distinct<TNote>(IEnumerable<TNote>, EqualityComparison<TNote>)
  nameWithType: EnumerableExtensions.Distinct<TNote>(IEnumerable<TNote>, EqualityComparison<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct<TNote>(System.Collections.Generic.IEnumerable<TNote>, ChartTools.Extensions.EqualityComparison<TNote>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of TNote)(IEnumerable(Of TNote), EqualityComparison(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), ChartTools.Extensions.EqualityComparison(Of TNote))
  name.vb: Distinct(Of TNote)(IEnumerable(Of TNote), EqualityComparison(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{`0},ChartTools.Extensions.EqualityComparison{`0})
    name: Distinct
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.EqualityComparison`1
    name: EqualityComparison
    href: ChartTools.Extensions.EqualityComparison-1.html
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{`0},ChartTools.Extensions.EqualityComparison{`0})
    name: Distinct
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.EqualityComparison`1
    name: EqualityComparison
    href: ChartTools.Extensions.EqualityComparison-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Predicate{{TNote}},{TNote},System.Boolean@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  name: FirstOrDefault<TNote>(IEnumerable<TNote>, Predicate<TNote>, TNote, out bool)
  nameWithType: EnumerableExtensions.FirstOrDefault<TNote>(IEnumerable<TNote>, Predicate<TNote>, TNote, out bool)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault<TNote>(System.Collections.Generic.IEnumerable<TNote>, System.Predicate<TNote>, TNote, out bool)
  nameWithType.vb: EnumerableExtensions.FirstOrDefault(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote, Boolean)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), System.Predicate(Of TNote), TNote, Boolean)
  name.vb: FirstOrDefault(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote, Boolean)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0,System.Boolean@)
    name: FirstOrDefault
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0,System.Boolean@)
    name: FirstOrDefault
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Func{{TNote},{TKey}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ManyMaxBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  nameWithType: EnumerableExtensions.ManyMaxBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy<TNote, TKey>(System.Collections.Generic.IEnumerable<TNote>, System.Func<TNote, TKey>)
  nameWithType.vb: EnumerableExtensions.ManyMaxBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy(Of TNote, TKey)(System.Collections.Generic.IEnumerable(Of TNote), System.Func(Of TNote, TKey))
  name.vb: ManyMaxBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ManyMaxBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ManyMaxBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Func{{TNote},{TKey}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ManyMinBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  nameWithType: EnumerableExtensions.ManyMinBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy<TNote, TKey>(System.Collections.Generic.IEnumerable<TNote>, System.Func<TNote, TKey>)
  nameWithType.vb: EnumerableExtensions.ManyMinBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy(Of TNote, TKey)(System.Collections.Generic.IEnumerable(Of TNote), System.Func(Of TNote, TKey))
  name.vb: ManyMinBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ManyMinBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ManyMinBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  name: NonNull<TNote>(IEnumerable<TNote>)
  nameWithType: EnumerableExtensions.NonNull<TNote>(IEnumerable<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull<TNote>(System.Collections.Generic.IEnumerable<TNote>)
  nameWithType.vb: EnumerableExtensions.NonNull(Of TNote)(IEnumerable(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote))
  name.vb: NonNull(Of TNote)(IEnumerable(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{`0})
    name: NonNull
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{`0})
    name: NonNull
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1({TNote})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  name: RelativeLoop<TNote>(IEnumerable<TNote>, TNote)
  nameWithType: EnumerableExtensions.RelativeLoop<TNote>(IEnumerable<TNote>, TNote)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop<TNote>(System.Collections.Generic.IEnumerable<TNote>, TNote)
  nameWithType.vb: EnumerableExtensions.RelativeLoop(Of TNote)(IEnumerable(Of TNote), TNote)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), TNote)
  name.vb: RelativeLoop(Of TNote)(IEnumerable(Of TNote), TNote)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{`0},`0)
    name: RelativeLoop
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - name: TNote
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{`0},`0)
    name: RelativeLoop
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  name: RelativeLoopSkipFirst<TNote>(IEnumerable<TNote>)
  nameWithType: EnumerableExtensions.RelativeLoopSkipFirst<TNote>(IEnumerable<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst<TNote>(System.Collections.Generic.IEnumerable<TNote>)
  nameWithType.vb: EnumerableExtensions.RelativeLoopSkipFirst(Of TNote)(IEnumerable(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote))
  name.vb: RelativeLoopSkipFirst(Of TNote)(IEnumerable(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{`0})
    name: RelativeLoopSkipFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{`0})
    name: RelativeLoopSkipFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Predicate{{TNote}},System.Predicate{{TNote}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  name: RemoveSection<TNote>(IEnumerable<TNote>, Predicate<TNote>, Predicate<TNote>)
  nameWithType: EnumerableExtensions.RemoveSection<TNote>(IEnumerable<TNote>, Predicate<TNote>, Predicate<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection<TNote>(System.Collections.Generic.IEnumerable<TNote>, System.Predicate<TNote>, System.Predicate<TNote>)
  nameWithType.vb: EnumerableExtensions.RemoveSection(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), Predicate(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), System.Predicate(Of TNote), System.Predicate(Of TNote))
  name.vb: RemoveSection(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), Predicate(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0})
    name: RemoveSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},System.Predicate{`0})
    name: RemoveSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Predicate{{TNote}},{TNote})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  name: Replace<TNote>(IEnumerable<TNote>, Predicate<TNote>, TNote)
  nameWithType: EnumerableExtensions.Replace<TNote>(IEnumerable<TNote>, Predicate<TNote>, TNote)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Replace<TNote>(System.Collections.Generic.IEnumerable<TNote>, System.Predicate<TNote>, TNote)
  nameWithType.vb: EnumerableExtensions.Replace(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Replace(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), System.Predicate(Of TNote), TNote)
  name.vb: Replace(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0)
    name: Replace
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - name: TNote
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0)
    name: Replace
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(ChartTools.Extensions.Linq.SectionReplacement{{TNote}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  name: ReplaceSection<TNote>(IEnumerable<TNote>, SectionReplacement<TNote>)
  nameWithType: EnumerableExtensions.ReplaceSection<TNote>(IEnumerable<TNote>, SectionReplacement<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection<TNote>(System.Collections.Generic.IEnumerable<TNote>, ChartTools.Extensions.Linq.SectionReplacement<TNote>)
  nameWithType.vb: EnumerableExtensions.ReplaceSection(Of TNote)(IEnumerable(Of TNote), SectionReplacement(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), ChartTools.Extensions.Linq.SectionReplacement(Of TNote))
  name.vb: ReplaceSection(Of TNote)(IEnumerable(Of TNote), SectionReplacement(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{`0},ChartTools.Extensions.Linq.SectionReplacement{`0})
    name: ReplaceSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{`0},ChartTools.Extensions.Linq.SectionReplacement{`0})
    name: ReplaceSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{{TNote}}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  name: ReplaceSections<TNote>(IEnumerable<TNote>, IEnumerable<SectionReplacement<TNote>>)
  nameWithType: EnumerableExtensions.ReplaceSections<TNote>(IEnumerable<TNote>, IEnumerable<SectionReplacement<TNote>>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections<TNote>(System.Collections.Generic.IEnumerable<TNote>, System.Collections.Generic.IEnumerable<ChartTools.Extensions.Linq.SectionReplacement<TNote>>)
  nameWithType.vb: EnumerableExtensions.ReplaceSections(Of TNote)(IEnumerable(Of TNote), IEnumerable(Of SectionReplacement(Of TNote)))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), System.Collections.Generic.IEnumerable(Of ChartTools.Extensions.Linq.SectionReplacement(Of TNote)))
  name.vb: ReplaceSections(Of TNote)(IEnumerable(Of TNote), IEnumerable(Of SectionReplacement(Of TNote)))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{`0}})
    name: ReplaceSections
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: TNote
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{`0}})
    name: ReplaceSections
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  name: ToAsyncEnumerable<TNote>(IEnumerable<TNote>)
  nameWithType: EnumerableExtensions.ToAsyncEnumerable<TNote>(IEnumerable<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable<TNote>(System.Collections.Generic.IEnumerable<TNote>)
  nameWithType.vb: EnumerableExtensions.ToAsyncEnumerable(Of TNote)(IEnumerable(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote))
  name.vb: ToAsyncEnumerable(Of TNote)(IEnumerable(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{`0})
    name: ToAsyncEnumerable
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{`0})
    name: ToAsyncEnumerable
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1({TNote}@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  name: TryGetFirst<TNote>(IEnumerable<TNote>, out TNote)
  nameWithType: EnumerableExtensions.TryGetFirst<TNote>(IEnumerable<TNote>, out TNote)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst<TNote>(System.Collections.Generic.IEnumerable<TNote>, out TNote)
  nameWithType.vb: EnumerableExtensions.TryGetFirst(Of TNote)(IEnumerable(Of TNote), TNote)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), TNote)
  name.vb: TryGetFirst(Of TNote)(IEnumerable(Of TNote), TNote)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{`0},`0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TNote
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{`0},`0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Predicate{{TNote}},{TNote}@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  name: TryGetFirst<TNote>(IEnumerable<TNote>, Predicate<TNote>, out TNote)
  nameWithType: EnumerableExtensions.TryGetFirst<TNote>(IEnumerable<TNote>, Predicate<TNote>, out TNote)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst<TNote>(System.Collections.Generic.IEnumerable<TNote>, System.Predicate<TNote>, out TNote)
  nameWithType.vb: EnumerableExtensions.TryGetFirst(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote), System.Predicate(Of TNote), TNote)
  name.vb: TryGetFirst(Of TNote)(IEnumerable(Of TNote), Predicate(Of TNote), TNote)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TNote
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{`0},System.Predicate{`0},`0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  name: Unique<TNote>(IEnumerable<TNote>)
  nameWithType: EnumerableExtensions.Unique<TNote>(IEnumerable<TNote>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Unique<TNote>(System.Collections.Generic.IEnumerable<TNote>)
  nameWithType.vb: EnumerableExtensions.Unique(Of TNote)(IEnumerable(Of TNote))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Unique(Of TNote)(System.Collections.Generic.IEnumerable(Of TNote))
  name.vb: Unique(Of TNote)(IEnumerable(Of TNote))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{`0})
    name: Unique
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TNote
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{`0})
    name: Unique
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Func{{TNote},{TKey}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: UniqueBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  nameWithType: EnumerableExtensions.UniqueBy<TNote, TKey>(IEnumerable<TNote>, Func<TNote, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy<TNote, TKey>(System.Collections.Generic.IEnumerable<TNote>, System.Func<TNote, TKey>)
  nameWithType.vb: EnumerableExtensions.UniqueBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy(Of TNote, TKey)(System.Collections.Generic.IEnumerable(Of TNote), System.Func(Of TNote, TKey))
  name.vb: UniqueBy(Of TNote, TKey)(IEnumerable(Of TNote), Func(Of TNote, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: UniqueBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TNote
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: UniqueBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.IEnumerable.ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1({TResult}@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
  parent: ChartTools.Extensions.Linq.EnumerableExtensions
  definition: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  name: TryGetFirstOfType<TResult>(IEnumerable, out TResult)
  nameWithType: EnumerableExtensions.TryGetFirstOfType<TResult>(IEnumerable, out TResult)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType<TResult>(System.Collections.IEnumerable, out TResult)
  nameWithType.vb: EnumerableExtensions.TryGetFirstOfType(Of TResult)(IEnumerable, TResult)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType(Of TResult)(System.Collections.IEnumerable, TResult)
  name.vb: TryGetFirstOfType(Of TResult)(IEnumerable, TResult)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
    name: TryGetFirstOfType
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TResult
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
    name: TryGetFirstOfType
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  commentId: M:ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
  isExternal: true
  href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  name: Merge<T>(T, bool, bool, params T[])
  nameWithType: PropertyMerger.Merge<T>(T, bool, bool, params T[])
  fullName: ChartTools.Tools.PropertyMerger.Merge<T>(T, bool, bool, params T[])
  nameWithType.vb: PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  fullName.vb: ChartTools.Tools.PropertyMerger.Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  name.vb: Merge(Of T)(T, Boolean, Boolean, ParamArray T())
  spec.csharp:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ChartTools.Tools.PropertyMerger.Merge``1(``0,System.Boolean,System.Boolean,``0[])
    name: Merge
    href: ChartTools.Tools.PropertyMerger.html#ChartTools_Tools_PropertyMerger_Merge__1___0_System_Boolean_System_Boolean___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ChartTools.Tools.PropertyMerger
  commentId: T:ChartTools.Tools.PropertyMerger
  parent: ChartTools.Tools
  href: ChartTools.Tools.PropertyMerger.html
  name: PropertyMerger
  nameWithType: PropertyMerger
  fullName: ChartTools.Tools.PropertyMerger
- uid: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  commentId: M:ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  name: RemoveWhere<T>(ICollection<T>, Predicate<T>)
  nameWithType: CollectionExtensions.RemoveWhere<T>(ICollection<T>, Predicate<T>)
  fullName: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere<T>(System.Collections.Generic.ICollection<T>, System.Predicate<T>)
  nameWithType.vb: CollectionExtensions.RemoveWhere(Of T)(ICollection(Of T), Predicate(Of T))
  fullName.vb: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere(Of T)(System.Collections.Generic.ICollection(Of T), System.Predicate(Of T))
  name.vb: RemoveWhere(Of T)(ICollection(Of T), Predicate(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
    name: RemoveWhere
    href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
    name: RemoveWhere
    href: ChartTools.Extensions.Linq.CollectionExtensions.html#ChartTools_Extensions_Linq_CollectionExtensions_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.CollectionExtensions
  commentId: T:ChartTools.Extensions.Linq.CollectionExtensions
  parent: ChartTools.Extensions.Linq
  href: ChartTools.Extensions.Linq.CollectionExtensions.html
  name: CollectionExtensions
  nameWithType: CollectionExtensions
  fullName: ChartTools.Extensions.Linq.CollectionExtensions
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  name: Distinct<T>(IEnumerable<T>, EqualityComparison<T>)
  nameWithType: EnumerableExtensions.Distinct<T>(IEnumerable<T>, EqualityComparison<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct<T>(System.Collections.Generic.IEnumerable<T>, ChartTools.Extensions.EqualityComparison<T>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of T)(IEnumerable(Of T), EqualityComparison(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct(Of T)(System.Collections.Generic.IEnumerable(Of T), ChartTools.Extensions.EqualityComparison(Of T))
  name.vb: Distinct(Of T)(IEnumerable(Of T), EqualityComparison(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
    name: Distinct
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.EqualityComparison`1
    name: EqualityComparison
    href: ChartTools.Extensions.EqualityComparison-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.EqualityComparison{``0})
    name: Distinct
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Distinct__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_EqualityComparison___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.EqualityComparison`1
    name: EqualityComparison
    href: ChartTools.Extensions.EqualityComparison-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions
  commentId: T:ChartTools.Extensions.Linq.EnumerableExtensions
  parent: ChartTools.Extensions.Linq
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  name: FirstOrDefault<T>(IEnumerable<T>, Predicate<T>, T, out bool)
  nameWithType: EnumerableExtensions.FirstOrDefault<T>(IEnumerable<T>, Predicate<T>, T, out bool)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, T, out bool)
  nameWithType.vb: EnumerableExtensions.FirstOrDefault(Of T)(IEnumerable(Of T), Predicate(Of T), T, Boolean)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), T, Boolean)
  name.vb: FirstOrDefault(Of T)(IEnumerable(Of T), Predicate(Of T), T, Boolean)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
    name: FirstOrDefault
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0,System.Boolean@)
    name: FirstOrDefault
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_FirstOrDefault__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_System_Boolean__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ManyMaxBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: EnumerableExtensions.ManyMaxBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: EnumerableExtensions.ManyMaxBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: ManyMaxBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ManyMaxBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ManyMaxBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMaxBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ManyMinBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: EnumerableExtensions.ManyMinBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: EnumerableExtensions.ManyMinBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: ManyMinBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ManyMinBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ManyMinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ManyMinBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ManyMinBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  name: NonNull<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.NonNull<T>(IEnumerable<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.NonNull(Of T)(IEnumerable(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: NonNull(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
    name: NonNull
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.NonNull``1(System.Collections.Generic.IEnumerable{``0})
    name: NonNull
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_NonNull__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  name: RelativeLoop<T>(IEnumerable<T>, T)
  nameWithType: EnumerableExtensions.RelativeLoop<T>(IEnumerable<T>, T)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop<T>(System.Collections.Generic.IEnumerable<T>, T)
  nameWithType.vb: EnumerableExtensions.RelativeLoop(Of T)(IEnumerable(Of T), T)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: RelativeLoop(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: RelativeLoop
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoop``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: RelativeLoop
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoop__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  name: RelativeLoopSkipFirst<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.RelativeLoopSkipFirst<T>(IEnumerable<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.RelativeLoopSkipFirst(Of T)(IEnumerable(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: RelativeLoopSkipFirst(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
    name: RelativeLoopSkipFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RelativeLoopSkipFirst``1(System.Collections.Generic.IEnumerable{``0})
    name: RelativeLoopSkipFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RelativeLoopSkipFirst__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  name: RemoveSection<T>(IEnumerable<T>, Predicate<T>, Predicate<T>)
  nameWithType: EnumerableExtensions.RemoveSection<T>(IEnumerable<T>, Predicate<T>, Predicate<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, System.Predicate<T>)
  nameWithType.vb: EnumerableExtensions.RemoveSection(Of T)(IEnumerable(Of T), Predicate(Of T), Predicate(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), System.Predicate(Of T))
  name.vb: RemoveSection(Of T)(IEnumerable(Of T), Predicate(Of T), Predicate(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
    name: RemoveSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.RemoveSection``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Predicate{``0})
    name: RemoveSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_RemoveSection__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__System_Predicate___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  name: Replace<T>(IEnumerable<T>, Predicate<T>, T)
  nameWithType: EnumerableExtensions.Replace<T>(IEnumerable<T>, Predicate<T>, T)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Replace<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, T)
  nameWithType.vb: EnumerableExtensions.Replace(Of T)(IEnumerable(Of T), Predicate(Of T), T)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Replace(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), T)
  name.vb: Replace(Of T)(IEnumerable(Of T), Predicate(Of T), T)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
    name: Replace
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
    name: Replace
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  name: ReplaceSection<T>(IEnumerable<T>, SectionReplacement<T>)
  nameWithType: EnumerableExtensions.ReplaceSection<T>(IEnumerable<T>, SectionReplacement<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection<T>(System.Collections.Generic.IEnumerable<T>, ChartTools.Extensions.Linq.SectionReplacement<T>)
  nameWithType.vb: EnumerableExtensions.ReplaceSection(Of T)(IEnumerable(Of T), SectionReplacement(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection(Of T)(System.Collections.Generic.IEnumerable(Of T), ChartTools.Extensions.Linq.SectionReplacement(Of T))
  name.vb: ReplaceSection(Of T)(IEnumerable(Of T), SectionReplacement(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
    name: ReplaceSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSection``1(System.Collections.Generic.IEnumerable{``0},ChartTools.Extensions.Linq.SectionReplacement{``0})
    name: ReplaceSection
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSection__1_System_Collections_Generic_IEnumerable___0__ChartTools_Extensions_Linq_SectionReplacement___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  name: ReplaceSections<T>(IEnumerable<T>, IEnumerable<SectionReplacement<T>>)
  nameWithType: EnumerableExtensions.ReplaceSections<T>(IEnumerable<T>, IEnumerable<SectionReplacement<T>>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<ChartTools.Extensions.Linq.SectionReplacement<T>>)
  nameWithType.vb: EnumerableExtensions.ReplaceSections(Of T)(IEnumerable(Of T), IEnumerable(Of SectionReplacement(Of T)))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of ChartTools.Extensions.Linq.SectionReplacement(Of T)))
  name.vb: ReplaceSections(Of T)(IEnumerable(Of T), IEnumerable(Of SectionReplacement(Of T)))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
    name: ReplaceSections
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ReplaceSections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{ChartTools.Extensions.Linq.SectionReplacement{``0}})
    name: ReplaceSections
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ReplaceSections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_ChartTools_Extensions_Linq_SectionReplacement___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ChartTools.Extensions.Linq.SectionReplacement`1
    name: SectionReplacement
    href: ChartTools.Extensions.Linq.SectionReplacement-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  name: ToAsyncEnumerable<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.ToAsyncEnumerable<T>(IEnumerable<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.ToAsyncEnumerable(Of T)(IEnumerable(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToAsyncEnumerable(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: ToAsyncEnumerable
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: ToAsyncEnumerable
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_ToAsyncEnumerable__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  name: TryGetFirst<T>(IEnumerable<T>, out T)
  nameWithType: EnumerableExtensions.TryGetFirst<T>(IEnumerable<T>, out T)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst<T>(System.Collections.Generic.IEnumerable<T>, out T)
  nameWithType.vb: EnumerableExtensions.TryGetFirst(Of T)(IEnumerable(Of T), T)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: TryGetFirst(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  name: TryGetFirst<T>(IEnumerable<T>, Predicate<T>, out T)
  nameWithType: EnumerableExtensions.TryGetFirst<T>(IEnumerable<T>, Predicate<T>, out T)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, out T)
  nameWithType.vb: EnumerableExtensions.TryGetFirst(Of T)(IEnumerable(Of T), Predicate(Of T), T)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), T)
  name.vb: TryGetFirst(Of T)(IEnumerable(Of T), Predicate(Of T), T)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirst``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
    name: TryGetFirst
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirst__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  name: Unique<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.Unique<T>(IEnumerable<T>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.Unique<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.Unique(Of T)(IEnumerable(Of T))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.Unique(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Unique(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
    name: Unique
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.Unique``1(System.Collections.Generic.IEnumerable{``0})
    name: Unique
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_Unique__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: UniqueBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: EnumerableExtensions.UniqueBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: EnumerableExtensions.UniqueBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: UniqueBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: UniqueBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.UniqueBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: UniqueBy
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_UniqueBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
  commentId: M:ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
  isExternal: true
  href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  name: TryGetFirstOfType<TResult>(IEnumerable, out TResult)
  nameWithType: EnumerableExtensions.TryGetFirstOfType<TResult>(IEnumerable, out TResult)
  fullName: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType<TResult>(System.Collections.IEnumerable, out TResult)
  nameWithType.vb: EnumerableExtensions.TryGetFirstOfType(Of TResult)(IEnumerable, TResult)
  fullName.vb: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType(Of TResult)(System.Collections.IEnumerable, TResult)
  name.vb: TryGetFirstOfType(Of TResult)(IEnumerable, TResult)
  spec.csharp:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
    name: TryGetFirstOfType
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TResult
  - name: )
  spec.vb:
  - uid: ChartTools.Extensions.Linq.EnumerableExtensions.TryGetFirstOfType``1(System.Collections.IEnumerable,``0@)
    name: TryGetFirstOfType
    href: ChartTools.Extensions.Linq.EnumerableExtensions.html#ChartTools_Extensions_Linq_EnumerableExtensions_TryGetFirstOfType__1_System_Collections_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: ChartTools.Tools
  commentId: N:ChartTools.Tools
  href: ChartTools.html
  name: ChartTools.Tools
  nameWithType: ChartTools.Tools
  fullName: ChartTools.Tools
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Tools
    name: Tools
    href: ChartTools.Tools.html
- uid: ChartTools.Extensions.Linq
  commentId: N:ChartTools.Extensions.Linq
  href: ChartTools.html
  name: ChartTools.Extensions.Linq
  nameWithType: ChartTools.Extensions.Linq
  fullName: ChartTools.Extensions.Linq
  spec.csharp:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Extensions
    name: Extensions
    href: ChartTools.Extensions.html
  - name: .
  - uid: ChartTools.Extensions.Linq
    name: Linq
    href: ChartTools.Extensions.Linq.html
  spec.vb:
  - uid: ChartTools
    name: ChartTools
    href: ChartTools.html
  - name: .
  - uid: ChartTools.Extensions
    name: Extensions
    href: ChartTools.Extensions.html
  - name: .
  - uid: ChartTools.Extensions.Linq
    name: Linq
    href: ChartTools.Extensions.Linq.html
- uid: ChartTools.LaneNoteCollection`2.OpenExclusivity*
  commentId: Overload:ChartTools.LaneNoteCollection`2.OpenExclusivity
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_OpenExclusivity
  name: OpenExclusivity
  nameWithType: LaneNoteCollection<TNote, TLane>.OpenExclusivity
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.OpenExclusivity
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).OpenExclusivity
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).OpenExclusivity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ChartTools.LaneNoteCollection`2.Count*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Count
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Count
  name: Count
  nameWithType: LaneNoteCollection<TNote, TLane>.Count
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Count
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Count
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Count
- uid: System.Collections.Generic.ICollection{{TNote}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<TNote>.Count
  fullName: System.Collections.Generic.ICollection<TNote>.Count
  nameWithType.vb: ICollection(Of TNote).Count
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).Count
- uid: System.Collections.Generic.IReadOnlyCollection{{TNote}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{TNote}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<TNote>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<TNote>.Count
  nameWithType.vb: IReadOnlyCollection(Of TNote).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TNote).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: ChartTools.LaneNoteCollection`2.#ctor*
  commentId: Overload:ChartTools.LaneNoteCollection`2.#ctor
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2__ctor_System_Boolean_
  name: LaneNoteCollection
  nameWithType: LaneNoteCollection<TNote, TLane>.LaneNoteCollection
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.LaneNoteCollection
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).New
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).New
  name.vb: New
- uid: ChartTools.LaneNoteCollection`2.Add*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Add
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Add__1_
  name: Add
  nameWithType: LaneNoteCollection<TNote, TLane>.Add
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Add
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Add
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Add
- uid: '{TLane}'
  commentId: '!:TLane'
  definition: TLane
  name: TLane
  nameWithType: TLane
  fullName: TLane
- uid: TLane
  name: TLane
  nameWithType: TLane
  fullName: TLane
- uid: ChartTools.LaneNoteCollection`2
  commentId: T:ChartTools.LaneNoteCollection`2
  href: ChartTools.LaneNoteCollection-2.html
  name: LaneNoteCollection<TNote, TLane>
  nameWithType: LaneNoteCollection<TNote, TLane>
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane)
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane)
  name.vb: LaneNoteCollection(Of TNote, TLane)
  spec.csharp:
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: <
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: '>'
  spec.vb:
  - uid: ChartTools.LaneNoteCollection`2
    name: LaneNoteCollection
    href: ChartTools.LaneNoteCollection-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: ','
  - name: " "
  - name: TLane
  - name: )
- uid: ChartTools.LaneNoteCollection`2.OpenExclusivity
  commentId: P:ChartTools.LaneNoteCollection`2.OpenExclusivity
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_OpenExclusivity
  name: OpenExclusivity
  nameWithType: LaneNoteCollection<TNote, TLane>.OpenExclusivity
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.OpenExclusivity
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).OpenExclusivity
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).OpenExclusivity
- uid: System.Collections.Generic.ICollection{{TNote}}.Add({TNote})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(TNote)
  nameWithType: ICollection<TNote>.Add(TNote)
  fullName: System.Collections.Generic.ICollection<TNote>.Add(TNote)
  nameWithType.vb: ICollection(Of TNote).Add(TNote)
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).Add(TNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: TNote
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: TNote
  - name: )
- uid: '{TNote}'
  commentId: '!:TNote'
  definition: TNote
  name: TNote
  nameWithType: TNote
  fullName: TNote
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: TNote
  name: TNote
  nameWithType: TNote
  fullName: TNote
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: ChartTools.LaneNoteCollection`2.Clear*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Clear
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Clear
  name: Clear
  nameWithType: LaneNoteCollection<TNote, TLane>.Clear
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Clear
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Clear
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Clear
- uid: System.Collections.Generic.ICollection{{TNote}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<TNote>.Clear()
  fullName: System.Collections.Generic.ICollection<TNote>.Clear()
  nameWithType.vb: ICollection(Of TNote).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: ChartTools.LaneNoteCollection`2.Contains*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Contains
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Contains__0_
  name: Contains
  nameWithType: LaneNoteCollection<TNote, TLane>.Contains
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Contains
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Contains
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Contains
- uid: System.Collections.Generic.ICollection{{TNote}}.Contains({TNote})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(TNote)
  nameWithType: ICollection<TNote>.Contains(TNote)
  fullName: System.Collections.Generic.ICollection<TNote>.Contains(TNote)
  nameWithType.vb: ICollection(Of TNote).Contains(TNote)
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).Contains(TNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: TNote
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: TNote
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Array
  commentId: T:System.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: ChartTools.LaneNoteCollection`2.CopyTo*
  commentId: Overload:ChartTools.LaneNoteCollection`2.CopyTo
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: LaneNoteCollection<TNote, TLane>.CopyTo
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.CopyTo
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).CopyTo
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).CopyTo
- uid: System.Collections.Generic.ICollection{{TNote}}.CopyTo({TNote}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(TNote[], int)
  nameWithType: ICollection<TNote>.CopyTo(TNote[], int)
  fullName: System.Collections.Generic.ICollection<TNote>.CopyTo(TNote[], int)
  nameWithType.vb: ICollection(Of TNote).CopyTo(TNote(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).CopyTo(TNote(), Integer)
  name.vb: CopyTo(TNote(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: TNote
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: TNote
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{TNote}[]'
  isExternal: true
  name: TNote[]
  nameWithType: TNote[]
  fullName: TNote[]
  nameWithType.vb: TNote()
  fullName.vb: TNote()
  name.vb: TNote()
  spec.csharp:
  - name: TNote
  - name: '['
  - name: ']'
  spec.vb:
  - name: TNote
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ChartTools.LaneNoteCollection`2.Remove*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Remove
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Remove__0_
  name: Remove
  nameWithType: LaneNoteCollection<TNote, TLane>.Remove
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.Remove
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).Remove
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).Remove
- uid: System.Collections.Generic.ICollection{{TNote}}.Remove({TNote})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{TNote}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(TNote)
  nameWithType: ICollection<TNote>.Remove(TNote)
  fullName: System.Collections.Generic.ICollection<TNote>.Remove(TNote)
  nameWithType.vb: ICollection(Of TNote).Remove(TNote)
  fullName.vb: System.Collections.Generic.ICollection(Of TNote).Remove(TNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: TNote
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: TNote
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: ChartTools.LaneNoteCollection`2.Item*
  commentId: Overload:ChartTools.LaneNoteCollection`2.Item
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_Item__1_
  name: this
  nameWithType: LaneNoteCollection<TNote, TLane>.this
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.this
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).this[]
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).this[]
  name.vb: this[]
- uid: ChartTools.INote.Index
  commentId: P:ChartTools.INote.Index
  parent: ChartTools.INote
  href: ChartTools.INote.html#ChartTools_INote_Index
  name: Index
  nameWithType: INote.Index
  fullName: ChartTools.INote.Index
- uid: System.Collections.Generic.IReadOnlyList{{TNote}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{{TNote}}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<TNote>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<TNote>.this[int]
  nameWithType.vb: IReadOnlyList(Of TNote).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TNote).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ChartTools.INote
  commentId: T:ChartTools.INote
  parent: ChartTools
  href: ChartTools.INote.html
  name: INote
  nameWithType: INote
  fullName: ChartTools.INote
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ChartTools.LaneNoteCollection`2.GetEnumerator*
  commentId: Overload:ChartTools.LaneNoteCollection`2.GetEnumerator
  href: ChartTools.LaneNoteCollection-2.html#ChartTools_LaneNoteCollection_2_GetEnumerator
  name: GetEnumerator
  nameWithType: LaneNoteCollection<TNote, TLane>.GetEnumerator
  fullName: ChartTools.LaneNoteCollection<TNote, TLane>.GetEnumerator
  nameWithType.vb: LaneNoteCollection(Of TNote, TLane).GetEnumerator
  fullName.vb: ChartTools.LaneNoteCollection(Of TNote, TLane).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TNote}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TNote}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TNote>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TNote>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TNote).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TNote).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{TNote}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<TNote>
  nameWithType: IEnumerator<TNote>
  fullName: System.Collections.Generic.IEnumerator<TNote>
  nameWithType.vb: IEnumerator(Of TNote)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TNote)
  name.vb: IEnumerator(Of TNote)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: TNote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: TNote
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
